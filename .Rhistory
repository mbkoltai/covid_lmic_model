select(!rollingmean) %>% pivot_longer(!c(date,year,date,week,year_week))) + #,aes(x=year_week,y=value,group=name,fill=name)
# geom_bar(stat="identity",position=position_dodge(width=0.75),size=0.2) +
geom_point(aes(x=year_week,y=value,group=name,color=name),pch="-",size=10) +
geom_vline(xintercept=(1:length(unique(weekly_acled_burial_comparison$year_week)))-0.5,size=0.3,linetype="dashed") +
theme_bw() + standard_theme + theme(axis.text.x = element_text(vjust=0.5),legend.position="bottom") + labs(fill="") +
scale_y_continuous(expand=expansion(0.01,0),breaks=(0:20)*10) + xlab("year/week") + ylab("number/day") +
ggtitle("number of burials compared to deaths due to political violence/terror attacks")
ggplot(subset(weekly_acled_burial_comparison,date>=as.Date("2019-01-01") & date<=as.Date("2020-10-01")) %>%
select(!rollingmean) %>% pivot_longer(!c(date,year,date,week,year_week))) + #,aes(x=year_week,y=value,group=name,fill=name)
# geom_bar(stat="identity",position=position_dodge(width=0.75),size=0.2) +
geom_point(aes(x=year_week,y=value,group=name,color=name),pch="-",size=10) +
geom_vline(xintercept=(1:length(unique(weekly_acled_burial_comparison$year_week)))-0.5,size=0.1,linetype="dashed") +
theme_bw() + standard_theme + theme(axis.text.x = element_text(vjust=0.5),legend.position="bottom") + labs(fill="") +
scale_y_continuous(expand=expansion(0.01,0),breaks=(0:20)*10) + xlab("year/week") + ylab("number/day") +
ggtitle("number of burials compared to deaths due to political violence/terror attacks")
ggplot(subset(weekly_acled_burial_comparison,date>=as.Date("2019-01-01") & date<=as.Date("2020-10-01")) %>%
select(!rollingmean) %>% pivot_longer(!c(date,year,date,week,year_week))) + #,aes(x=year_week,y=value,group=name,fill=name)
# geom_bar(stat="identity",position=position_dodge(width=0.75),size=0.2) +
geom_point(aes(x=year_week,y=value,group=name,color=name),pch="-",size=20) +
geom_vline(xintercept=(1:length(unique(weekly_acled_burial_comparison$year_week)))-0.5,size=0.2,linetype="dashed") +
theme_bw() + standard_theme + theme(axis.text.x = element_text(vjust=0.5),legend.position="bottom") + labs(fill="") +
scale_y_continuous(expand=expansion(0.01,0),breaks=(0:20)*10) + xlab("year/week") + ylab("number/day") +
ggtitle("number of burials compared to deaths due to political violence/terror attacks")
ggplot(subset(weekly_acled_burial_comparison,date>=as.Date("2019-01-01") & date<=as.Date("2020-10-01")) %>%
select(!rollingmean) %>% pivot_longer(!c(date,year,date,week,year_week))) + #,aes(x=year_week,y=value,group=name,fill=name)
# geom_bar(stat="identity",position=position_dodge(width=0.75),size=0.2) +
geom_point(aes(x=year_week,y=value,group=name,color=name),pch="-",size=14) +
geom_vline(xintercept=(1:length(unique(weekly_acled_burial_comparison$year_week)))-0.5,size=0.2,linetype="dashed") +
theme_bw() + standard_theme + theme(axis.text.x = element_text(vjust=0.5),legend.position="bottom") + labs(fill="") +
scale_y_continuous(expand=expansion(0.01,0),breaks=(0:20)*10) + xlab("year/week") + ylab("number/day") +
ggtitle("number of burials compared to deaths due to political violence/terror attacks")
ggsave("simul_output/somalia_output/acled_banadir_burials_comparison_WEEKLY_geom_point.png",width=30,height=16,units="cm")
ggplot(subset(weekly_acled_burial_comparison,date>=as.Date("2019-01-01") & date<=as.Date("2020-10-01")) %>%
select(!rollingmean) %>% pivot_longer(!c(date,year,date,week,year_week))) + #,aes(x=year_week,y=value,group=name,fill=name)
# geom_bar(stat="identity",position=position_dodge(width=0.75),size=0.2) +
geom_point(aes(x=year_week,y=value,group=name,color=name),pch="-",size=14) +
geom_vline(xintercept=(1:length(unique(weekly_acled_burial_comparison$year_week)))-0.5,size=0.2,linetype="dashed") +
theme_bw() + standard_theme + theme(axis.text.x = element_text(vjust=0.5),legend.position="bottom") + labs(fill="",color="") +
scale_y_continuous(expand=expansion(0.01,0),breaks=(0:20)*10) + xlab("year/week") + ylab("number/day") +
ggtitle("number of burials compared to deaths due to political violence/terror attacks")
ggsave("simul_output/somalia_output/acled_banadir_burials_comparison_WEEKLY_geom_point.png",width=30,height=16,units="cm")
ggplot(subset(weekly_acled_burial_comparison,date>=as.Date("2019-01-01") & date<=as.Date("2020-10-01")) %>%
select(!rollingmean) %>% pivot_longer(!c(date,year,date,week,year_week))) + #,aes(x=year_week,y=value,group=name,fill=name)
# geom_bar(stat="identity",position=position_dodge(width=0.75),size=0.2) +
geom_point(aes(x=year_week,y=value,group=name,color=name),pch="-",size=12) +
geom_vline(xintercept=(1:length(unique(weekly_acled_burial_comparison$year_week)))-0.5,size=0.2,linetype="dashed") +
theme_bw() + standard_theme + theme(axis.text.x = element_text(vjust=0.5),legend.position="bottom") + labs(fill="",color="") +
scale_y_continuous(expand=expansion(0.01,0),breaks=(0:20)*10) + xlab("year/week") + ylab("number/day") +
ggtitle("number of burials compared to deaths due to political violence/terror attacks")
ggsave("simul_output/somalia_output/acled_banadir_burials_comparison_WEEKLY_geom_point.png",width=30,height=16,units="cm")
mcmc_filename="fits_death_scaling_burnin5e2_samples2e3_until_0824"
mcmc_filename="fits_death_scaling_burnin5e2_samples2e3_until_0824"
fits_death_scaling <- readRDS(paste0("simul_output/somalia_output/",mcmc_filename,".rds"))
paste0("simul_output/somalia_output/",mcmc_filename)
mcmc_filename="fits_death_scaling_burnin5e2_samples2e3_until_0824"; mcmc_foldername=paste0("simul_output/somalia_output/",mcmc_filename)
mcmc_foldername
dir.create(mcmc_foldername)
baseline_daily_burials
mcmc_filename
CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4); slope_val=linregr$coefficients["agegroup_mean"]
CDR_vals
somalia_agegroups_IFR
somalia_agegroups_IFR=fcn_merge_ifr_above_age(left_join(fcn_load_age_str("Somalia",n_year="2015",90),
fcn_load_ifr("data/IFR_by_age_imperial.csv"),by=c("agegroup","agegroup_min")),75)
somalia_agegroups_IFR$ifr_mean[1]=3e-6; somal_popul_tot=sum(somalia_agegroups_IFR$agegroupsize); mogadishu_popul=2.2e6
npi_on_day
OxCGRT_input
OxCGRT_url="https://raw.githubusercontent.com/OxCGRT/covid-policy-tracker/master/data/OxCGRT_latest.csv"
OxCGRT_input=fcn_get_OxCGRT(OxCGRT_url,"Somalia") %>% mutate(OxCGRT_scaled_smoothed=roll_mean(OxCGRT_scaled,30,align="center",fill=NA))
# separate into 4 phases
NPI_phases=list(first=c("2020-03-19","2020-06-30"),second=c("2020-07-01","2020-08-29"),
third=c("2020-08-30","2020-10-08"),fourth=c("2020-10-09","2020-11-01"))
NPIvals=sapply(NPI_phases,function(x) mean(OxCGRT_input$OxCGRT_scaled[OxCGRT_input$date>as.Date(x)[1]&OxCGRT_input$date<as.Date(x)[2]]))
npi_df=left_join(data.frame(t(data.frame(on_off=c("on","off"),NPI_phases))) %>% add_rownames(var="name") %>%
filter(!name=="on_off") %>% rename(on=X1,off=X2) %>% mutate(on=as.Date(on),off=as.Date(off)),
data.frame(NPIvals) %>% rownames_to_column(var="name"),by="name") %>% mutate(name=factor(name,levels=unique(name)))
# plot
ggplot(OxCGRT_input) + geom_line(aes(x=date,y=OxCGRT_scaled)) +
geom_segment(data=npi_df,aes(x=on,xend=off,y=NPIvals,yend=NPIvals,group=factor(name),color=factor(name)),size=2) +
theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) + labs(color="NPI phases") +
scale_x_date(limits=c(min(subset(OxCGRT_input,NPI_on>0)$date)-15,max(out_bdr_daily_estimates$date)+35),breaks="week",
expand=expansion(0.01,0)) + scale_y_continuous(breaks=(0:10)/10) +
geom_vline(data=npi_df,aes(xintercept=on,color=name),linetype="dashed") + ylab("level of contacts if reduction ~ StringencyIndex")
somalia_agegroups_IFR
cm_path="~/Desktop/research/models/epid_models/covid_model/lmic_model/covidm/"
cm_force_rebuild=F; cm_build_verbose=T; cm_version=1; source(file.path(cm_path,"R","covidm.R"))
countryval="Somalia"; params=cm_parameters_SEI3R(gsub("Sudan|Somalia","Ethiopia",countryval),
date_start="2019-11-01",date_end="2020-11-01")
# set population: Somalia --> Mogadishu
params$pop[[1]]$name=countryval
params$pop[[1]]$size=somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
### seeding ---
npi_on_day=min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]); introd_day=as.Date("2019-12-01")
seeding_t_window=sapply(c(introd_day,introd_day),function(x) as.numeric(x-as.Date(params$date0)))
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=2) # x new infections/day for n days
# infections start in individuals aged 20-50
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
### add death process to model ------
params$processes <- list(cm_multinom_process("Ip",outcomes=data.table(death=somalia_agegroups_IFR$ifr_mean),
delays=data.table(death=cm_delay_gamma(22,22,60,1/4)$p), report="o"))
# suscept and clinical fraction age dependent
suscept_clinfract_posteriors<-read_csv("data/suscept_clinfract_posteriors_davies2010.csv") %>%
mutate(agegroup=factor(agegroup,levels=unique(agegroup)))
ggplot(suscept_clinfract_posteriors,aes(x=agegroup,y=value,group=1)) + geom_line() + geom_point() +
facet_wrap(~name,scales="free") + theme_bw() + scale_y_continuous(breaks=(2:20)/20)
params$pop[[1]]$y=fun_lin_approx_agedep_par(agegroups=somalia_agegroups_IFR,min_val=0.25,max_val=0.7,rep_min=6,rep_max=2)
# change susceptibility to get R0
# susceptibility estimates from (warwick):
suscept_clinfract_posteriors$name
ggplot(suscept_clinfract_posteriors %>% mutate(name=gsub("clin_fract","clinical fraction",name)),
aes(x=agegroup,y=value,group=1)) + geom_line() + geom_point() +
facet_wrap(~name,scales="free") + theme_bw() + scale_y_continuous(breaks=(2:20)/20)
ggplot(suscept_clinfract_posteriors %>% mutate(name=gsub("clin_fract","clinical fraction",name)),
aes(x=agegroup,y=value,group=1)) + geom_line() + geom_point() + ylab("proportion/normalised value") +
facet_wrap(~name,scales="free") + theme_bw() + scale_y_continuous(breaks=(2:20)/20)
ggsave("simul_output/somalia_output/clinical_fraction_susceptibility.png",width=30,height=20,units="cm")
params$pop[[1]]$y=fun_lin_approx_agedep_par(agegroups=somalia_agegroups_IFR,min_val=0.25,max_val=0.7,rep_min=6,rep_max=2)
target_R0=2; params$pop[[1]]$u=c(rep(0.38,4),rep(0.8,12)) # susceptibility_warvick_model$value #
params$pop[[1]]$u=params$pop[[1]]$u*(target_R0/cm_calc_R0(params,1))
cm_calc_R0(params,1)
k_compl=0.4
for (k in 1:length(NPIvals)) { # setup for version 1
if (cm_version==1) {if (k==1) {params$pop[[1]]$schedule=NULL; iv=cm_iv_build(params)} # sets up data structure for interventions
cm_iv_contact(iv, NPI_phases[[k]][1], NPI_phases[[k]][2], 1-(1-as.numeric(rep(NPIvals[k],4)))*k_compl)
if (k==length(NPIvals)) {params=cm_iv_apply(params,iv)} } else { # sets the "schedule" parameter to follow interventions in iv
# version 2
params$schedule[[k]]=list(parameter="contact",pops=numeric(),mode="multiply",
values=list(rep(NPIvals[k],4),rep(1,4)),times=NPI_phases[[k]])} }
### ### ### ### ### ### ### ### ### ###
# RUN SIMULATION
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
# covidm_simul_agesep=fcn_covidm_df(run$dynamics,sel_vars=c("cases","subclinical","death_o","R"),params)
# sum of age groups
covidm_simul=fcn_covidm_process_output(run$dynamics,filter_vars=c("E","foi","cases_reported"),
compartm_types=list(case_vars=c("cases","subclinical","Ia","Ip","Is","S","R"),death_vars=c("D","death_o")),
dynamics_type=list(cumul=c("D","R","S"),incid=c("cases","subclinical","death_o"),preval=c("Ia","Ip","Is")),
populval=mogadishu_popul,params)
seeding_df=data.frame(seed_date=unique(covidm_simul$date)[unique(params$pop[[1]]$seed_times)]) %>% summarise(min=min(seed_date),max=max(seed_date))
ggplot(subset(covidm_simul,!dynam_type %in% "preval")) + geom_area(aes(x=date,y=value,fill=compartment),color="black",size=0.3) +
facet_wrap(dynam_type~compartm_type,scales="free") + theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) +
scale_x_date(limits=as.Date(c(params$date0,params$time1)),date_breaks="2 weeks",expand=expansion(0,0)) + ylab("number") +
scale_y_continuous(expand=expansion(0.01,0)) +geom_vline(data=npi_df,aes(xintercept=on,color=name),size=1,linetype="dashed") +
geom_rect(data=seeding_df,aes(xmin=min,xmax=max,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.4) + labs(fill="")
fitting_date_window
fitting_date_window=as.Date(c("2020-01-15","2020-10-01"))
fcn_covidm_singlesim_error(covidm_simul,out_bdr_daily_estimates,fitting_date_window)
for (k in 1:length(CDR_vals)) {
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb = rbind(df_posteriors_comb,df_posteriors)}
}
CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4); slope_val=linregr$coefficients["agegroup_mean"]
somalia_agegroups_IFR = somalia_agegroups_IFR %>% mutate(log_ifr=log(ifr_mean),logit_ifr=log(ifr_mean/(1-ifr_mean)))
# ggplot(somalia_agegroups_IFR,aes(x=agegroup_mean)) + geom_line(aes(y=log_ifr)) + geom_point(aes(y=log_ifr)) +
#   geom_line(aes(y=logit_ifr),color="red") + geom_point(aes(y=logit_ifr),color="red")+ scale_x_continuous(breaks=2.5+(0:16)*5)
linregr=lm(logit_ifr~agegroup_mean,data=somalia_agegroups_IFR %>% select(agegroup_mean,logit_ifr) )
ggplot(somalia_agegroups_IFR %>% mutate(uk_estim=IFR_estimates_Sandmann2021$value_percent,pred_ifr=
inv.logit(linregr$coefficients["(Intercept)"] + linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)) %>%
select(agegroup_mean,ifr_mean,uk_estim,pred_ifr) %>% rename(estimate=ifr_mean,fit=pred_ifr) %>% pivot_longer(!c(agegroup_mean)),
aes(x=agegroup_mean,y=value*1e2,group=name,color=name)) + geom_line(size=1.05) + geom_point(size=2) +
theme_bw() + standard_theme + scale_x_continuous(breaks=2.5+(0:16)*5) + labs(color="") + xlab("age (year)") + ylab("IFR %") +
theme(axis.text.x=element_text(vjust=0.5,size=12),axis.text.y=element_text(size=12)) +
scale_y_log10(limits=c(1e-4,10^1.1),breaks=scales::trans_breaks("log10",function(x) 10^x))
ggplot(somalia_agegroups_IFR %>%
# mutate(uk_estim=IFR_estimates_Sandmann2021$value_percent,pred_ifr=
# inv.logit(linregr$coefficients["(Intercept)"] + linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)) %>%
select(agegroup_mean,ifr_mean,uk_estim,pred_ifr) %>% rename(estimate=ifr_mean,fit=pred_ifr) %>% pivot_longer(!c(agegroup_mean)),
aes(x=agegroup_mean,y=value*1e2,group=name,color=name)) + geom_line(size=1.05) + geom_point(size=2) +
theme_bw() + standard_theme + scale_x_continuous(breaks=2.5+(0:16)*5) + labs(color="") + xlab("age (year)") + ylab("IFR %") +
theme(axis.text.x=element_text(vjust=0.5,size=12),axis.text.y=element_text(size=12)) +
scale_y_log10(limits=c(1e-4,10^1.1),breaks=scales::trans_breaks("log10",function(x) 10^x))
ggplot(somalia_agegroups_IFR %>%
# mutate(uk_estim=IFR_estimates_Sandmann2021$value_percent,pred_ifr=
# inv.logit(linregr$coefficients["(Intercept)"] + linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)) %>%
select(agegroup_mean,ifr_mean,pred_ifr) %>% rename(estimate=ifr_mean,fit=pred_ifr) %>% pivot_longer(!c(agegroup_mean)),
aes(x=agegroup_mean,y=value*1e2,group=name,color=name)) + geom_line(size=1.05) + geom_point(size=2) +
theme_bw() + standard_theme + scale_x_continuous(breaks=2.5+(0:16)*5) + labs(color="") + xlab("age (year)") + ylab("IFR %") +
theme(axis.text.x=element_text(vjust=0.5,size=12),axis.text.y=element_text(size=12)) +
scale_y_log10(limits=c(1e-4,10^1.1),breaks=scales::trans_breaks("log10",function(x) 10^x))
ggplot(somalia_agegroups_IFR %>%
mutate( #uk_estim=IFR_estimates_Sandmann2021$value_percent,
pred_ifr=inv.logit(linregr$coefficients["(Intercept)"] + linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)) %>%
select(agegroup_mean,ifr_mean,pred_ifr) %>% rename(estimate=ifr_mean,fit=pred_ifr) %>% pivot_longer(!c(agegroup_mean)),
aes(x=agegroup_mean,y=value*1e2,group=name,color=name)) + geom_line(size=1.05) + geom_point(size=2) +
theme_bw() + standard_theme + scale_x_continuous(breaks=2.5+(0:16)*5) + labs(color="") + xlab("age (year)") + ylab("IFR %") +
theme(axis.text.x=element_text(vjust=0.5,size=12),axis.text.y=element_text(size=12)) +
scale_y_log10(limits=c(1e-4,10^1.1),breaks=scales::trans_breaks("log10",function(x) 10^x))
CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4); slope_val=linregr$coefficients["agegroup_mean"]
slope_val
linregr$coefficients
for (k in 1:length(CDR_vals)) {
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb = rbind(df_posteriors_comb,df_posteriors)}
}
fitting_params <- c("R0_fit","introd_date","seed_size","ifr_logit_intercept", "compliance")
for (k in 1:length(CDR_vals)) {
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb = rbind(df_posteriors_comb,df_posteriors)} }
posterior_CI95_comb = df_posteriors_comb %>% mutate(n=row_number()) %>% pivot_longer(!c(n,CDR)) %>% group_by(name,CDR) %>%
summarise(mean=mean(value),median=median(value),
ci95_low=quantile(value,probs=c(2.5,97.5)/1e2)[1],ci95_up=quantile(value,probs=c(2.5,97.5)/1e2)[2],
ci50_low=quantile(value,probs=c(25,75)/1e2)[1],ci50_up=quantile(value,probs=c(25,75)/1e2)[2] ) %>%
mutate(name=ifelse(name %in% "introd_date","introduction (days after 01/Nov/2019)",name),
name=ifelse(name %in% "compliance","NPI compliance (0 to 1)",name))
ggplot(posterior_CI95_comb %>% filter(!name %in% c("ifr_logit_intercept","IFR sympt. infections (%)")),
aes(x=factor(CDR),group=CDR,color=factor(CDR))) + scale_y_continuous(expand = expansion(0.1,0)) +
geom_linerange(aes(ymin=ci95_low,ymax=ci95_up),position=position_dodge2(width=0.25),alpha=0.3,size=3) +
geom_linerange(aes(ymin=ci50_low,ymax=ci50_up),position=position_dodge2(width=0.25),alpha=0.5,size=3) +
geom_point(aes(y=median),pch="-",size=10,color="black") + facet_wrap(~name,scales="free") + theme_bw() + standard_theme + xlab("") +
ylab("mean (CI50, CI95)") + theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
labs(color="CDR",caption="Burn-in: 1e3, Iterations: 1e4 (MCMC)") +
geom_text(aes(x=factor(CDR),y=median,label=round(median,2)),nudge_x=0.3,color="black",size=3.5)
head(df_posteriors_comb,2)
posterior_CI95_comb = df_posteriors_comb %>% mutate(n=row_number()) %>% pivot_longer(!c(n,CDR,chain,trial,lp)) %>%
group_by(name,CDR) %>% summarise(mean=mean(value),median=median(value),
ci95_low=quantile(value,probs=c(2.5,97.5)/1e2)[1],ci95_up=quantile(value,probs=c(2.5,97.5)/1e2)[2],
ci50_low=quantile(value,probs=c(25,75)/1e2)[1],ci50_up=quantile(value,probs=c(25,75)/1e2)[2] ) %>%
mutate(name=ifelse(name %in% "introd_date","introduction (days after 01/Nov/2019)",name),
name=ifelse(name %in% "compliance","NPI compliance (0 to 1)",name))
head(posterior_CI95_comb)
dim(posterior_CI95_comb)
View(posterior_CI95_comb)
ggplot(posterior_CI95_comb %>% filter(!name %in% c("ifr_logit_intercept","IFR sympt. infections (%)")),
aes(x=factor(CDR),group=CDR,color=factor(CDR))) + scale_y_continuous(expand = expansion(0.1,0)) +
geom_linerange(aes(ymin=ci95_low,ymax=ci95_up),position=position_dodge2(width=0.25),alpha=0.3,size=3) +
geom_linerange(aes(ymin=ci50_low,ymax=ci50_up),position=position_dodge2(width=0.25),alpha=0.5,size=3) +
geom_point(aes(y=median),pch="-",size=10,color="black") + facet_wrap(~name,scales="free") + theme_bw() + standard_theme + xlab("") +
ylab("mean (CI50, CI95)") + theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) +
labs(color="CDR",caption="Burn-in: 1e3, Iterations: 1e4 (MCMC)") +
geom_text(aes(x=factor(CDR),y=median,label=round(median,2)),nudge_x=0.3,color="black",size=3.5)
mcmc_foldername
paste0(mcmc_foldername,"posteriors_mean_CIs_CDRscan.png")
paste0(mcmc_foldername,"/posteriors_mean_CIs_CDRscan.png")
ggsave(paste0(mcmc_foldername,"/posteriors_mean_CIs_CDRscan.png"),width=30,height=18,units="cm")
i_col=3:6
ifr_estimates = bind_rows(lapply(1:length(CDR_vals), function(k) cbind(somalia_agegroups_IFR %>% select(agegroup_mean),CDR=round(CDR_vals[k],3),
sapply(as.numeric(array(subset(posterior_CI95_comb,name %in% "ifr_logit_intercept" & CDR==round(CDR_vals[k],3))[,i_col])),
function(x) inv.logit(x+linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)*params$pop[[1]]$y ) ) ) ) %>%
mutate(datatype="fit")
# %>% rename(`estimate from literature`=ifr_mean)
colnames(ifr_estimates)[i_col] <- colnames(posterior_CI95_comb)[i_col]
ifr_estimates=bind_rows(ifr_estimates,somalia_agegroups_IFR %>% select(agegroup_mean,ifr_mean) %>%
mutate(ifr_mean=ifr_mean*params$pop[[1]]$y) %>% rename(median=ifr_mean) %>% mutate(datatype="estimate from data"))
ggplot(ifr_estimates,aes(x=agegroup_mean)) +
geom_line(aes(y=median*1e2,group=CDR,color=factor(CDR),linetype=factor(datatype)),size=1.05) +
geom_point(aes(y=median*1e2,group=CDR,color=factor(CDR),linetype=factor(datatype)),size=2) + labs(color="CDR",linetype="",fill="CDR") +
geom_ribbon(aes(ymin=ci95_low*1e2,ymax=ci95_up*1e2,group=CDR,fill=factor(CDR)),alpha=0.2) + theme_bw() + standard_theme +
scale_x_continuous(breaks=2.5+(0:16)*5) + theme(axis.text.x=element_text(vjust=0.5,size=12),axis.text.y=element_text(size=12)) +
scale_y_log10(breaks=scales::trans_breaks("log10",function(x) 10^x,n=12),labels=scales::trans_format("log10",scales::math_format(10^.x))) +
xlab("median age per age group (year)") + ylab("IFR %")
head(ifr_estimates)
unique(ifr_estimates$CDR)
i_col=3:6
ifr_estimates = bind_rows(lapply(1:length(CDR_vals), function(k) cbind(somalia_agegroups_IFR %>%
select(agegroup_mean),CDR=round(CDR_vals[k],3),
sapply(as.numeric(array(subset(posterior_CI95_comb,name %in% "ifr_logit_intercept" & CDR==round(CDR_vals[k],3))[,i_col])),
function(x) inv.logit(x+linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)*params$pop[[1]]$y ) ) ) ) %>%
mutate(datatype="fit")
colnames(ifr_estimates)[i_col] <- colnames(posterior_CI95_comb)[i_col]
ifr_estimates=bind_rows(ifr_estimates,somalia_agegroups_IFR %>% select(agegroup_mean,ifr_mean) %>%
mutate(ifr_mean=ifr_mean*params$pop[[1]]$y) %>% rename(median=ifr_mean) %>%
mutate(datatype="estimate from data",CDR=ifelse(is.na(CDR,"estimate from literature",CDR))) )
ifr_estimates = bind_rows(lapply(1:length(CDR_vals), function(k) cbind(somalia_agegroups_IFR %>%
select(agegroup_mean),CDR=round(CDR_vals[k],3),
sapply(as.numeric(array(subset(posterior_CI95_comb,name %in% "ifr_logit_intercept" & CDR==round(CDR_vals[k],3))[,i_col])),
function(x) inv.logit(x+linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)*params$pop[[1]]$y ) ) ) ) %>%
mutate(datatype="fit")
colnames(ifr_estimates)[i_col] <- colnames(posterior_CI95_comb)[i_col]
ifr_estimates=bind_rows(ifr_estimates,somalia_agegroups_IFR %>% select(agegroup_mean,ifr_mean) %>%
mutate(ifr_mean=ifr_mean*params$pop[[1]]$y) %>% rename(median=ifr_mean) %>%
mutate(datatype="estimate from data",CDR=ifelse(is.na(CDR),"estimate from literature",CDR)) )
i_col=3:6
ifr_estimates = bind_rows(lapply(1:length(CDR_vals), function(k) cbind(somalia_agegroups_IFR %>%
select(agegroup_mean),CDR=round(CDR_vals[k],3),
sapply(as.numeric(array(subset(posterior_CI95_comb,name %in% "ifr_logit_intercept" & CDR==round(CDR_vals[k],3))[,i_col])),
function(x) inv.logit(x+linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)*params$pop[[1]]$y ) ) ) ) %>%
mutate(datatype="fit")
colnames(ifr_estimates)[i_col] <- colnames(posterior_CI95_comb)[i_col]
ifr_estimates=bind_rows(ifr_estimates,somalia_agegroups_IFR %>% select(agegroup_mean,ifr_mean) %>%
mutate(ifr_mean=ifr_mean*params$pop[[1]]$y) %>% rename(median=ifr_mean) %>%
mutate(datatype="estimate from data",CDR=ifelse(is.na(CDR),"estimate from literature",CDR) ) )
i_col=3:6
ifr_estimates = bind_rows(lapply(1:length(CDR_vals), function(k) cbind(somalia_agegroups_IFR %>%
select(agegroup_mean),CDR=round(CDR_vals[k],3),
sapply(as.numeric(array(subset(posterior_CI95_comb,name %in% "ifr_logit_intercept" & CDR==round(CDR_vals[k],3))[,i_col])),
function(x) inv.logit(x+linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)*params$pop[[1]]$y ) ) ) ) %>%
mutate(datatype="fit")
colnames(ifr_estimates)[i_col] <- colnames(posterior_CI95_comb)[i_col]
ifr_estimates=bind_rows(ifr_estimates,somalia_agegroups_IFR %>% select(agegroup_mean,ifr_mean) %>%
mutate(ifr_mean=ifr_mean*params$pop[[1]]$y) %>% rename(median=ifr_mean) %>%
mutate(datatype="estimate from data" ) ) # ,CDR=ifelse(is.na(CDR),"estimate from literature",CDR)
ifr_estimates %>% mutate(CDR=ifelse(is.na(CDR),"estimate from literature",CDR))
i_col=3:6
ifr_estimates = bind_rows(lapply(1:length(CDR_vals), function(k) cbind(somalia_agegroups_IFR %>%
select(agegroup_mean),CDR=round(CDR_vals[k],3),
sapply(as.numeric(array(subset(posterior_CI95_comb,name %in% "ifr_logit_intercept" & CDR==round(CDR_vals[k],3))[,i_col])),
function(x) inv.logit(x+linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)*params$pop[[1]]$y ) ) ) ) %>%
mutate(datatype="fit")
colnames(ifr_estimates)[i_col] <- colnames(posterior_CI95_comb)[i_col]
ifr_estimates=bind_rows(ifr_estimates,somalia_agegroups_IFR %>% select(agegroup_mean,ifr_mean) %>%
mutate(ifr_mean=ifr_mean*params$pop[[1]]$y) %>% rename(median=ifr_mean) %>%
mutate(datatype="estimate from data" ) ) %>% mutate(CDR=ifelse(is.na(CDR),"estimate from literature",CDR))
ggplot(ifr_estimates,aes(x=agegroup_mean)) +
geom_line(aes(y=median*1e2,group=CDR,color=factor(CDR),linetype=factor(datatype)),size=1.05) +
geom_point(aes(y=median*1e2,group=CDR,color=factor(CDR),linetype=factor(datatype)),size=2) + labs(color="CDR",linetype="",fill="CDR") +
geom_ribbon(aes(ymin=ci95_low*1e2,ymax=ci95_up*1e2,group=CDR,fill=factor(CDR)),alpha=0.2) + theme_bw() + standard_theme +
scale_x_continuous(breaks=2.5+(0:16)*5) + theme(axis.text.x=element_text(vjust=0.5,size=12),axis.text.y=element_text(size=12)) +
scale_y_log10(breaks=scales::trans_breaks("log10",function(x) 10^x,n=12),labels=scales::trans_format("log10",scales::math_format(10^.x))) +
xlab("median age per age group (year)") + ylab("IFR %")
mcmc_foldername
paste0(mcmc_foldername,"/ifr_mcmc_estimates_CDRscan.png")
ggsave(paste0(mcmc_foldername,"/ifr_mcmc_estimates_CDRscan.png"),width=20,height=12,units="cm")
ggplot(df_posteriors_comb %>% select(!`IFR sympt. infections (%)`,`IFR all infections (%)`,CDR) %>%
pivot_longer(!c(chain,trial,lp,CDR))) + geom_line(aes(x=trial,y=value,group=chain,color=factor(chain))) +
facet_grid(name~CDR,scales="free",labeller=labeller(CDR=label_both)) + theme_bw() + standard_theme + labs(color="chains")
ggsave(paste0("simul_output/somalia_output/MCMC_convergence.png"),width=30,height=20,units="cm")
for (k in 1: length(fits_death_scaling)){
dyn=cm_sample_fit(fits_death_scaling[[k]], 25) %>% mutate(CDR=CDR_vals[k])
if (k==1) {dyn_all=dyn} else {dyn_all=rbind(dyn_all,dyn)}; print(k) }
CDR_vals=c(0.0422654,0.1,0.2,0.4) # scale_factor=(mogadishu_popul*CDR_vals[k]/1e4)/baseline_daily_burials
fitting_incidence = bind_rows(lapply((mogadishu_popul*CDR_vals/1e4)/baseline_daily_burials, function(x)
data.table(out_bdr_daily_estimates %>% select(date,daily_baseline_subtr) %>%
mutate(daily_baseline_subtr=round(daily_baseline_subtr*x),CDR=x*1e4*baseline_daily_burials/mogadishu_popul,CDR=round(CDR,5)) %>%
filter(date>=fitting_date_window[1]&date<=fitting_date_window[2]) %>% rename(new_deaths=daily_baseline_subtr)) ))
ggplot(summ %>% filter(compartment=="death_o")) +
geom_line(aes(x=date,y=mean), colour="blue") + geom_ribbon(aes(x=date,ymin=lower,ymax=upper), fill="blue",alpha=0.2) +
geom_line(data=fitting_incidence %>% mutate(t=as.numeric(date)),aes(x=date,y=new_deaths),linetype="dashed") +
geom_point(data=fitting_incidence %>% mutate(t=as.numeric(date)),aes(x=date,y=new_deaths),size=0.55) +
facet_wrap(~CDR,scales="free",labeller=labeller(CDR=label_both)) + standard_theme + theme_bw() +
xlab("") + ylab("deaths (daily)") + theme(axis.text.x=element_text(vjust=0.5,angle=90)) +
scale_x_date(date_breaks="week",limits=as.Date(c("2020-01-10","2020-10-15")),expand=expansion(0.0)) +
scale_y_continuous(breaks=(0:20)*10,expand=expansion(0,0))
summ
summ=dyn_all %>% filter(compartment %in% c("S","death_o")) %>% group_by(t,run,compartment,CDR) %>% summarise(value=sum(value)) %>%
group_by(run,compartment,CDR) %>% mutate(value=ifelse(compartment %in% "S",(value[t==0]-value)/value[t==0],value), # /value[t==0]
compartment=ifelse(compartment %in% "S","attack_rate",as.character(compartment))) %>% group_by(t,compartment,CDR) %>%
summarise(lower=hdi(value)[[1]],upper=hdi(value)[[2]],mean=mean(value) ) %>%
mutate(date=as.Date(seq(as.Date(params$date0),as.Date(params$date0)+max(t),1)[t+1]),CDR=round(CDR,5))
CDR_vals=c(0.0422654,0.1,0.2,0.4) # scale_factor=(mogadishu_popul*CDR_vals[k]/1e4)/baseline_daily_burials
fitting_incidence = bind_rows(lapply((mogadishu_popul*CDR_vals/1e4)/baseline_daily_burials, function(x)
data.table(out_bdr_daily_estimates %>% select(date,daily_baseline_subtr) %>%
mutate(daily_baseline_subtr=round(daily_baseline_subtr*x),CDR=x*1e4*baseline_daily_burials/mogadishu_popul,CDR=round(CDR,5)) %>%
filter(date>=fitting_date_window[1]&date<=fitting_date_window[2]) %>% rename(new_deaths=daily_baseline_subtr)) ))
ggplot(summ %>% filter(compartment=="death_o")) +
geom_line(aes(x=date,y=mean), colour="blue") + geom_ribbon(aes(x=date,ymin=lower,ymax=upper), fill="blue",alpha=0.2) +
geom_line(data=fitting_incidence %>% mutate(t=as.numeric(date)),aes(x=date,y=new_deaths),linetype="dashed") +
geom_point(data=fitting_incidence %>% mutate(t=as.numeric(date)),aes(x=date,y=new_deaths),size=0.55) +
facet_wrap(~CDR,scales="free",labeller=labeller(CDR=label_both)) + standard_theme + theme_bw() +
xlab("") + ylab("deaths (daily)") + theme(axis.text.x=element_text(vjust=0.5,angle=90)) +
scale_x_date(date_breaks="week",limits=as.Date(c("2020-01-10","2020-10-15")),expand=expansion(0.0)) +
scale_y_continuous(breaks=(0:20)*10,expand=expansion(0,0))
paste0(mcmc_foldername,"/dynamics_fit_deaths_CDR_scan.png")
ggsave(paste0(mcmc_foldername,"/dynamics_fit_deaths_CDR_scan.png"),width=25,height=16,units="cm")
p<-ggplot(summ %>% filter(compartment=="attack_rate")) +
geom_line(aes(x=date,y=mean,group=CDR,color=factor(CDR)),size=1.2) + facet_wrap(~CDR,nrow=length(CDR_vals),labeller=labeller(CDR=label_both)) +
geom_ribbon(aes(x=date,ymin=lower,ymax=upper,group=CDR,fill=factor(CDR)),alpha=0.2) + labs(color="CDR",fill="CDR") +
standard_theme + theme_bw() + xlab("") + ylab("cumulative attack rate") + theme(axis.text.x=element_text(vjust=0.5,angle=90)) +
scale_x_date(date_breaks="week",limits=as.Date(c("2020-01-10","2020-11-01")),expand=expansion(0.0)) +
scale_y_continuous(breaks=(0:20)/20,expand=expansion(0,0)); p
att_rate_filename<-paste0(mcmc_foldername,"/dynamics_cumulattackrate_deaths_CDRscan.png")
att_rate_filename
if (length(p$facet$params$facets)>0) {att_rate_filename<-gsub(".png","_faceted.png",att_rate_filename)}
ggsave(att_rate_filename,width=22,height=16,units="cm")
p<-ggplot(summ %>% filter(compartment=="attack_rate")) +
geom_line(aes(x=date,y=mean,group=CDR,color=factor(CDR)),size=1.2) + # facet_wrap(~CDR,nrow=length(CDR_vals),labeller=labeller(CDR=label_both)) +
geom_ribbon(aes(x=date,ymin=lower,ymax=upper,group=CDR,fill=factor(CDR)),alpha=0.2) + labs(color="CDR",fill="CDR") +
standard_theme + theme_bw() + xlab("") + ylab("cumulative attack rate") + theme(axis.text.x=element_text(vjust=0.5,angle=90)) +
scale_x_date(date_breaks="week",limits=as.Date(c("2020-01-10","2020-11-01")),expand=expansion(0.0)) +
scale_y_continuous(breaks=(0:20)/20,expand=expansion(0,0)); p
att_rate_filename<-paste0(mcmc_foldername,"/dynamics_cumulattackrate_deaths_CDRscan.png")
if (length(p$facet$params$facets)>0) {att_rate_filename<-gsub(".png","_faceted.png",att_rate_filename)}
att_rate_filename
ggsave(att_rate_filename,width=22,height=16,units="cm")
fits_death_scaling[[1]]$base_parameters
fits_death_scaling[[1]]$options
fits_death_scaling[[1]]$options$fit_sampling
fits_death_scaling[[1]]$options$mcmc_init_opt
fits_death_scaling[[1]]$options$mcmc_iter
fits_death_scaling[[1]]$options$mcmc_burn_in
paste0("Burn-in: ",fits_death_scaling[[1]]$options$mcmc_burn_in,"Iterations:",
fits_death_scaling[[1]]$options$mcmc_iter," (MCMC)")
paste0("Burn-in: ",fits_death_scaling[[1]]$options$mcmc_burn_in,", Iterations:",
fits_death_scaling[[1]]$options$mcmc_iter," (MCMC)")
paste0("Burn-in: ",fits_death_scaling[[1]]$options$mcmc_burn_in,", Iterations: ",
fits_death_scaling[[1]]$options$mcmc_iter," (MCMC)")
ggplot(posterior_CI95_comb %>% filter(!name %in% c("ifr_logit_intercept","IFR sympt. infections (%)")),
aes(x=factor(CDR),group=CDR,color=factor(CDR))) + scale_y_continuous(expand = expansion(0.1,0)) +
geom_linerange(aes(ymin=ci95_low,ymax=ci95_up),position=position_dodge2(width=0.25),alpha=0.3,size=3) +
geom_linerange(aes(ymin=ci50_low,ymax=ci50_up),position=position_dodge2(width=0.25),alpha=0.5,size=3) +
geom_point(aes(y=median),pch="-",size=10,color="black") + facet_wrap(~name,scales="free") + theme_bw() + standard_theme + xlab("") +
ylab("mean (CI50, CI95)") + theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) + labs(color="CDR",
caption=paste0("Burn-in: ",fits_death_scaling[[1]]$options$mcmc_burn_in,", Iterations: ",
fits_death_scaling[[1]]$options$mcmc_iter," (MCMC)")) +
geom_text(aes(x=factor(CDR),y=median,label=round(median,2)),nudge_x=0.3,color="black",size=3.5)
ggsave(paste0(mcmc_foldername,"/posteriors_mean_CIs_CDRscan.png"),width=30,height=18,units="cm")
states_2020_07_06_06 <- read_csv("data/somalia/states_2020-07-06-06.csv/states_2020-07-06-06.csv")
head(states_2020_07_06_06,2)
rm(states_2020_07_06_06,2)
rm(states_2020_07_06_06)
flightlist_20191101_20191130 <- read_csv("data/somalia/flight_data/flightlist_20191101_20191130.csv")
length(unique(flightlist_20191101_20191130$destination))
sum(grepl("MGQ",unique(flightlist_20191101_20191130$destination)))
sum(grepl("HCMM",unique(flightlist_20191101_20191130$destination)))
sum(grepl("LHBP",unique(flightlist_20191101_20191130$destination)))
sum(grepl("BUD",unique(flightlist_20191101_20191130$destination)))
(grepl("BUD",(flightlist_20191101_20191130$destination)))
sum(grepl("BUD",(flightlist_20191101_20191130$destination)))
sum(grepl("LHBP",flightlist_20191101_20191130$destination))
sum(grepl("HKJK",flightlist_20191101_20191130$destination))
sum(grepl("NBO",flightlist_20191101_20191130$destination))
subset(flightlist_20191101_20191130,destination %in% "NBO")
rm(flightlist_20191101_20191130)
mcmc_filename="fits_death_scaling_2020-02-23_2020-08-24"; mcmc_foldername=paste0("simul_output/somalia_output/",mcmc_filename)
fits_death_scaling <- readRDS(paste0("simul_output/somalia_output/",mcmc_filename,".rds")); dir.create(mcmc_foldername)
CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4); slope_val=linregr$coefficients["agegroup_mean"]
for (k in 1:length(CDR_vals)) {
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb = rbind(df_posteriors_comb,df_posteriors)} }
posterior_CI95 = df_posteriors_comb %>% mutate(n=row_number()) %>% pivot_longer(!c(n,CDR,chain,trial,lp)) %>%
group_by(name,CDR) %>% summarise(mean=mean(value),median=median(value),
ci95_low=quantile(value,probs=c(2.5,97.5)/1e2)[1],ci95_up=quantile(value,probs=c(2.5,97.5)/1e2)[2],
ci50_low=quantile(value,probs=c(25,75)/1e2)[1],ci50_up=quantile(value,probs=c(25,75)/1e2)[2] ) %>%
mutate(name=ifelse(name %in% "introd_date","introduction (days after 01/Nov/2019)",name),
name=ifelse(name %in% "compliance","NPI compliance (0 to 1)",name))
ggplot(posterior_CI95 %>% filter(!name %in% c("ifr_logit_intercept","IFR sympt. infections (%)")),
aes(x=factor(CDR),group=CDR,color=factor(CDR))) + scale_y_continuous(expand = expansion(0.1,0)) +
geom_linerange(aes(ymin=ci95_low,ymax=ci95_up),position=position_dodge2(width=0.25),alpha=0.3,size=3) +
geom_linerange(aes(ymin=ci50_low,ymax=ci50_up),position=position_dodge2(width=0.25),alpha=0.5,size=3) +
geom_point(aes(y=median),pch="-",size=10,color="black") + facet_wrap(~name,scales="free") + theme_bw() + standard_theme + xlab("") +
ylab("mean (CI50, CI95)") + theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) + labs(color="CDR",
caption=paste0("Burn-in: ",fits_death_scaling[[1]]$options$mcmc_burn_in,", Iterations: ",
fits_death_scaling[[1]]$options$mcmc_iter," (MCMC)")) +
geom_text(aes(x=factor(CDR),y=median,label=round(median,2)),nudge_x=0.3,color="black",size=3.5)
ggsave(paste0(mcmc_foldername,"/posteriors_mean_CIs_CDRscan.png"),width=30,height=18,units="cm")
i_col=3:6
ifr_estimates = bind_rows(lapply(1:length(CDR_vals), function(k) cbind(somalia_agegroups_IFR %>%
select(agegroup_mean),CDR=round(CDR_vals[k],3),
sapply(as.numeric(array(subset(posterior_CI95,name %in% "ifr_logit_intercept" & CDR==round(CDR_vals[k],3))[,i_col])),
function(x) inv.logit(x+linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)*params$pop[[1]]$y ) ) ) ) %>%
mutate(datatype="fit")
colnames(ifr_estimates)[i_col] <- colnames(posterior_CI95)[i_col]
ifr_estimates=bind_rows(ifr_estimates,somalia_agegroups_IFR %>% select(agegroup_mean,ifr_mean) %>%
mutate(ifr_mean=ifr_mean*params$pop[[1]]$y) %>% rename(median=ifr_mean) %>%
mutate(datatype="estimate from data" ) ) %>% mutate(CDR=ifelse(is.na(CDR),"estimate from literature",CDR))
ggplot(ifr_estimates,aes(x=agegroup_mean)) +
geom_line(aes(y=median*1e2,group=CDR,color=factor(CDR),linetype=factor(datatype)),size=1.05) +
geom_point(aes(y=median*1e2,group=CDR,color=factor(CDR),linetype=factor(datatype)),size=2) + labs(color="CDR",linetype="",fill="CDR") +
geom_ribbon(aes(ymin=ci95_low*1e2,ymax=ci95_up*1e2,group=CDR,fill=factor(CDR)),alpha=0.2) + theme_bw() + standard_theme +
scale_x_continuous(breaks=2.5+(0:16)*5) + theme(axis.text.x=element_text(vjust=0.5,size=12),axis.text.y=element_text(size=12)) +
scale_y_log10(breaks=scales::trans_breaks("log10",function(x) 10^x,n=12),labels=scales::trans_format("log10",scales::math_format(10^.x))) +
xlab("median age per age group (year)") + ylab("IFR %")
ggsave(paste0(mcmc_foldername,"/ifr_mcmc_estimates_CDRscan.png"),width=20,height=12,units="cm")
ggplot(df_posteriors_comb %>% select(!`IFR sympt. infections (%)`,`IFR all infections (%)`,CDR) %>%
pivot_longer(!c(chain,trial,lp,CDR))) + geom_line(aes(x=trial,y=value,group=chain,color=factor(chain))) +
facet_grid(name~CDR,scales="free",labeller=labeller(CDR=label_both)) + theme_bw() + standard_theme + labs(color="chains")
paste0(mcmc_foldername,"/MCMC_convergence.png")
ggsave(paste0(mcmc_foldername,"/MCMC_convergence.png"),width=30,height=20,units="cm")
for (k in 1: length(fits_death_scaling)){
dyn=cm_sample_fit(fits_death_scaling[[k]], 25) %>% mutate(CDR=CDR_vals[k])
if (k==1) {dyn_all=dyn} else {dyn_all=rbind(dyn_all,dyn)}; print(k) }
CDR_vals=c(0.0422654,0.1,0.2,0.4) # scale_factor=(mogadishu_popul*CDR_vals[k]/1e4)/baseline_daily_burials
fitting_incidence = bind_rows(lapply((mogadishu_popul*CDR_vals/1e4)/baseline_daily_burials, function(x)
data.table(out_bdr_daily_estimates %>% select(date,daily_baseline_subtr) %>%
mutate(daily_baseline_subtr=round(daily_baseline_subtr*x),CDR=x*1e4*baseline_daily_burials/mogadishu_popul,CDR=round(CDR,5)) %>%
filter(date>=fitting_date_window[1]&date<=fitting_date_window[2]) %>% rename(new_deaths=daily_baseline_subtr)) ))
ggplot(summ %>% filter(compartment=="death_o")) +
geom_line(aes(x=date,y=mean), colour="blue") + geom_ribbon(aes(x=date,ymin=lower,ymax=upper), fill="blue",alpha=0.2) +
geom_line(data=fitting_incidence %>% mutate(t=as.numeric(date)),aes(x=date,y=new_deaths),linetype="dashed") +
geom_point(data=fitting_incidence %>% mutate(t=as.numeric(date)),aes(x=date,y=new_deaths),size=0.55) +
facet_wrap(~CDR,scales="free",labeller=labeller(CDR=label_both)) + standard_theme + theme_bw() +
xlab("") + ylab("deaths (daily)") + theme(axis.text.x=element_text(vjust=0.5,angle=90)) +
scale_x_date(date_breaks="week",limits=as.Date(c("2020-01-10","2020-10-15")),expand=expansion(0.0)) +
scale_y_continuous(breaks=(0:20)*10,expand=expansion(0,0))
ggsave(paste0(mcmc_foldername,"/dynamics_fit_deaths_CDR_scan.png"),width=25,height=16,units="cm")
p<-ggplot(summ %>% filter(compartment=="attack_rate")) +
geom_line(aes(x=date,y=mean,group=CDR,color=factor(CDR)),size=1.2) + # facet_wrap(~CDR,nrow=length(CDR_vals),labeller=labeller(CDR=label_both)) +
geom_ribbon(aes(x=date,ymin=lower,ymax=upper,group=CDR,fill=factor(CDR)),alpha=0.2) + labs(color="CDR",fill="CDR") +
standard_theme + theme_bw() + xlab("") + ylab("cumulative attack rate") + theme(axis.text.x=element_text(vjust=0.5,angle=90)) +
scale_x_date(date_breaks="week",limits=as.Date(c("2020-01-10","2020-11-01")),expand=expansion(0.0)) +
scale_y_continuous(breaks=(0:20)/20,expand=expansion(0,0)); p
# SAVE
att_rate_filename<-paste0(mcmc_foldername,"/dynamics_cumulattackrate_deaths_CDRscan.png")
if (length(p$facet$params$facets)>0) {att_rate_filename<-gsub(".png","_faceted.png",att_rate_filename)}
ggsave(att_rate_filename,width=22,height=16,units="cm")
p<-ggplot(summ %>% filter(compartment=="attack_rate")) +
geom_line(aes(x=date,y=mean,group=CDR,color=factor(CDR)),size=1.2) + facet_wrap(~CDR,nrow=length(CDR_vals),labeller=labeller(CDR=label_both)) +
geom_ribbon(aes(x=date,ymin=lower,ymax=upper,group=CDR,fill=factor(CDR)),alpha=0.2) + labs(color="CDR",fill="CDR") +
standard_theme + theme_bw() + xlab("") + ylab("cumulative attack rate") + theme(axis.text.x=element_text(vjust=0.5,angle=90)) +
scale_x_date(date_breaks="week",limits=as.Date(c("2020-01-10","2020-11-01")),expand=expansion(0.0)) +
scale_y_continuous(breaks=(0:20)/20,expand=expansion(0,0)); p
att_rate_filename<-paste0(mcmc_foldername,"/dynamics_cumulattackrate_deaths_CDRscan.png")
if (length(p$facet$params$facets)>0) {att_rate_filename<-gsub(".png","_faceted.png",att_rate_filename)}
ggsave(att_rate_filename,width=22,height=16,units="cm")

# params=list(beta=beta_val,gamma=gamma,d_death=d_death,IFR_estim=IFR_estim,seed_size=seed_size_val,day0_num=day0_num,
#             seed_t=seeding_duration, timevar_input=OxCGRT_input$OxCGRT_scaled)
# RUN & process output
df_ode_solution=fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=introd_date_scanvals[introd_date_scanvals %in% day0],
OxCGRT_input$date,num_params=c(beta_val,gamma,d_death,IFR_estim),seed_size_val=seed_size_val,OxCGRT_input,compliance=compliance_val,
N_tot*mogadishu_popul/sum(N_tot), c(),"")[[1]]
# concatenate
df_ode_solution_scan=bind_rows(df_ode_solution_scan,df_ode_solution)
print(c(day0_num,seed_size_val))
}
}
mogad_biweekly_death_rate=1.2e3
newdeaths_pred=subset(df_ode_solution_scan,name %in% c("new_deaths")) %>%
mutate(sum_biweekly=roll_sum(value,14,fill=NA,align="right")) %>% group_by(introd_date,seed_size) %>%
mutate(value_norm=sum_biweekly/mogad_biweekly_death_rate, datasource="model (excess deaths %)")
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates),max(newsurface_biweekly$date))) + labs(color="") +
ggtitle("SIR model, scan in introduction date & initial infections") + xlab('time (days)') + ylab('number')
introd_date_scanvals=seq(as.Date("2019-11-15"),as.Date("2020-02-01"),14)
introd_date_scanvals
IFR_estim
IFR_estim=c((ifr_all_age_groups$mean %*% pop_struct/sum(pop_struct) )); IFR_estim=0.5/100
# TRANSMISSION parameter (same as susceptibility) (without popul normalisation, done in the fcn)
beta_val=0.5 # /mogadishu_popul
# scan values for date of introd
introd_date_scanvals=seq(as.Date("2019-11-15"),as.Date("2020-02-01"),14)
intr_inf_scanvals=c(seq(5,105,15)); seeding_duration=10
# compliance with NPIs
compliance_val=0.5
var_categ_list=list(name_vars=c("t", "S", "E","I","Ihid","R","D","newinfvar","beta"),
sel_vars=c("t","S","E","I","R","D","new_infections","new_deaths","symptom_cases"),
case_vars=c("S","E","I","R","symptom_cases","new_infections"),cumul_var=c("S","R","D"), delta_var=c("new_infections","new_deaths"))
# parameter scan in introd date and seed size
df_ode_solution_scan=data.frame()
for (day0 in introd_date_scanvals) {
for (seed_size_val in intr_inf_scanvals) {
if (!exists("df_ode_solution_scan")) {df_ode_solution_scan=data.frame()}
day0_num=as.numeric(day0-as.numeric(OxCGRT_input$date[1]))
# init conds
initvals_S_I=c(mogadishu_popul,rep(0,length(sir_varnames)-1),beta_val); names(initvals_S_I)=c(sir_varnames,"beta_dyn")
# list of parameters
# params=list(beta=beta_val,gamma=gamma,d_death=d_death,IFR_estim=IFR_estim,seed_size=seed_size_val,day0_num=day0_num,
#             seed_t=seeding_duration, timevar_input=OxCGRT_input$OxCGRT_scaled)
# RUN & process output
df_ode_solution=fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=introd_date_scanvals[introd_date_scanvals %in% day0],
OxCGRT_input$date,num_params=c(beta_val,gamma,d_death,IFR_estim),seed_size_val=seed_size_val,OxCGRT_input,compliance=compliance_val,
N_tot*mogadishu_popul/sum(N_tot), c(),"")[[1]]
# concatenate
df_ode_solution_scan=bind_rows(df_ode_solution_scan,df_ode_solution)
print(c(day0_num,seed_size_val))
}
}
mogad_biweekly_death_rate=1.2e3
newdeaths_pred=subset(df_ode_solution_scan,name %in% c("new_deaths")) %>%
mutate(sum_biweekly=roll_sum(value,14,fill=NA,align="right")) %>% group_by(introd_date,seed_size) %>%
mutate(value_norm=sum_biweekly/mogad_biweekly_death_rate, datasource="model (excess deaths %)")
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates),max(newsurface_biweekly$date))) + labs(color="") +
ggtitle("SIR model, scan in introduction date & initial infections") + xlab('time (days)') + ylab('number')
colnames(newdeaths_pred)
as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))])
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(xintercept=introd_date,color="red") + geom_vline(xintercept=as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]),color="green")
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates),max(newsurface_biweekly$date))) + labs(color="") +
ggtitle("SIR model, scan in introduction date & initial infections") + xlab('time (days)') + ylab('number')
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(xintercept=introd_date,color="red") + geom_vline(xintercept=as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]),color="green") +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates),max(newsurface_biweekly$date))) + labs(color="") +
ggtitle("SIR model, scan in introduction date & initial infections") + xlab('time (days)') + ylab('number')
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(aes(xintercept=introd_date),color="red") + geom_vline(xintercept=as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]),color="green") +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates),max(newsurface_biweekly$date))) + labs(color="") +
ggtitle("SIR model, scan in introduction date & initial infections") + xlab('time (days)') + ylab('number')
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(aes(xintercept=introd_date),color="red") + geom_vline(xintercept=as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]),color="green") +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates)+15,max(newsurface_biweekly$date))) + labs(color="") +
ggtitle("SIR model, scan in introduction date & initial infections") + xlab('time (days)') + ylab('number')
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(aes(xintercept=introd_date),color="red") + geom_vline(xintercept=as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]),color="green") +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates)+15,max(newsurface_biweekly$date))) + labs(color="") +
labs(title="SIR model ~ f(introduction date & seed size)",subtitle=paste0("beta=",beta_val,"compliance (NPI)=",compliance_val)) +
xlab('time (days)') + ylab('number')
beta_val=0.45 # /mogadishu_popul
# scan values for date of introd
introd_date_scanvals=seq(as.Date("2019-11-15"),as.Date("2020-02-01"),10)
intr_inf_scanvals=c(seq(5,105,15)); seeding_duration=10
# compliance with NPIs
compliance_val=0.5
var_categ_list=list(name_vars=c("t", "S", "E","I","Ihid","R","D","newinfvar","beta"),
sel_vars=c("t","S","E","I","R","D","new_infections","new_deaths","symptom_cases"),
case_vars=c("S","E","I","R","symptom_cases","new_infections"),cumul_var=c("S","R","D"), delta_var=c("new_infections","new_deaths"))
df_ode_solution_scan=data.frame()
for (day0 in introd_date_scanvals) {
for (seed_size_val in intr_inf_scanvals) {
if (!exists("df_ode_solution_scan")) {df_ode_solution_scan=data.frame()}
day0_num=as.numeric(day0-as.numeric(OxCGRT_input$date[1]))
# init conds
initvals_S_I=c(mogadishu_popul,rep(0,length(sir_varnames)-1),beta_val); names(initvals_S_I)=c(sir_varnames,"beta_dyn")
# list of parameters
# params=list(beta=beta_val,gamma=gamma,d_death=d_death,IFR_estim=IFR_estim,seed_size=seed_size_val,day0_num=day0_num,
#             seed_t=seeding_duration, timevar_input=OxCGRT_input$OxCGRT_scaled)
# RUN & process output
df_ode_solution=fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=introd_date_scanvals[introd_date_scanvals %in% day0],
OxCGRT_input$date,num_params=c(beta_val,gamma,d_death,IFR_estim),seed_size_val=seed_size_val,OxCGRT_input,compliance=compliance_val,
N_tot*mogadishu_popul/sum(N_tot), c(),"")[[1]]
# concatenate
df_ode_solution_scan=bind_rows(df_ode_solution_scan,df_ode_solution)
print(c(day0_num,seed_size_val))
}
}
mogad_biweekly_death_rate=1.2e3
newdeaths_pred=subset(df_ode_solution_scan,name %in% c("new_deaths")) %>%
mutate(sum_biweekly=roll_sum(value,14,fill=NA,align="right")) %>% group_by(introd_date,seed_size) %>%
mutate(value_norm=sum_biweekly/mogad_biweekly_death_rate, datasource="model (excess deaths %)")
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(aes(xintercept=introd_date),color="red") + geom_vline(xintercept=as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]),color="green") +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates)+15,max(newsurface_biweekly$date))) + labs(color="") +
labs(title="SIR model ~ f(introduction date & seed size)",subtitle=paste0("beta=",beta_val,"compliance (NPI)=",compliance_val)) +
xlab('time (days)') + ylab('number')
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(aes(xintercept=introd_date),color="red") + geom_vline(xintercept=as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]),color="green") +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates)+15,max(newsurface_biweekly$date))) + labs(color="") +
labs(title="SIR model ~ f(introduction date & seed size)",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val)) +
xlab('time (days)') + ylab('number')
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(aes(xintercept=introd_date),color="red") + geom_vline(xintercept=as.Date(OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]),color="green") +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates)+15,max(newsurface_biweekly$date))) + labs(color="") +
labs(title="SIR model ~ f(introduction date & seed size)",
subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim)) +
xlab('time (days)') + ylab('number')
ggsave("simul_output/somalia_output/param_scan_satellite_SIRmodel.png",width=30,height=22,units="cm")
pred_data_comp=left_join(left_join(subset(newdeaths_pred, date %in% newsurface_biweekly$date),newsurface_biweekly,by="date",
suffix=c("","_satel_data")),biweekly_deaths_sel[,colnames(newsurface_biweekly)],by="date",suffix=c("","_report_data"))
mse_pred_data_comp=pred_data_comp %>% group_by(introd_date,seed_size) %>%
summarise(mse_satel=mean((value_norm- value_norm_satel_data)^2,na.rm = T),
mse_reported=mean((value_norm- value_norm_report_data)^2,na.rm = T)) %>% ungroup() %>%
mutate(mse_satel_scaled=scale(mse_satel),mse_reported_scaled=scale(mse_reported))
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=sqrt(value))) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("RMSE for grid search") +
scale_fill_gradient2(midpoint=0.5,low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) +
scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=sqrt(value))) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("RMSE for grid search") +
scale_fill_gradient2(midpoint=0.15,low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) +
scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=sqrt(value))) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("RMSE for grid search") +
scale_fill_gradient2(midpoint=0.1,low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) +
scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=sqrt(value))) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("RMSE for grid search") +
scale_fill_gradient2(midpoint=0.2,low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) +
scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=sqrt(value))) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("RMSE for grid search") +
scale_fill_gradient2(midpoint=0.12,low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) +
scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=sqrt(value))) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("RMSE for grid search") +
scale_fill_gradient2(midpoint=0,low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) +
scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=sqrt(value))) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("RMSE for grid search") +
scale_fill_gradient2(midpoint=0.3,low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) +
scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=sqrt(value))) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("RMSE for grid search") +
scale_fill_gradient2(midpoint=0.35,low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) +
scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
median(mse_pred_data_comp$mse_satel)
max(mse_pred_data_comp$mse_satel)
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("MSE for grid search") +
scale_fill_gradient2(midpoint=max(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
max(mse_pred_data_comp$mse_satel)
median(mse_pred_data_comp$mse_satel)
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + # facet_wrap(~name) +
geom_text(aes(label=round(value,2)),color="black",size=4) + theme_bw() + standard_theme + ggtitle("MSE for grid search") +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") + xlab("introd. date") + ylab("seed size (for 10 days)") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) #
# ggsave("simul_output/somalia_output/mse_param_scan_satellite_SIR_heatmap.png",width=32,height=20,units="cm")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,2)),color="black",size=4) +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim)) +
xlab("introd. date") + ylab("seed size (for 10 days)")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,2)),color="black",size=4) +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name)),
aes(x=introd_date,y=value,group=seed_size,color=factor(seed_size))) + geom_line(size=1.05) + geom_point() +
theme_bw() + standard_theme + scale_x_date(breaks=unique(mse_pred_data_comp$introd_date)) + xlab("introduction date") + ylab("MSE") +
labs(color="seed size",title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%"))
ggsave("simul_output/somalia_output/mse_param_scan_satellite_SIR_lineplot.png",width=32,height=20,units="cm")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,2)),color="black",size=4) +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
ggsave("simul_output/somalia_output/mse_param_scan_satellite_SIR_heatmap.png",width=32,height=20,units="cm")
intr_inf_scanvals=c(seq(5,120,15)); seeding_duration=10
intr_inf_scanvals
intr_inf_scanvals=c(seq(5,120,5)); seeding_duration=10
# compliance with NPIs
compliance_val=0.5
var_categ_list=list(name_vars=c("t", "S", "E","I","Ihid","R","D","newinfvar","beta"),
sel_vars=c("t","S","E","I","R","D","new_infections","new_deaths","symptom_cases"),
case_vars=c("S","E","I","R","symptom_cases","new_infections"),cumul_var=c("S","R","D"), delta_var=c("new_infections","new_deaths"))
# parameter scan in introd date and seed size
df_ode_solution_scan=data.frame()
for (day0 in introd_date_scanvals) {
for (seed_size_val in intr_inf_scanvals) {
if (!exists("df_ode_solution_scan")) {df_ode_solution_scan=data.frame()}
day0_num=as.numeric(day0-as.numeric(OxCGRT_input$date[1]))
# init conds
initvals_S_I=c(mogadishu_popul,rep(0,length(sir_varnames)-1),beta_val); names(initvals_S_I)=c(sir_varnames,"beta_dyn")
# list of parameters
# params=list(beta=beta_val,gamma=gamma,d_death=d_death,IFR_estim=IFR_estim,seed_size=seed_size_val,day0_num=day0_num,
#             seed_t=seeding_duration, timevar_input=OxCGRT_input$OxCGRT_scaled)
# RUN & process output
df_ode_solution=fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=introd_date_scanvals[introd_date_scanvals %in% day0],
OxCGRT_input$date,num_params=c(beta_val,gamma,d_death,IFR_estim),seed_size_val=seed_size_val,OxCGRT_input,compliance=compliance_val,
N_tot*mogadishu_popul/sum(N_tot), c(),"")[[1]]
# concatenate
df_ode_solution_scan=bind_rows(df_ode_solution_scan,df_ode_solution)
print(c(day0_num,seed_size_val))
}
}
mogad_biweekly_death_rate=1.2e3
newdeaths_pred=subset(df_ode_solution_scan,name %in% c("new_deaths")) %>%
mutate(sum_biweekly=roll_sum(value,14,fill=NA,align="right")) %>% group_by(introd_date,seed_size) %>%
mutate(value_norm=sum_biweekly/mogad_biweekly_death_rate, datasource="model (excess deaths %)")
OxCGRT_input$date[min(which(OxCGRT_input$NPI_on>0))]
min(OxCGRT_input$date[OxCGRT_input$NPI_on>0])
ggplot(newdeaths_pred) + # subset(newdeaths_pred, date %in% newsurface_biweekly$date)
geom_line(aes(x=date,y=value_norm,color=datasource),size=1.2) + # geom_bar(stat="identity",fill=NA) + # model
geom_line(data=newsurface_biweekly,aes(x=date,y=value_norm,color=datasource),size=1.05) + # satellite
# geom_line(data=biweekly_deaths_sel[,c("date","value_norm","datasource")],aes(x=date,y=value_norm,color=datasource),size=1.05) +
facet_grid(introd_date~seed_size,labeller=labeller(seed_size=label_both),scales="free") +
theme_bw() + standard_theme + theme(legend.position="top",axis.text.x=element_text(size=6)) +
geom_vline(aes(xintercept=introd_date),color="red") + geom_vline(xintercept=as.Date(min(OxCGRT_input$date[OxCGRT_input$NPI_on>0])),color="green") +
scale_x_date(date_breaks="2 weeks",limits=c(min(timespan_dates)+15,max(newsurface_biweekly$date))) + labs(color="") +
labs(title="SIR model ~ f(introduction date & seed size)",
subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim)) + xlab('time (days)') + ylab('number')
pred_data_comp=left_join(left_join(subset(newdeaths_pred, date %in% newsurface_biweekly$date),newsurface_biweekly,by="date",
suffix=c("","_satel_data")),biweekly_deaths_sel[,colnames(newsurface_biweekly)],by="date",suffix=c("","_report_data"))
mse_pred_data_comp=pred_data_comp %>% group_by(introd_date,seed_size) %>%
summarise(mse_satel=mean((value_norm- value_norm_satel_data)^2,na.rm = T),
mse_reported=mean((value_norm- value_norm_report_data)^2,na.rm = T)) %>% ungroup() %>%
mutate(mse_satel_scaled=scale(mse_satel),mse_reported_scaled=scale(mse_reported))
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,2)),color="black",size=4) +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
seq(5,120,5)
length(seq(5,120,5))
intr_inf_scanvals=seq(5,150,10)
intr_inf_scanvals
intr_inf_scanvals=seq(5,150,10); seeding_duration=10
# compliance with NPIs
compliance_val=0.5
var_categ_list=list(name_vars=c("t", "S", "E","I","Ihid","R","D","newinfvar","beta"),
sel_vars=c("t","S","E","I","R","D","new_infections","new_deaths","symptom_cases"),
case_vars=c("S","E","I","R","symptom_cases","new_infections"),cumul_var=c("S","R","D"), delta_var=c("new_infections","new_deaths"))
# parameter scan in introd date and seed size
df_ode_solution_scan=data.frame()
for (day0 in introd_date_scanvals) {
for (seed_size_val in intr_inf_scanvals) {
if (!exists("df_ode_solution_scan")) {df_ode_solution_scan=data.frame()}
day0_num=as.numeric(day0-as.numeric(OxCGRT_input$date[1]))
# init conds
initvals_S_I=c(mogadishu_popul,rep(0,length(sir_varnames)-1),beta_val); names(initvals_S_I)=c(sir_varnames,"beta_dyn")
# list of parameters
# params=list(beta=beta_val,gamma=gamma,d_death=d_death,IFR_estim=IFR_estim,seed_size=seed_size_val,day0_num=day0_num,
#             seed_t=seeding_duration, timevar_input=OxCGRT_input$OxCGRT_scaled)
# RUN & process output
df_ode_solution=fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=introd_date_scanvals[introd_date_scanvals %in% day0],
OxCGRT_input$date,num_params=c(beta_val,gamma,d_death,IFR_estim),seed_size_val=seed_size_val,OxCGRT_input,compliance=compliance_val,
N_tot*mogadishu_popul/sum(N_tot), c(),"")[[1]]
# concatenate
df_ode_solution_scan=bind_rows(df_ode_solution_scan,df_ode_solution)
print(c(day0_num,seed_size_val))
}
}
mogad_biweekly_death_rate=1.2e3
newdeaths_pred=subset(df_ode_solution_scan,name %in% c("new_deaths")) %>%
mutate(sum_biweekly=roll_sum(value,14,fill=NA,align="right")) %>% group_by(introd_date,seed_size) %>%
mutate(value_norm=sum_biweekly/mogad_biweekly_death_rate, datasource="model (excess deaths %)")
pred_data_comp=left_join(left_join(subset(newdeaths_pred, date %in% newsurface_biweekly$date),newsurface_biweekly,by="date",
suffix=c("","_satel_data")),biweekly_deaths_sel[,colnames(newsurface_biweekly)],by="date",suffix=c("","_report_data"))
mse_pred_data_comp=pred_data_comp %>% group_by(introd_date,seed_size) %>%
summarise(mse_satel=mean((value_norm- value_norm_satel_data)^2,na.rm = T),
mse_reported=mean((value_norm- value_norm_report_data)^2,na.rm = T)) %>% ungroup() %>%
mutate(mse_satel_scaled=scale(mse_satel),mse_reported_scaled=scale(mse_reported))
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,2)),color="black",size=4) +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,3)),color="black",size=4) +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
seq(2,150,10)
intr_inf_scanvals=seq(2,200,10); seeding_duration=10
# compliance with NPIs
compliance_val=0.5
var_categ_list=list(name_vars=c("t", "S", "E","I","Ihid","R","D","newinfvar","beta"),
sel_vars=c("t","S","E","I","R","D","new_infections","new_deaths","symptom_cases"),
case_vars=c("S","E","I","R","symptom_cases","new_infections"),cumul_var=c("S","R","D"), delta_var=c("new_infections","new_deaths"))
# parameter scan in introd date and seed size
df_ode_solution_scan=data.frame()
for (day0 in introd_date_scanvals) {
for (seed_size_val in intr_inf_scanvals) {
if (!exists("df_ode_solution_scan")) {df_ode_solution_scan=data.frame()}
day0_num=as.numeric(day0-as.numeric(OxCGRT_input$date[1]))
# init conds
initvals_S_I=c(mogadishu_popul,rep(0,length(sir_varnames)-1),beta_val); names(initvals_S_I)=c(sir_varnames,"beta_dyn")
# list of parameters
# params=list(beta=beta_val,gamma=gamma,d_death=d_death,IFR_estim=IFR_estim,seed_size=seed_size_val,day0_num=day0_num,
#             seed_t=seeding_duration, timevar_input=OxCGRT_input$OxCGRT_scaled)
# RUN & process output
df_ode_solution=fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=introd_date_scanvals[introd_date_scanvals %in% day0],
OxCGRT_input$date,num_params=c(beta_val,gamma,d_death,IFR_estim),seed_size_val=seed_size_val,OxCGRT_input,compliance=compliance_val,
N_tot*mogadishu_popul/sum(N_tot), c(),"")[[1]]
# concatenate
df_ode_solution_scan=bind_rows(df_ode_solution_scan,df_ode_solution)
print(c(day0_num,seed_size_val))
}
}
mogad_biweekly_death_rate=1.2e3
newdeaths_pred=subset(df_ode_solution_scan,name %in% c("new_deaths")) %>%
mutate(sum_biweekly=roll_sum(value,14,fill=NA,align="right")) %>% group_by(introd_date,seed_size) %>%
mutate(value_norm=sum_biweekly/mogad_biweekly_death_rate, datasource="model (excess deaths %)")
pred_data_comp=left_join(left_join(subset(newdeaths_pred, date %in% newsurface_biweekly$date),newsurface_biweekly,by="date",
suffix=c("","_satel_data")),biweekly_deaths_sel[,colnames(newsurface_biweekly)],by="date",suffix=c("","_report_data"))
mse_pred_data_comp=pred_data_comp %>% group_by(introd_date,seed_size) %>%
summarise(mse_satel=mean((value_norm- value_norm_satel_data)^2,na.rm = T),
mse_reported=mean((value_norm- value_norm_report_data)^2,na.rm = T)) %>% ungroup() %>%
mutate(mse_satel_scaled=scale(mse_satel),mse_reported_scaled=scale(mse_reported))
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,3)),color="black",size=4) +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
introd_date_scanvals=seq(as.Date("2019-11-15"),as.Date("2020-02-08"),7)
introd_date_scanvals
intr_inf_scanvals=seq(2,250,15); seeding_duration=10
intr_inf_scanvals
introd_date_scanvals=seq(as.Date("2019-11-15"),as.Date("2020-02-08"),7)
intr_inf_scanvals=seq(2,250,15); seeding_duration=10
# compliance with NPIs
compliance_val=0.5
var_categ_list=list(name_vars=c("t", "S", "E","I","Ihid","R","D","newinfvar","beta"),
sel_vars=c("t","S","E","I","R","D","new_infections","new_deaths","symptom_cases"),
case_vars=c("S","E","I","R","symptom_cases","new_infections"),cumul_var=c("S","R","D"), delta_var=c("new_infections","new_deaths"))
# parameter scan in introd date and seed size
df_ode_solution_scan=data.frame()
for (day0 in introd_date_scanvals) {
for (seed_size_val in intr_inf_scanvals) {
if (!exists("df_ode_solution_scan")) {df_ode_solution_scan=data.frame()}
day0_num=as.numeric(day0-as.numeric(OxCGRT_input$date[1]))
# init conds
initvals_S_I=c(mogadishu_popul,rep(0,length(sir_varnames)-1),beta_val); names(initvals_S_I)=c(sir_varnames,"beta_dyn")
# list of parameters
# params=list(beta=beta_val,gamma=gamma,d_death=d_death,IFR_estim=IFR_estim,seed_size=seed_size_val,day0_num=day0_num,
#             seed_t=seeding_duration, timevar_input=OxCGRT_input$OxCGRT_scaled)
# RUN & process output
df_ode_solution=fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=introd_date_scanvals[introd_date_scanvals %in% day0],
OxCGRT_input$date,num_params=c(beta_val,gamma,d_death,IFR_estim),seed_size_val=seed_size_val,OxCGRT_input,compliance=compliance_val,
N_tot*mogadishu_popul/sum(N_tot), c(),"")[[1]]
# concatenate
df_ode_solution_scan=bind_rows(df_ode_solution_scan,df_ode_solution)
print(c(day0_num,seed_size_val))
}
}
mogad_biweekly_death_rate=1.2e3
newdeaths_pred=subset(df_ode_solution_scan,name %in% c("new_deaths")) %>%
mutate(sum_biweekly=roll_sum(value,14,fill=NA,align="right")) %>% group_by(introd_date,seed_size) %>%
mutate(value_norm=sum_biweekly/mogad_biweekly_death_rate, datasource="model (excess deaths %)")
pred_data_comp=left_join(left_join(subset(newdeaths_pred, date %in% newsurface_biweekly$date),newsurface_biweekly,by="date",
suffix=c("","_satel_data")),biweekly_deaths_sel[,colnames(newsurface_biweekly)],by="date",suffix=c("","_report_data"))
mse_pred_data_comp=pred_data_comp %>% group_by(introd_date,seed_size) %>%
summarise(mse_satel=mean((value_norm- value_norm_satel_data)^2,na.rm = T),
mse_reported=mean((value_norm- value_norm_report_data)^2,na.rm = T)) %>% ungroup() %>%
mutate(mse_satel_scaled=scale(mse_satel),mse_reported_scaled=scale(mse_reported))
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,3)),color="black",size=4) +
scale_fill_gradient2(midpoint=median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,3)),color="black",size=4) +
scale_fill_gradient2(midpoint=0.9*median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,3)),color="black",size=4) +
scale_fill_gradient2(midpoint=1.1*median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name) ),
aes(x=introd_date,y=seed_size,fill=value)) + geom_tile(color="black") + theme_bw() + standard_theme +
geom_text(aes(label=round(value,3)),color="black",size=4) +
scale_fill_gradient2(midpoint=1.2*median(mse_pred_data_comp$mse_satel),low="blue",mid="white",high="red") +
scale_x_date(breaks=unique(mse_pred_data_comp$introd_date),expand=c(0,0)) + scale_y_continuous(breaks=unique(mse_pred_data_comp$seed_size),expand=c(0,0)) +
labs(title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%")) +
xlab("introd. date") + ylab("seed size (for 10 days)")
ggsave("simul_output/somalia_output/mse_param_scan_satellite_SIR_heatmap.png",width=32,height=20,units="cm")
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name)),
aes(x=introd_date,y=value,group=seed_size,color=factor(seed_size))) + geom_line(size=1.05) + geom_point() +
theme_bw() + standard_theme + scale_x_date(breaks=unique(mse_pred_data_comp$introd_date)) + xlab("introduction date") + ylab("MSE") +
labs(color="seed size",title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%"))
ggplot(subset(mse_pred_data_comp %>% pivot_longer(cols=!c(introd_date,seed_size)), !grepl("scaled",name) & grepl("satel",name)),
aes(x=introd_date,y=value,group=seed_size,color=factor(seed_size))) + geom_line(size=1.05) + geom_point() +
scale_y_log10() +
theme_bw() + standard_theme + scale_x_date(breaks=unique(mse_pred_data_comp$introd_date)) + xlab("introduction date") + ylab("MSE") +
labs(color="seed size",title="MSE for grid search",subtitle=paste0("beta=",beta_val,", compliance (NPI)=",compliance_val,", IFR=",IFR_estim*100,"%"))
ggsave("simul_output/somalia_output/mse_param_scan_satellite_SIR_lineplot.png",width=32,height=20,units="cm")

y=as.numeric(factor(ifr_all_inf))*y_text_dist+y_text,label=paste0(DIC_str,ifelse(as.numeric(factor(CDR))!=length(CDR_vals),",",""))),
size=4.5,show.legend=FALSE) +
# introd date labels
geom_text(data=fitting_params_best_estim,aes(x=x_date+x_dodge_text,y=as.numeric(factor(ifr_all_inf))*y_text_dist+y_text-y_dodge_low,
label="introd.=",color=factor(ifr_all_inf)),size=4.5,show.legend=FALSE) +
geom_text(data=fitting_params_best_estim,aes(x=x_date+x_dodge_text+16, # introd dates
y=as.numeric(factor(ifr_all_inf))*y_text_dist+y_text-y_dodge_low,label=paste0(gsub("-","/",introd_date),
ifelse(as.numeric(factor(CDR))!=length(CDR_vals),",",""))),size=4.5,show.legend=FALSE) + # gsub("2020-|2019-","",introd_date)
scale_x_date(date_breaks="1 week",limits=as.Date(c("2020-01-01","2020-10-01")),expand=expansion(0.0)) +
scale_y_continuous(breaks=(0:35)*2,expand=expansion(0.01,0)) +
geom_vline(data=npi_df,aes(xintercept=on),linetype="dashed",show.legend=F,size=0.5,color="darkgrey") + # NPIs
# NPI labels
geom_text(data=npi_df[1:3,],aes(x=on+ifelse(name=="first",21,5),y=y_text+6,label=paste0(ifelse(name=="first","max(Stringency)=",""),
round(contact_reduction,2))),size=5) + labs(color="IFR",fill="IFR")
# SAVE
ggsave(paste0(parscan_mcmc_dirname,"all_dynamic_fits_NPIcolorcode.png"),width=36,height=18,units="cm")
label_y_dodge=0.2; x_dashline=(1:4)+0.5 # c(5/6,7/6)
ggplot(fitting_params_best_estim %>% mutate(R0_label=paste0("R0=",round(R0_fit,1)),
npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,color=factor(ifr_all_inf),group=ifr_all_inf),width=1, # group=CDR
position=position_dodge(width=1)) + # scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=x_dashline,size=0.12,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + scale_y_continuous(expand=expansion(0.1,0)) +
theme_bw() + standard_theme + theme(legend.position="top") + # axis.text.x=element_blank(),axis.ticks.x=element_blank(),
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,group=ifr_all_inf,label=paste0(gsub("-","/",introd_date),", ",R0_label)),
position=position_dodge(width=1),size=4) + geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=ifr_all_inf,
label=paste0("NPI maximum effect: ",round(npi_max_effect*100),"%")),position=position_dodge(width=1),size=4) + xlab("IFR (%)") +
ylab("DIC") + labs(color="IFR (%)") # caption="Introd. date not shown when equal to 2019-11-11"
# SAVE
ggsave(paste0(parscan_mcmc_dirname,"DIC_xaxis_NPIscaling_colorcode_seedsize_alpha_CDR.png"),width=30,height=14,units="cm")
df_summary_plot=left_join(posteriors_summary_stats %>% filter(!name %in% "CDR") %>% group_by(name) %>%
mutate(median_range=max(median)-min(median)),DIC_logllk_values %>% select(!c(maxval,deviance,d_p)),
by=c("seedsize","ifr_logit_increm")) %>% filter(!name %in% c("ifr_logit_intercept","IFR sympt. infections (%)")) %>%
mutate(DIC_str=paste0(round(DIC/10^floor(log10(DIC)),2),"e",floor(log10(DIC)))) %>%
mutate(ifr_all_inf=round(sapply(ifr_logit_increm,
function(x) 1e2*sum(inv.logit(IFR_estimates_Sandmann2021$logit_ifr+x)*somalia_agegroups_IFR$agegroup_perc)),2) )
# plot
x_dodge_val=1; hpline_val=30
p <- ggplot(df_summary_plot,aes(x=factor(seedsize),group=ifr_all_inf)) + #
geom_linerange(aes(x=factor(ifr_all_inf),ymin=ci95_low,ymax=ci95_up,color=factor(ifr_all_inf)),
alpha=0.3,size=hpline_val,show.legend=FALSE) + # position=position_dodge(width=x_dodge_val)
geom_linerange(aes(x=factor(ifr_all_inf),ymin=ci50_low,ymax=ci50_up,color=factor(ifr_all_inf)),
alpha=0.6,size=hpline_val,show.legend=FALSE) + # position=position_dodge(width=x_dodge_val),
geom_hpline(aes(x=factor(ifr_all_inf),y=median,color=factor(ifr_all_inf)),width=0.9,size=0.8)+
facet_wrap(~name,scales="free",labeller=labeller(ifr_all_inf=label_both)) + # ~NPI_scale
geom_vline(xintercept=0.5+1:4,size=0.2,linetype="dashed") + theme_bw() + standard_theme + xlab("IFR (%)") +
ylab("median (CI50, CI95)") + labs(color="IFR (%)",caption=paste0("Burn-in: ",onefit$options$mcmc_burn_in,", Samples: ",
onefit$options$mcmc_samples," (MCMC)")) + scale_x_discrete(expand=expansion(0,0.5)) +
theme(panel.grid.major.x=element_blank(),legend.position="top") +#,axis.text.x=element_blank(),axis.ticks.x=element_blank()
geom_text(aes(x=factor(ifr_all_inf),y=ifelse(!grepl("introd",name),NA,ci95_up+1),label=ifelse(!grepl("introd",name),"",
paste0("DIC=",DIC_str))),size=4,position=position_dodge(width=x_dodge_val)) +
geom_text(aes(x=factor(ifr_all_inf),y=ifelse(!grepl("introd",name),ifelse(grepl("R0",name),median*0.995,median*0.96),median-1),
label=ifelse(!grepl("introd",name),round(median,2),
gsub("-","/",as.Date(onefit$base_parameters$date0)+median))),size=4,position=position_dodge(width=x_dodge_val)); p
# SAVE
ggsave(paste0(parscan_mcmc_dirname,"posteriors_mean_CIs_facet",ifelse(grepl("Wrap",class(p$facet)[1]),"wrap","grid"),
"_name_NPIscale_colorcode_seedsize",".png"),width=36,height=18,units="cm") # 2019/|2020/
p <- ggplot(summ %>% filter(compartment=="attack_rate")) +
geom_line(aes(x=date,y=mean,color=factor(ifr_all_inf)),size=1.2) + # ,alpha=factor(seedsize)
geom_ribbon(aes(x=date,ymin=lower,ymax=upper,fill=factor(ifr_all_inf),color=factor(ifr_all_inf)),size=0.3,alpha=0.1,linetype="dashed")+
scale_alpha_manual(values=c(0.4,0.5,0.6,0.7,0.8)) +
standard_theme + theme_bw() + xlab("") + ylab("cumulative attack rate") + theme(axis.text.x=element_text(vjust=0.5,angle=90)) +
scale_x_date(date_breaks="week",limits=as.Date(c("2020-01-10","2020-10-01")),expand=expansion(0.0)) +
labs(color="IFR (%)",fill="IFR (%)",alpha="seedsize") + scale_y_continuous(breaks=(0:20)/20,expand=expansion(0,0)) +
geom_vline(data=npi_df,aes(xintercept=on),linetype="dashed",show.legend=F,size=0.5,color="darkgrey") + # NPIs
# NPI labels
geom_text(data=npi_df[1:3,],aes(x=on+ifelse(name=="first",22,8),y=0.47,label=paste0(ifelse(name=="first","max(Stringency)=",""),
round(contact_reduction,2))),size=5); p
# SAVE
att_rate_filename<-paste0(parscan_mcmc_dirname,"dynamics_cumulattackrate_deaths_CDRscan.png")
if (length(p$facet$params$facets)>0) {att_rate_filename <- gsub(".png","_faceted.png",att_rate_filename)}
ggsave(att_rate_filename,width=22,height=16,units="cm")
getwd()
length(params$pop)
hist(params$pop[[1]]$dIp)
hist(params$pop[[1]]$dIp)
# ggplot(data.frame(dIp=params$pop[[1]]$dIp,dIa=params$pop[[1]]$dIa) )
params$pop[[1]]["dIa"]
sapply(c("dE","dIp","dIa","dIs"), function(x) params$pop[[1]][x])
class(sapply(c("dE","dIp","dIa","dIs"), function(x) params$pop[[1]][x]))
data.frame(sapply(c("dE","dIp","dIa","dIs"), function(x) params$pop[[1]][x]))
head(data.frame(sapply(c("dE","dIp","dIa","dIs"), function(x) params$pop[[1]][x])))
head(data.frame(sapply(c("dE","dIp","dIa","dIs"), function(x) params$pop[[1]][x])),2)
del_pars=data.frame(sapply(c("dE","dIp","dIa","dIs"), function(x) params$pop[[1]][x])); colnames(del_pars)=c("dE","dIp","dIa","dIs")
head(del_pars,2)
del_pars %>% pivot_longer()
del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs"))
head(diamonds,2)
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_histogram(aes(value)) + facet_wrap(~name)
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_histogram(aes(log10(value))) + facet_wrap(~name)
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_histogram(aes(log(value))) + facet_wrap(~name)
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_histogram(aes(log10(value))) + facet_wrap(~name) +
theme_bw() + standard_theme
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes(log10(value))) + facet_wrap(~name) +
theme_bw() + standard_theme
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes((value))) + facet_wrap(~name) +
theme_bw() + standard_theme
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes(log10(value))) + facet_wrap(~name) +
theme_bw() + standard_theme
mean($pop[[1]]$dE)
mean(params$pop[[1]]$dE)
median(params$pop[[1]]$dE)
mean(params$pop[[1]]$dE)
log10(mean(params$pop[[1]]$dE))
-16:0
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes(log10(value))) + facet_wrap(~name) +
theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
head(del_pars)
del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) %>% group_by(name) %>% summarise(mean(value))
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes(log10(value))) + facet_wrap(~name) +
geom_vline(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) %>% group_by(name) %>% summarise(meanval=mean(value)),
aes(xintercept=meanval)) + theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
del_pars=data.frame(sapply(c("dE","dIp","dIa","dIs"), function(x) params$pop[[1]][x])); colnames(del_pars)=c("dE","dIp","dIa","dIs")
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes(log10(value))) + facet_wrap(~name) +
geom_vline(data=del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) %>% group_by(name) %>% summarise(meanval=mean(value)),
aes(xintercept=meanval)) + theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes(log10(value))) + facet_wrap(~name) +
geom_vline(data=del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) %>% group_by(name) %>% summarise(meanval=mean(value)),
aes(xintercept=log10(meanval)),color=red,linteype="dashed") + theme_bw() + standard_theme +
scale_x_continuous(breaks=-16:0)
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes(log10(value))) + facet_wrap(~name) +
geom_vline(data=del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) %>% group_by(name) %>% summarise(meanval=mean(value)),
aes(xintercept=log10(meanval)),color="red",linteype="dashed") + theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
ggplot(del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) ) + geom_density(aes(log10(value))) + facet_wrap(~name) +
geom_vline(data=del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) %>% group_by(name) %>% summarise(meanval=mean(value)),
aes(xintercept=log10(meanval)),color="red",linetype="dashed") + theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs")) %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value))
del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value)) %>% pivot_longer(col=!name)
del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value))
del_pars
del_pars=del_pars %>% pivot_longer(cols = c("dE","dIp","dIa","dIs"))
ggplot(del_pars) + geom_density(aes(log10(value))) + facet_wrap(~name) + geom_vline(data=del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value)) %>% pivot_longer(col=!name),
aes(xintercept=log10(meanval)),color="red",linetype="dashed") +
theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
head(del_pars,2)
del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value))
del_pars %>% group_by(name) %>%
summarise(parname=name,meanval=mean(value),medval=median(value))
del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value)) %>% rename(parname=name) %>% pivot_longer(col=!parname)
ggplot(del_pars) + geom_density(aes(log10(value))) + facet_wrap(~name) + geom_vline(data=del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value)) %>% rename(parname=name) %>% pivot_longer(col=!parname),
aes(xintercept=log10(value),color=name),linetype="dashed") +
theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value)) %>% rename(parname=name) %>% pivot_longer(col=!parname)
del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value)) %>% pivot_longer(col=!name,names_to="type")
ggplot(del_pars) + geom_density(aes(log10(value))) + facet_wrap(~name) + geom_vline(data=del_pars %>% group_by(name) %>%
summarise(meanval=mean(value),medval=median(value)) %>% pivot_longer(col=!name,names_to="type"),
aes(xintercept=log10(value),color=type),linetype="dashed") + theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
ggplot(del_pars) + geom_density(aes(log10(value))) + facet_wrap(~name) + geom_vline(data=del_pars %>% group_by(name) %>%
summarise(MEAN=mean(value),MEDIAN=median(value)) %>% pivot_longer(col=!name,names_to="type"),
aes(xintercept=log10(value),color=type),linetype="dashed") + theme_bw() + standard_theme + scale_x_continuous(breaks=-16:0)
del_pars %>% group_by(name) %>%
summarise(MEAN=mean(value),MEDIAN=median(value)) %>% pivot_longer(col=!name,names_to="type")
remotes::install_github("epiforecasts/ringbp", dependencies = TRUE)
remotes::install_github("epiforecasts/ringbp", dependencies = TRUE)
library(ringbp)
res <- ringbp::scenario_sim(n.sim=10, num.initial.cases=1,prop.asym=0,
prop.ascertain=0.2, cap_cases=4500, cap_max_days=350,
r0isolated=0, r0community=2.5, disp.com=0.16, disp.iso=1, delay_shape=1.65,delay_scale=4.29,k=0, quarantine=FALSE)
dim(res)
head(res,2)
ggplot(data=res, aes(x=week, y=cumulative, col=as.factor(sim))) + geom_line(show.legend=FALSE, alpha=0.3) +
scale_y_continuous(name="Number of cases") + theme_bw()
ggplot(data=res, aes(x=week, y=cumulative, col=as.factor(sim))) + geom_line(show.legend=FALSE) + # , alpha=0.3
scale_y_continuous(name="Number of cases") + theme_bw()
head(res,2)
ggplot(data=res, aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line(show.legend=FALSE) + # , alpha=0.3
scale_y_continuous(name="Number of cases") + theme_bw()
ggplot(data=res, aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line() + # show.legend=FALSE,alpha=0.3
scale_y_continuous(name="Number of cases") + theme_bw()
ggplot(data=res, aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line() + # show.legend=FALSE,alpha=0.3
scale_y_continuous(name="Number of cases",expand = expansion(0.01,0)) + theme_bw()
ggplot(data=subset(res,week<15), aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line() + # show.legend=FALSE,alpha=0.3
scale_y_continuous(name="Number of cases",expand = expansion(0.01,0)) + theme_bw()
ggplot(data=subset(res,week<15), aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line() + geom_point() +
scale_y_continuous(name="Number of cases",expand = expansion(0.01,0)) + theme_bw() # show.legend=FALSE,alpha=0.3
ggplot(data=subset(res,week<15), aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line(linetype="dashed") + geom_point() +
scale_y_continuous(name="Number of cases",expand = expansion(0.01,0)) + theme_bw() # show.legend=FALSE,alpha=0.3
ggplot(data=subset(res,week<15), aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line(linetype="dashed") +
geom_point(size=sim) + scale_y_continuous(name="Number of cases",expand = expansion(0.01,0)) + theme_bw() # show.legend=FALSE,alpha=0.3
ggplot(data=subset(res,week<15), aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line(linetype="dashed") +
geom_point(aes(size=sim/(sim+10))) + scale_y_continuous(name="Number of cases",expand = expansion(0.01,0)) + theme_bw() # show.legend=FALSE,alpha=0.3
ggplot(data=subset(res,week<15), aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line(linetype="dashed") +
geom_point(aes(size=sim/(sim+10)),fill=NA,shape=1) + scale_y_continuous(name="Number of cases",expand=expansion(0.01,0)) + theme_bw()
res <- scenario_sim(n.sim=10, num.initial.cases=10,prop.asym=0,
prop.ascertain=0.2, cap_cases=4500, cap_max_days=350,
r0isolated=0, r0community=2.5, disp.com=0.16, disp.iso=1, delay_shape=1.65,delay_scale=4.29,k=0, quarantine=FALSE)
ggplot(data=subset(res,week<15), aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line(linetype="dashed") +
geom_point(aes(size=sim/(sim+10)),fill=NA,shape=1) + scale_y_continuous(name="Number of cases",expand=expansion(0.01,0)) + theme_bw()
ggplot(data=subset(res,week<15), aes(x=week, y=weekly_cases, col=as.factor(sim))) + geom_line(linetype="dashed") +
geom_point(fill=NA,shape=1) + scale_y_continuous(name="Number of cases",expand=expansion(0.01,0)) + theme_bw()
parscan_mcmc_dirname=
"simul_output/somalia/3param_fits_seedsize_IFR_fixed/scan_seedsize_ifr_introddate_N_182_20_fitperiod_20200223_20200824/"
parfit_scan_files<-list.files(parscan_mcmc_dirname,pattern = ".rds"); # slope_val=round(as.numeric(linregr$coefficients[2]),4)
# need to have IFR estimates from Sandmann: IFR_estimates_Sandmann2021$logit_ifr
# how many CDR values were used?
onefit=readRDS(paste0(parscan_mcmc_dirname,parfit_scan_files[1]))[[1]]; x_dodge_val=0.6; fitting_params <- names(onefit$priors)
scan_params<-c("seedsize","ifr_logit_increm","IFR all infections (%)")
CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4)[1:length(readRDS(paste0(parscan_mcmc_dirname,parfit_scan_files[1])))]
for (k in 1:length(parfit_scan_files)) {
for (n_CDR in 1:length(CDR_vals)) {
df_posteriors=readRDS(paste0(parscan_mcmc_dirname,parfit_scan_files[k]))[[n_CDR]]$posterior %>%
select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(CDR=round(CDR_vals[n_CDR],3)) %>%
mutate(ifr_logit_increm=as.numeric(gsub("ifr_increm|_","",as.numeric(str_match(parfit_scan_files[k],"ifr_increm(.*?)_")[2]))),
seedsize=as.numeric(str_match(parfit_scan_files[k],"seedsize(.*?).rds")[2]),`IFR all infections (%)`=sapply(ifr_logit_increm,
function(x) 1e2*sum(inv.logit(IFR_estimates_Sandmann2021$logit_ifr + x)*somalia_agegroups_IFR$agegroup_perc) ) )
if (n_CDR==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb=rbind(df_posteriors_comb,df_posteriors)}
}
if (k==1) {df_posteriors_parscan=df_posteriors_comb} else { df_posteriors_parscan=bind_rows(df_posteriors_parscan,df_posteriors_comb)}
}
# save
write_csv(df_posteriors_parscan,paste0(parscan_mcmc_dirname,"df_posteriors_parscan.csv"))
### ###
# calc summary stats
posteriors_summary_stats = df_posteriors_parscan %>% mutate(n=row_number()) %>%
pivot_longer(!c(n,all_of(scan_params),chain,trial,lp)) %>% group_by(name,ifr_logit_increm,seedsize) %>%
summarise(mean=mean(value),median=median(value),
ci95_low=quantile(value,probs=c(2.5,97.5)/1e2)[1],ci95_up=quantile(value,probs=c(2.5,97.5)/1e2)[2],
ci50_low=quantile(value,probs=c(25,75)/1e2)[1],ci50_up=quantile(value,probs=c(25,75)/1e2)[2],
post_lkl_mean=mean(lp),post_lkl_ci95_low=quantile(lp,probs=c(2.5,97.5)/1e2)[1],
post_lkl_ci95_up=quantile(lp,probs=c(2.5,97.5)/1e2)[2]) %>%
mutate(name=ifelse(name %in% "introd_date",paste0("introduction (days after ",
format(as.Date(onefit$base_parameters$date0),"%d/%m/%y"),")"),name),name=ifelse(name %in% "NPI_scale","NPI NPI_scale (0 to 1)",name))
# save
write_csv(posteriors_summary_stats,paste0(parscan_mcmc_dirname,"posteriors_summary_stats.csv"))
### ### ### ### ### ### ### ### ### ### ### ###
# RUN simuls from param distribs of fits
for (k_seedsize in sort(unique(df_posteriors_parscan$seedsize))) {
for (k_ifr_logit in unique(df_posteriors_parscan$ifr_logit_increm)) {
sel_file=parfit_scan_files[grepl(paste0("seedsize",k_seedsize,".rds"),parfit_scan_files) &
grepl(paste0("ifr_increm",k_ifr_logit,"_"),parfit_scan_files)]
# read in file
fits_death_scaling=readRDS(paste0(parscan_mcmc_dirname,sel_file))
n_seedsize=k_seedsize; ifr_logit_increm=k_ifr_logit
for (k in 1:length(fits_death_scaling)){ print(paste0("CDR scale=",k,", ifr logit increm=",k_ifr_logit,", seedsize=",k_seedsize))
dyn=cm_sample_fit(fits_death_scaling[[k]],25) %>% mutate(CDR=CDR_vals[k],ifr_logit_increm=k_ifr_logit,seedsize=k_seedsize) %>%
filter(compartment %in% c("S","cases","death_o"))
if (k==1 & k_seedsize==sort(unique(df_posteriors_parscan$seedsize))[1] &
k_ifr_logit==unique(df_posteriors_parscan$ifr_logit_increm)[1]){dyn_all=dyn} else {dyn_all=rbind(dyn_all,dyn)} }
}
}
summ = dyn_all %>% group_by(t,run,compartment,CDR,ifr_logit_increm,seedsize) %>% summarise(value=sum(value)) %>%
group_by(run,compartment,CDR,ifr_logit_increm,seedsize) %>%
mutate(value=ifelse(compartment %in% "S",(value[t==0]-value)/value[t==0],value),
compartment=ifelse(compartment %in% "S","attack_rate",as.character(compartment))) %>%
group_by(t,compartment,CDR,ifr_logit_increm,seedsize) %>% summarise(lower=hdi(value)[[1]],upper=hdi(value)[[2]],mean=mean(value)) %>%
mutate(date=as.Date(seq(as.Date(fits_death_scaling[[1]]$base_parameters$date0),
as.Date(fits_death_scaling[[1]]$base_parameters$date0)+max(t),1)[t+1]),CDR=round(CDR,5),
lower=lower*(round(CDR_vals[1],5)/CDR),upper=upper*(round(CDR_vals[1],5)/CDR),mean=mean*(round(CDR_vals[1],5)/CDR)) %>%
mutate(ifr_all_inf=round(sapply(ifr_logit_increm,
function(x) 1e2*sum(inv.logit(IFR_estimates_Sandmann2021$logit_ifr+x)*somalia_agegroups_IFR$agegroup_perc)),2) )
rm(dyn_all)
fitting_incidence_modelcompare = bind_rows(lapply((mogadishu_popul*CDR_vals/1e4)/baseline_daily_burials, function(x)
data.table(out_bdr_daily_estimates %>% select(date,daily_baseline_subtr) %>%
mutate(new_deaths=round(daily_baseline_subtr),CDR=round(x*1e4*baseline_daily_burials/mogadishu_popul,5),
date_within_fitting_t=ifelse(date>=min(onefit$data$date) & date<=max(onefit$data$date),TRUE,FALSE))) ))
# calculate likelihood, deviance, DIC
DIC_logllk_values <- left_join(right_join(summ %>% filter(compartment=="death_o") %>% select(!c(lower,upper)),
subset(fitting_incidence_modelcompare, date_within_fitting_t) %>% select(!date_within_fitting_t),by=c("CDR","date")) %>%
mutate(logllk=ifelse(!is.infinite(dpois(new_deaths,lambda=mean,log=T)),dpois(new_deaths,lambda=mean,log=T),NA)) %>%
group_by(CDR,ifr_logit_increm,seedsize) %>%
summarise(sum_logllk=sum(logllk,na.rm=T),deviance=-2*sum_logllk,d_p=var(-2*logllk,na.rm=T)/2,DIC=deviance+d_p),
fitting_incidence_modelcompare %>% group_by(CDR) %>% summarise(maxval=max(new_deaths)),by="CDR") %>%
mutate(DIC_str=paste0(round(DIC/10^floor(log10(DIC)),2),"e",floor(log10(DIC)))) %>%
mutate(ifr_all_inf=round(sapply(ifr_logit_increm,
function(x) 1e2*sum(inv.logit(IFR_estimates_Sandmann2021$logit_ifr+x)*somalia_agegroups_IFR$agegroup_perc)),2) )
# contact_red=round(max(npi_df$contact_reduction)*npi,2)
fitting_params_best_estim = left_join(posteriors_summary_stats %>% # mutate(CDR=ifelse(CDR==0.042,round(CDR_vals[1],5),CDR)) %>%
# check start date of simul, rewrite if needed!!
filter(name %in% c("npi_scale","R0_fit","introduction (days after 01/09/19)")) %>%
select(name,seedsize,ifr_logit_increm,mean),DIC_logllk_values %>% select(!c(deviance,d_p)),by=c("seedsize","ifr_logit_increm")) %>%
pivot_wider(names_from=name,values_from=mean) %>% # rename(IFR=`IFR all infections (%)`) %>%
mutate(introd_date=as.Date(onefit$base_parameters$date0)+`introduction (days after 01/09/19)`) %>%
mutate(ifr_all_inf=round(sapply(ifr_logit_increm,
function(x) 1e2*sum(inv.logit(IFR_estimates_Sandmann2021$logit_ifr+x)*somalia_agegroups_IFR$agegroup_perc) ),2))
y_text=14.5; x_dodge_text=2; y_low=8
ggplot(summ %>% filter(compartment=="death_o")  ) +
geom_line(aes(x=date,y=mean,color=factor(round(ifr_all_inf,2)))) + # ,group=interaction(NPI_scale,CDR),alpha=factor(CDR)
geom_ribbon(aes(x=date,ymin=lower,ymax=upper,fill=factor(round(ifr_all_inf,2))),alpha=0.2) + # alpha=factor(CDR)
geom_line(data=fitting_incidence_modelcompare %>% mutate(t=as.numeric(date)),aes(x=date,y=new_deaths),linetype="dashed",size=0.3) +
geom_point(data=fitting_incidence_modelcompare %>% mutate(t=as.numeric(date)),aes(x=date,y=new_deaths),fill=NA,shape=1,size=0.2) +
facet_wrap(~seedsize,labeller=labeller(CDR=label_both,seedsize=label_both),scales="free",nrow=2) + # CDR~seedsize
scale_alpha_manual(values=c(0.4,0.45,0.5,0.55)) + xlab("") + ylab("deaths (daily)") + standard_theme + theme_bw() +
theme(axis.text.x=element_text(vjust=0.5,angle=90),panel.grid.minor=element_blank(),legend.position="top") +
# DIC labels
geom_text(data=DIC_logllk_values,aes(x=as.Date("2020-01-15")+x_dodge_text-3,y=as.numeric(factor(ifr_logit_increm))*1.4+y_text,
label="DIC=",color=factor(ifr_all_inf)),size=3.25,show.legend=FALSE) + # DIC values
geom_text(data=DIC_logllk_values,aes(x=as.Date("2020-01-15")+x_dodge_text+19,
y=as.numeric(factor(ifr_all_inf))*1.4+y_text,label=paste0(DIC_str,ifelse(as.numeric(factor(CDR))!=length(CDR_vals),",",""))),
size=3.25,show.legend=FALSE) +
# introd date labels
geom_text(data=fitting_params_best_estim,aes(x=as.Date("2020-01-15")+x_dodge_text,y=as.numeric(factor(ifr_all_inf))*1.4+y_text-y_low,
label="introd.=",color=factor(ifr_all_inf)),size=3.25,show.legend=FALSE) +
geom_text(data=fitting_params_best_estim,aes(x=as.Date("2020-01-15")+x_dodge_text+35, # introd dates
y=as.numeric(factor(ifr_all_inf))*1.4+y_text-y_low,label=paste0(gsub("-","/",introd_date),
ifelse(as.numeric(factor(CDR))!=length(CDR_vals),",",""))),size=3.25,show.legend=FALSE) + # gsub("2020-|2019-","",introd_date)
scale_x_date(date_breaks="2 week",limits=as.Date(c("2020-01-01","2020-10-01")),expand=expansion(0.0)) +
geom_vline(data=npi_df,aes(xintercept=on),linetype="dashed",show.legend=F,size=0.5,color="darkgrey") + # NPIs
# NPI labels
geom_text(data=npi_df[1:3,],aes(x=on+ifelse(name=="first",38,10),y=21.5,label=paste0(ifelse(name=="first","max(Stringency)=",""),
round(contact_reduction,2))),size=3) + scale_y_continuous(breaks=(0:12)*2,limits=c(0,22.5),expand=expansion(0,0)) +
labs(color="IFR",fill="IFR")
label_y_dodge=10; label_y_factor=1.03; fontsize=3.5
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.22, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("2019/|2020/","",gsub("-","/",introd_date)),",",R0_label)), # group=CDR
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI_eff:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.22, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("2019/|2020/","",gsub("-","/",introd_date)))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+10,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI_eff:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.22, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("-","/",introd_date))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+10,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI_eff:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.22, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("-","/",introd_date))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+12,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI_eff:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
label_y_dodge=10; label_y_factor=1.03; fontsize=4.5
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.22, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("-","/",introd_date))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+20,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI_eff:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
# caption="Introd. date not shown when equal to 2019-11-11"
label_y_dodge=12; label_y_factor=1.03; fontsize=4.5
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.22, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("2019/|2020/","",gsub("-","/",introd_date)))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+20,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI_eff:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
label_y_dodge=12; label_y_factor=1.03; fontsize=4.5
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.22, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("2019/|2020/","'",gsub("-","/",introd_date)))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+20,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
parscan_mcmc_dirname
ggsave(paste0(parscan_mcmc_dirname,"DIC_xaxis_NPIscaling_colorcode_seedsize_alpha_CDR.png"),width=40,height=24,units="cm")
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.24, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("2019/|2020/","'",gsub("-","/",introd_date)))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+20,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
ggsave(paste0(parscan_mcmc_dirname,"DIC_xaxis_NPIscaling_colorcode_seedsize_alpha_CDR.png"),width=40,height=24,units="cm")
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.24, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("2019/|2020/","'",gsub("-","/",introd_date)))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+16,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI:",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
# caption="Introd. date not shown when equal to 2019-11-11"
# SAVE
ggsave(paste0(parscan_mcmc_dirname,"DIC_xaxis_NPIscaling_colorcode_seedsize_alpha_CDR.png"),width=40,height=24,units="cm")
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.24, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("2019/|2020/","'",gsub("-","/",introd_date)))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+16,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI: ",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
# caption="Introd. date not shown when equal to 2019-11-11"
# SAVE
ggsave(paste0(parscan_mcmc_dirname,"DIC_xaxis_NPIscaling_colorcode_seedsize_alpha_CDR.png"),width=40,height=24,units="cm")
ggplot(fitting_params_best_estim %>% filter(ifr_all_inf<1.6 & seedsize>20) %>%
mutate(R0_label=paste0("R0=",round(R0_fit,1)),npi_max_effect=npi_scale*max(npi_df$contact_reduction)) ) +
geom_hpline(aes(x=factor(ifr_all_inf),y=DIC,group=seedsize,color=factor(seedsize)),width=0.24, # group=CDR,alpha=factor(CDR)
position=position_dodge(width=1)) + scale_alpha_manual(values=c(0.4,0.55,0.7,0.85)) +
geom_vline(xintercept=(2:4)-0.5,size=0.2,linetype="dashed") + # facet_wrap(~seedsize,labeller=labeller(CDR=label_both),nrow = 3) +
scale_x_discrete(expand=expansion(0.1,0)) + # scale_y_log10() + # scale_y_continuous(breaks=seq(5,100,by=1)*100) +
theme_bw() + standard_theme +
theme(axis.text.x=element_text(vjust=0.5,hjust=0.95,size=12),axis.text.y=element_text(size=12),panel.grid.major.x=element_blank(),
legend.position="top",strip.text=element_text(size=15)) +
# introd date
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge,
group=seedsize,label=paste0(gsub("2019/|2020/","'",gsub("-","/",introd_date)))),position=position_dodge(width=1),size=fontsize) +
# R0
geom_text(aes(x=factor(ifr_all_inf),y=DIC+label_y_dodge+14,group=seedsize,label=R0_label),
position=position_dodge(width=1),size=fontsize) +
geom_text(aes(x=factor(ifr_all_inf),y=DIC-label_y_dodge,group=seedsize,label=paste0("NPI: ",round(npi_max_effect*100),"%")),
position=position_dodge(width=1),size=fontsize) + xlab("IFR (%)") + ylab("DIC") + labs(color="seedsize",alpha="CDR")
# caption="Introd. date not shown when equal to 2019-11-11"
# SAVE
ggsave(paste0(parscan_mcmc_dirname,"DIC_xaxis_NPIscaling_colorcode_seedsize_alpha_CDR.png"),width=40,height=24,units="cm")

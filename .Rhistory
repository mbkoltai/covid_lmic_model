params_list=list("initvals"=c("S"=mogadishu_popul,"E"=0,"I_R"=0,"I_D"=0,"D"=0),"popul"=mogadishu_popul,
"timesteps"=seq(0,nrow(OxCGRT_input),0.25),"fitting_start_date"="2020-01-19","negbinom_size"=10)
colnames(data_simul)
seir_error=function(opt_params,params_list,data,err_type,npi_date){
ode_sol <- euler(y=params_list$initvals,times=params_list$timesteps,func=simple_sir_somalia_interpol,parms=opt_params) %>%
as.data.frame() %>% filter(time %% 1 ==0) %>% mutate(new_deaths=round(D-lag(D, default=D[1])),date=npi_date[time+1]) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")) %>% filter(date %in% data$date)
# error
data_simul=left_join(ode_sol[,c("time","date","new_deaths_weekly")],fitting_data,by="date")
data_simul=subset(data_simul, date>params_list$fitting_start_date)
if (grepl("sse",err_type)){ simul_error=sum((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2)}
if (grepl("rmse",err_type)){ simul_error=sqrt(mean((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2))}
if (grepl("poiss",err_type)){ simul_error=-sum(dpois(x=round(data_simul$new_burials_weekly),
lambda=round(data_simul$new_deaths_weekly),log=TRUE)) }
if (grepl("negbin",err_type)){simul_error=-sum(dnbinom(x=round(data_simul$new_burials_weekly),
mu=round(ode_sol$new_deaths_weekly),log=TRUE,size=params_list$negbinom_size)) }
simul_error # ode_sol
}
seir_error(opt_params,params_list,fitting_data,err_type="poiss",npi_date=OxCGRT_input$date)
data_simul
data_simul=subset(data_simul, date>params_list$fitting_start_date)
View(data_simul)
seir_error(opt_params,params_list,fitting_data,err_type="poiss",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="mse",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
View(err_type)
rm(err_type)
View(error_pred_data_comp)
View(subset(error_pred_data_comp, IFR==2.5/100 & seed_size=16 & npi_compliance==16 & beta==0.325))
View(subset(error_pred_data_comp, IFR==2.5/100 & seed_size==16 & npi_compliance==16 & beta==0.325))
View(subset(error_pred_data_comp, IFR==2.5/100 & seed_size==16 & npi_compliance==0.1 & beta==0.325))
View(subset(error_pred_data_comp, IFR==2.5/100))
opt_params=c("beta"=0.325/mogadishu_popul,"IFR_estim"=4/100,"seed_size"=16,"npi_compl"=0.1)
# time-varying inputs
# day0_num=as.numeric(as.Date("2019-11-01")-OxCGRT_input$date[1])
day0_num=0; seeding_duration=10; # compliance=0.1; seed_size_val=10
timevar_signal<-data.frame(t=(1:nrow(OxCGRT_input))-1,npi_index=(1-OxCGRT_input$OxCGRT_scaled)*OxCGRT_input$NPI_on,seeding=0)
timevar_signal$seeding[timevar_signal$t %in% day0_num:(day0_num+seeding_duration)]=1
input_npi <- approxfun(timevar_signal[,c("t","npi_index")]); input_seeding<-approxfun(timevar_signal[,c("t","seeding")])
#
seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
head(timevar_signal)
OxCGRT_input$date[1:11]
View(subset(error_pred_data_comp, IFR==4/100 & seed_size==16 & npi_compliance==0.1))
unique(error_pred_data_comp$seed_size)
View(subset(error_pred_data_comp, IFR==4/100 & seed_size==17 & npi_compliance==0.1))
day0_num=0; seeding_duration=21; # compliance=0.1; seed_size_val=10
timevar_signal<-data.frame(t=(1:nrow(OxCGRT_input))-1,npi_index=(1-OxCGRT_input$OxCGRT_scaled)*OxCGRT_input$NPI_on,seeding=0)
timevar_signal$seeding[timevar_signal$t %in% day0_num:(day0_num+seeding_duration)]=1
input_npi <- approxfun(timevar_signal[,c("t","npi_index")]); input_seeding<-approxfun(timevar_signal[,c("t","seeding")])
#
seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
View(subset(error_pred_data_comp, IFR==4/100 & seed_size==17 & npi_compliance==0.1 & seeding_duration==21))
View(subset(error_pred_data_comp, IFR==4/100 & seed_size==17 & npi_compliance==0.1 & seeding_duration==21 & beta==0.325))
View(subset(error_pred_data_comp, IFR==4/100 & seed_size==17 & npi_compliance==0.1 & seeding_duration==21))
View(subset(error_pred_data_comp, IFR==4/100 & seed_size==17 & npi_compliance==0.1 & seeding_duration==21 & beta==0.3))
seir_error(opt_params,params_list,fitting_data,err_type="negbinom",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="poisson",npi_date=OxCGRT_input$date)
opt_params=c("beta"=0.325/mogadishu_popul,"IFR_estim"=4/100,"seed_size"=17,"npi_compl"=0.1)
# time-varying inputs
# day0_num=as.numeric(as.Date("2019-11-01")-OxCGRT_input$date[1])
day0_num=0; seeding_duration=21; # compliance=0.1; seed_size_val=10
timevar_signal<-data.frame(t=(1:nrow(OxCGRT_input))-1,npi_index=(1-OxCGRT_input$OxCGRT_scaled)*OxCGRT_input$NPI_on,seeding=0)
timevar_signal$seeding[timevar_signal$t %in% day0_num:(day0_num+seeding_duration)]=1
input_npi <- approxfun(timevar_signal[,c("t","npi_index")]); input_seeding<-approxfun(timevar_signal[,c("t","seeding")])
#
seir_error(opt_params,params_list,fitting_data,err_type="poisson",npi_date=OxCGRT_input$date)
OxCGRT_input$date
timevar_signal<-data.frame(t=(1:nrow(OxCGRT_input))-1,date=OxCGRT_input$date,npi_index=(1-OxCGRT_input$OxCGRT_scaled)*OxCGRT_input$NPI_on,seeding=0)
timevar_signal$seeding[timevar_signal$t %in% day0_num:(day0_num+seeding_duration)]=1
input_npi <- approxfun(timevar_signal[,c("t","npi_index")]); input_seeding<-approxfun(timevar_signal[,c("t","seeding")])
head(timevar_signal,3)
day0_num=as.Date("2019-11-12"); seeding_duration=21; # compliance=0.1; seed_size_val=10
timevar_signal<-data.frame(t=(1:nrow(OxCGRT_input))-1,date=OxCGRT_input$date,npi_index=(1-OxCGRT_input$OxCGRT_scaled)*OxCGRT_input$NPI_on,seeding=0)
timevar_signal$seeding[timevar_signal$date %in% day0_num:(day0_num+seeding_duration)]=1
input_npi <- approxfun(timevar_signal[,c("t","npi_index")]); input_seeding<-approxfun(timevar_signal[,c("t","seeding")])
View(timevar_signal)
seir_error(opt_params,params_list,fitting_data,err_type="poisson",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
seir_error=function(opt_params,params_list,data,err_type,npi_date){
ode_sol <- euler(y=params_list$initvals,times=params_list$timesteps,func=simple_sir_somalia_interpol,parms=opt_params) %>%
as.data.frame() %>% filter(time %% 1 ==0) %>% mutate(new_deaths=round(D-lag(D, default=D[1])),date=npi_date[time+1]) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")) %>% filter(date %in% data$date)
# error
data_simul=left_join(ode_sol[,c("time","date","new_deaths_weekly")],fitting_data,by="date")
data_simul=subset(data_simul, date>params_list$fitting_start_date)
if (grepl("sse",err_type)){ simul_error=sum((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2)}
if (grepl("rmse",err_type)){ simul_error=sqrt(mean((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2))}
if (grepl("poiss",err_type)){ simul_error=-sum(dpois(x=round(data_simul$new_burials_weekly),
lambda=round(data_simul$new_deaths_weekly),log=TRUE)) }
if (grepl("negbin",err_type)){simul_error=-sum(dnbinom(x=round(data_simul$new_burials_weekly),
mu=round(data_simul$new_deaths_weekly),log=TRUE,size=params_list$negbinom_size)) }
simul_error # ode_sol
}
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
View(subset(error_pred_data_comp, IFR==2.5/100 & seed_size=16 & npi_compliance==16 & beta==0.325 & introd_date=="2019-11-12"))
View(subset(error_pred_data_comp, IFR==2.5/100 & seed_size==16 & npi_compliance==16 & beta==0.325 & introd_date=="2019-11-12"))
View(subset(error_pred_data_comp, IFR==4/100 & seed_size==17 & npi_compliance==0.1 & seeding_duration==21 & beta==0.3 & introd_date=="2019-11-12"))
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="poisson",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="sse",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
532.1447^2
81423.1111/(532.1447^2)
df_ode_solution_scan[df_ode_solution_scan$parset_ID==1468,]
View(df_ode_solution_scan[df_ode_solution_scan$parset_ID==1468,])
seir_error=function(opt_params,params_list,data,err_type,npi_date){
ode_sol <- euler(y=params_list$initvals,times=params_list$timesteps,func=simple_sir_somalia_interpol,parms=opt_params) %>%
as.data.frame() %>% filter(time %% 1 ==0) %>% mutate(new_deaths=round(D-lag(D, default=D[1])),date=npi_date[time+1]) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")) %>% filter(date %in% data$date)
# error
data_simul=left_join(ode_sol[,c("time","date","new_deaths_weekly")],fitting_data,by="date")
data_simul=subset(data_simul, date>params_list$fitting_start_date)
if (grepl("sse",err_type)){ simul_error=sum((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2)}
if (grepl("rmse",err_type)){ simul_error=sqrt(mean((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2))}
if (grepl("poiss",err_type)){ simul_error=-sum(dpois(x=round(data_simul$new_burials_weekly),
lambda=round(data_simul$new_deaths_weekly),log=TRUE)) }
if (grepl("negbin",err_type)){simul_error=-sum(dnbinom(x=round(data_simul$new_burials_weekly),
mu=round(data_simul$new_deaths_weekly),log=TRUE,size=params_list$negbinom_size)) }
ode_sol # simul_error
}
View(seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date))
params_list=list("initvals"=c("S"=mogadishu_popul,"E"=0,"I_R"=0,"I_D"=0,"D"=0),"popul"=mogadishu_popul,
"timesteps"=seq(0,nrow(OxCGRT_input),0.25),"fitting_start_date"="2020-01-19","negbinom_size"=10)
# parameters to optimize
opt_params=c("beta"=0.3/mogadishu_popul,"IFR_estim"=4/100,"seed_size"=17,"npi_compl"=0.1)
# time-varying inputs
# day0_num=as.numeric(as.Date("2019-11-01")-OxCGRT_input$date[1])
day0_num=as.Date("2019-11-12"); seeding_duration=21
timevar_signal<-data.frame(t=(1:nrow(OxCGRT_input))-1,date=OxCGRT_input$date,npi_index=(1-OxCGRT_input$OxCGRT_scaled)*OxCGRT_input$NPI_on,seeding=0)
timevar_signal$seeding[timevar_signal$date %in% day0_num:(day0_num+seeding_duration)]=1
input_npi <- approxfun(timevar_signal[,c("t","npi_index")]); input_seeding<-approxfun(timevar_signal[,c("t","seeding")])
#
View(seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date))
2.143094e+03-1.813957e+03
error_pred_data_comp=left_join(subset(df_ode_solution_scan,!is.na(sum_weekly) & date>as.Date("2020-01-19")), # when model predicts 0 no fitting
newburials_weekly[,!grepl("epi_year|week",colnames(newburials_weekly))],by="date",suffix=c("_model","_satel_data")) %>%
group_by(introd_date,seed_size,seeding_duration,IFR,npi_compliance,beta,parset_ID) %>% # ,weekly_deaths_sel,by="date",suffix=c("","_report_data"))
summarise(rmse=sqrt(mean((round((new_graves_best_ipol-basal_burial_rate)*(mogad_weekly_death_rate/basal_burial_rate))-round(sum_weekly))^2,na.rm=T)),
loglh_poiss=-sum(dpois(x=round((new_graves_best_ipol-basal_burial_rate)*(mogad_weekly_death_rate/basal_burial_rate)),lambda=round(sum_weekly),log=TRUE) ),
loglh_negbinom=-sum(dnbinom(x=round((new_graves_best_ipol-basal_burial_rate)*(mogad_weekly_death_rate/basal_burial_rate)),mu=round(sum_weekly),log=TRUE,size=10) )) %>%
pivot_longer(cols=!c(introd_date,seed_size,IFR,npi_compliance,beta,seeding_duration,parset_ID))
View(subset(error_pred_data_comp, IFR==4/100 & seed_size==17 & npi_compliance==0.1 & seeding_duration==21 & beta==0.3 & introd_date=="2019-11-12"))
err_types=data.frame(sq_err=error_pred_data_comp$value[grepl("mse",error_pred_data_comp$name)],
poisson=error_pred_data_comp$value[grepl("poiss",error_pred_data_comp$name)],
negbinom=error_pred_data_comp$value[grepl("negbinom",error_pred_data_comp$name)])
ggplot(err_types) + geom_point(aes(x=sq_err,y=poisson)) + geom_point(aes(x=sq_err,y=negbinom),color="red") + theme_bw() + standard_theme +
scale_x_log10(limits=c(2e4,1e5)) + scale_y_log10(limits=c(2e2,5e3)) + ylab("neg. log-likelihood") + # limits=c(0.07,2),breaks=round(10^((-30:10)/20),3)
xlab("mean squared error") + labs(title="MSE vs negative log-likelihood",subtitle="red=neg. binom., black=poisson")
ggplot(err_types) + geom_point(aes(x=sq_err,y=poisson)) + geom_point(aes(x=sq_err,y=negbinom),color="red") + theme_bw() + standard_theme +
scale_x_log10() + scale_y_log10() + ylab("neg. log-likelihood") + # limits=c(2e4,1e5) | limits=c(2e2,5e3)
xlab("mean squared error") + labs(title="MSE vs negative log-likelihood",subtitle="red=neg. binom., black=poisson")
fitting_data=data.frame(date=newburials_weekly$date, t=as.numeric(newburials_weekly$date)-as.numeric(newburials_weekly$date)[1],
new_burials_weekly=(newburials_weekly$new_graves_best_ipol-basal_burial_rate)*mogad_weekly_death_rate/basal_burial_rate)
# fcn to calc error
seir_error=function(opt_params,params_list,data,err_type,npi_date){
ode_sol <- euler(y=params_list$initvals,times=params_list$timesteps,func=simple_sir_somalia_interpol,parms=opt_params) %>%
as.data.frame() %>% filter(time %% 1 ==0) %>% mutate(new_deaths=round(D-lag(D, default=D[1])),date=npi_date[time+1]) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")) %>% filter(date %in% data$date)
# error
data_simul=left_join(ode_sol[,c("time","date","new_deaths_weekly")],fitting_data,by="date")
data_simul=subset(data_simul, date>params_list$fitting_start_date)
if (grepl("sse",err_type)){ simul_error=sum((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2)}
if (grepl("rmse",err_type)){ simul_error=sqrt(mean((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2))}
if (grepl("poiss",err_type)){ simul_error=-sum(dpois(x=round(data_simul$new_burials_weekly),
lambda=round(data_simul$new_deaths_weekly),log=TRUE)) }
if (grepl("negbin",err_type)){simul_error=-sum(dnbinom(x=round(data_simul$new_burials_weekly),
mu=round(data_simul$new_deaths_weekly),log=TRUE,size=params_list$negbinom_size)) }
ode_sol # simul_error
}
params_list=list("initvals"=c("S"=mogadishu_popul,"E"=0,"I_R"=0,"I_D"=0,"D"=0),"popul"=mogadishu_popul,
"timesteps"=seq(0,nrow(OxCGRT_input),0.25),"fitting_start_date"="2020-01-19","negbinom_size"=10)
# parameters to optimize
opt_params=c("beta"=0.3/mogadishu_popul,"IFR_estim"=4/100,"seed_size"=17,"npi_compl"=0.1)
# time-varying inputs
# day0_num=as.numeric(as.Date("2019-11-01")-OxCGRT_input$date[1])
day0_num=as.Date("2019-11-12"); seeding_duration=21
timevar_signal<-data.frame(t=(1:nrow(OxCGRT_input))-1,date=OxCGRT_input$date,npi_index=(1-OxCGRT_input$OxCGRT_scaled)*OxCGRT_input$NPI_on,seeding=0)
timevar_signal$seeding[timevar_signal$date %in% day0_num:(day0_num+seeding_duration)]=1
input_npi <- approxfun(timevar_signal[,c("t","npi_index")]); input_seeding<-approxfun(timevar_signal[,c("t","seeding")])
View(seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date))
1/d_c
1/d_e
simple_sir_somalia_interpol <- function(t,x,parms) {
S<-x[1]; E<-x[2]; I_R<-x[3]; I_D=x[4]; D=x[5] # ; npi_val=x[6]
gamma=0.2866; sigma=0.2503; d_death=1/21; inv_timestep=1/0.25
with(as.list(c(x,parms)), {
beta_variable=beta*(1-input_npi(t)*npi_compl)
dS=-beta_variable*S*(I_R+I_D); dE=beta_variable*S*(I_R+I_D)-sigma*E + input_seeding(t)*seed_size*inv_timestep
dI_R=(1-IFR_estim)*sigma*E - gamma*I_R; dI_D=IFR_estim*sigma*E-d_death*I_D; dD=d_death*I_D # infect who'll recover or die
# print(c(t,1-input_npi(t)*npi_compl))
return(list(c(dS,dE,dI_R,dI_D,dD))) }) } # dR=gamma*I_R
View(seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date))
seir_error=function(opt_params,params_list,data,err_type,npi_date){
ode_sol <- euler(y=params_list$initvals,times=params_list$timesteps,func=simple_sir_somalia_interpol,parms=opt_params) %>%
as.data.frame() %>% filter(time %% 1 ==0) %>% mutate(new_deaths=round(D-lag(D, default=D[1])),date=npi_date[time+1]) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")) %>% filter(date %in% data$date)
# error
data_simul=left_join(ode_sol[,c("time","date","new_deaths_weekly")],fitting_data,by="date")
data_simul=subset(data_simul, date>params_list$fitting_start_date)
if (grepl("sse",err_type)){ simul_error=sum((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2)}
if (grepl("rmse",err_type)){ simul_error=sqrt(mean((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2))}
if (grepl("poiss",err_type)){ simul_error=-sum(dpois(x=round(data_simul$new_burials_weekly),
lambda=round(data_simul$new_deaths_weekly),log=TRUE)) }
if (grepl("negbin",err_type)){simul_error=-sum(dnbinom(x=round(data_simul$new_burials_weekly),
mu=round(data_simul$new_deaths_weekly),log=TRUE,size=params_list$negbinom_size)) }
simul_error
}
seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="poisson",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
optim_output=optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,params_list=params_list,control=c(trace=2))
seir_error
npi_date
optim_output=optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="rmse",npi_date="2019-11-12",control=c(trace=2))
classa(fitting_data$date)
class(fitting_data$date)
class(OxCGRT_input$date)
colnames(ode_sol)
fitting_data=data.frame(date=newburials_weekly$date, t=as.numeric(newburials_weekly$date)-as.numeric(newburials_weekly$date)[1],
new_burials_weekly=(newburials_weekly$new_graves_best_ipol-basal_burial_rate)*mogad_weekly_death_rate/basal_burial_rate)
# fcn to calc error
seir_error=function(opt_params,params_list,data,err_type,npi_date){
ode_sol <- euler(y=params_list$initvals,times=params_list$timesteps,func=simple_sir_somalia_interpol,parms=opt_params) %>%
as.data.frame() %>% filter(time %% 1 ==0) %>% mutate(new_deaths=round(D-lag(D, default=D[1])),date=npi_date[time+1]) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")) %>% filter(date %in% data$date)
# error
data_simul=left_join(ode_sol,fitting_data,by="date")
data_simul=subset(data_simul, date>params_list$fitting_start_date)
if (grepl("sse",err_type)){ simul_error=sum((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2)}
if (grepl("rmse",err_type)){ simul_error=sqrt(mean((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2))}
if (grepl("poiss",err_type)){ simul_error=-sum(dpois(x=round(data_simul$new_burials_weekly),
lambda=round(data_simul$new_deaths_weekly),log=TRUE)) }
if (grepl("negbin",err_type)){simul_error=-sum(dnbinom(x=round(data_simul$new_burials_weekly),
mu=round(data_simul$new_deaths_weekly),log=TRUE,size=params_list$negbinom_size)) }
simul_error
}
optim_output=optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="rmse",npi_date="2019-11-12",control=c(trace=2))
rlang::last_error()
optim_output=optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="rmse",npi_date=OxCGRT_input$date,control=c(trace=2))
opt_params
optim_output$par
optim_output$par
seir_error(optim_output$par,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
optim_proc=fcn_extract_optimresults(capture.output(optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,control=c(trace=2))),parnames=names(opt_params))
optim_proc=fcn_extract_optimresults(capture.output(optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="rmse",npi_date=OxCGRT_input$date,control=c(trace=2))),parnames=names(opt_params))
head(optim_proc,3)
ggplot(optim_proc,aes(x=count,y=sse)) + geom_line()
optim_output=optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="negbin",npi_date=OxCGRT_input$date,control=c(trace=2))
seir_error(optim_output$par,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)-
seir_error(optim_output$par,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
opt_params
optim_output=optim(par=c("beta"=1e-7,"IFR_estim"=4/100,"seed_size"=10,"npi_compl"=0.2),fn=seir_error,method='Nelder-Mead',data=fitting_data, params_list=params_list,err_type="negbin",npi_date=OxCGRT_input$date,control=c(trace=2))
1e-7
optim_output=optim(par=c("beta"=1e-7,"IFR_estim"=4/100,"seed_size"=10,"npi_compl"=0.2),fn=seir_error,method='Nelder-Mead',data=fitting_data, params_list=params_list,err_type="rmse",npi_date=OxCGRT_input$date,control=c(trace=2))
ggplot(optim_proc,aes(x=count,y=sse)) + geom_line()
optim_output=optim(par=c("beta"=1e-7,"IFR_estim"=4/100,"seed_size"=10,"npi_compl"=0.2),fn=seir_error,method='Nelder-Mead',data=fitting_data, params_list=params_list,err_type="poiss",npi_date=OxCGRT_input$date,control=c(trace=2))
(seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)-
seir_error(optim_output$par,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date))
optim_output$par
seir_error(optim_output$par,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
optim_output=optim(par=c("beta"=1e-7,"IFR_estim"=4/100,"seed_size"=10,"npi_compl"=0.2),fn=seir_error,method='Nelder-Mead',data=fitting_data, params_list=params_list,err_type="poiss",npi_date=OxCGRT_input$date,control=c(trace=2))
optim_output=optim(par=c("beta"=1e-7,"IFR_estim"=4/100,"seed_size"=10,"npi_compl"=0.2),fn=seir_error,method='Nelder-Mead',data=fitting_data, params_list=params_list,err_type="rmse",npi_date=OxCGRT_input$date,control=c(trace=2))
optim_output$value
optim_output$par
seir_error(optim_output$par,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
seir_error(optim_output$par,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
optim(par=opt_params,fn=seir_error,method='CG',data=fitting_data,
params_list=params_list,err_type="negbin",npi_date=OxCGRT_input$date,control=c(trace=2))
optim(par=opt_params,fn=seir_error,method='CG',data=fitting_data,
params_list=params_list,err_type="rmse",npi_date=OxCGRT_input$date,control=c(trace=2))
optim(par=opt_params,fn=seir_error,method='BFGS',data=fitting_data,
params_list=params_list,err_type="rmse",npi_date=OxCGRT_input$date,control=c(trace=2))
optim(par=opt_params,fn=seir_error,method='L-BFGS-B',data=fitting_data,
params_list=params_list,err_type="rmse",npi_date=OxCGRT_input$date,control=c(trace=2))
optim(par=opt_params,fn=seir_error,method='L-BFGS-B',data=fitting_data,
params_list=params_list,err_type="poiss",npi_date=OxCGRT_input$date,control=c(trace=2))
optim(par=opt_params,fn=seir_error,method='Brent',data=fitting_data,
params_list=params_list,err_type="poiss",npi_date=OxCGRT_input$date,control=c(trace=2))
optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="poiss",npi_date=OxCGRT_input$date,control=c(trace=2))
opt_params
opt_params=c("beta"=0.3,"IFR_estim"=4/100,"seed_size"=17,"npi_compl"=0.1)
simple_sir_somalia_interpol <- function(t,x,parms) {
S<-x[1]; E<-x[2]; I_R<-x[3]; I_D=x[4]; D=x[5] # ; npi_val=x[6]
gamma=0.2866; sigma=0.2503; d_death=1/21; inv_timestep=1/0.25
with(as.list(c(x,parms)), {
beta_variable=(beta/2.2e6)*(1-input_npi(t)*npi_compl)
dS=-beta_variable*S*(I_R+I_D); dE=beta_variable*S*(I_R+I_D)-sigma*E + input_seeding(t)*seed_size*inv_timestep
dI_R=(1-IFR_estim)*sigma*E - gamma*I_R; dI_D=IFR_estim*sigma*E-d_death*I_D; dD=d_death*I_D # infect who'll recover or die
# print(c(t,1-input_npi(t)*npi_compl))
return(list(c(dS,dE,dI_R,dI_D,dD))) }) } # dR=gamma*I_R
opt_params
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
optim_output=optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="negbin",npi_date=OxCGRT_input$date,control=c(trace=2))
optim_output
install.packages("optimx")
library(optimx)
optim_output=optimx(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="negbin",npi_date=OxCGRT_input$date,control=c(trace=2))
optim_output=optimx(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="negbin",npi_date=OxCGRT_input$date,control=c(trace=2))
optim_output=optim(par=opt_params,fn=seir_error,method='SANN',data=fitting_data,
params_list=params_list,err_type="negbin",npi_date=OxCGRT_input$date,control=c(trace=2))
optim_output=optim(par=opt_params,fn=seir_error,method='Nelder-Mead',data=fitting_data,
params_list=params_list,err_type="rmse",npi_date=OxCGRT_input$date,control=c(trace=2))
optim_output
seir_error(optim_output$par,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)
singlesimul <- fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,(N_tot/sum(N_tot))*mogadishu_popul,xlimvals=c(1,350),"plot"); singlesimul[[2]]
optim_output$par
optim_output$par["beta"]
optim_output$par["seed_size"]
optim_output$par["npi_compl"]
optim_output$par
day0_num
seeding_duration
singlesimul <- fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=day0_num,
num_params=c("beta"=optim_output$par["beta"]/mogadishu_popul,"gamma"=0.29,"sigma"=0.25,"d_death"=1/21,"IFR"=optim_output$par["IFR_estim"]),
clin_fract=clinical_fraction,seed_size_val=optim_output$par["seed_size"],seeding_duration=seeding_duration,
OxCGRT_input,compliance=optim_output$par["npi_compl"],(N_tot/sum(N_tot))*mogadishu_popul,xlimvals=c(1,350),"plot"); singlesimul[[2]]
View(singlesimul[[2]])
View(singlesimul[[1]])
day0_num
class
class(day0_num)
optim_output$par["beta"]
seeding_duration
sir_varnames
optim_output$par["IFR_estim"]
singlesimul <- fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=day0_num,
num_params=c("beta"=optim_output$par["beta"]/mogadishu_popul,"gamma"=0.29,"sigma"=0.25,"d_death"=1/21,"IFR"=optim_output$par["IFR_estim"]),
clin_fract=clinical_fraction,seed_size_val=optim_output$par["seed_size"],seeding_duration=21,
OxCGRT_input,compliance=optim_output$par["npi_compl"],(N_tot/sum(N_tot))*mogadishu_popul,xlimvals=c(1,350),"plot"); singlesimul[[2]]
View(singlesimul[[1]])
optim_output$par["beta"]/mogadishu_popul
c(optim_output$par["beta"]/mogadishu_popul)
class(optim_output$par["beta"]/mogadishu_popul)
array(optim_output$par["beta"]/mogadishu_popul)
optim_output$par["npi_compl"]
singlesimul <- fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=day0_num,
num_params=c("beta"=array(optim_output$par["beta"]/mogadishu_popul),"gamma"=0.29,"sigma"=0.25,"d_death"=1/21,
"IFR"=array(optim_output$par["IFR_estim"])),
clin_fract=clinical_fraction,seed_size_val=array(optim_output$par["seed_size"]),seeding_duration=21,
OxCGRT_input,compliance=optim_output$par["npi_compl"],(N_tot/sum(N_tot))*mogadishu_popul,xlimvals=c(1,350),"plot"); singlesimul[[2]]
singlesimul <- fcn_somal_sir_singlesimul(sir_varnames,var_categ_list,timesteps,day0=day0_num,
num_params=c("beta"=array(optim_output$par["beta"]),"gamma"=0.29,"sigma"=0.25,"d_death"=1/21,
"IFR"=array(optim_output$par["IFR_estim"])),
clin_fract=clinical_fraction,seed_size_val=array(optim_output$par["seed_size"]),seeding_duration=21,
OxCGRT_input,compliance=optim_output$par["npi_compl"],(N_tot/sum(N_tot))*mogadishu_popul,xlimvals=c(1,350),"plot"); singlesimul[[2]]
View(singlesimul[[1]])
View(subset(singlesimul[[1]], name %in% "new_deaths"))
left_join(subset(singlesimul[[1]], name %in% "new_deaths"),fitting_data,by="date")
subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths")
left_join(subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths"),fitting_data,by="date")
colnames(singlesimul[[1]])
optim_sim_data=left_join(subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths"),fitting_data,by="date")
View(left_join(subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths"),fitting_data,by="date"))
View(subset(singlesimul[[1]], name %in% "new_deaths"))
View(subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths"))
View(optim_sim_data)
optim_sim_data=left_join(subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths") %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")),
fitting_data,by="date")
subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths")
optim_sim_data=left_join(subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths") %>% rename(new_deaths=value) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")),
fitting_data,by="date")
colnames(optim_sim_data)
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_deaths_weekly)) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") +
theme_bw() + standard_theme
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_deaths_weekly)) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") +
theme_bw() + standard_theme
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") + # geom_line(aes(x=date,y=new_deaths_weekly)) +
theme_bw() + standard_theme
optim_sim_data=left_join(subset(singlesimul[[1]][,c("date","value","name")], name %in% "new_deaths") %>% rename(new_deaths=value) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")), fitting_data,by="date") %>% filter(!is.na(t))
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") + geom_line(aes(x=date,y=new_deaths_weekly)) +
theme_bw() + standard_theme
optim_output
optim_output$par
paste0(optim_output$par)
paste0(names(optim_output$par),optim_output$par)
paste0(names(optim_output$par),"=",optim_output$par)
paste0(names(optim_output$par),"=",round(optim_output$par,2))
paste0(paste0(names(optim_output$par),"=",round(optim_output$par,2)),collapse = ", ")
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") + geom_line(aes(x=date,y=new_deaths_weekly)) +
theme_bw() + standard_theme + labs(title="fit after optimisation",
subtitle=paste0(paste0(names(optim_output$par),"=",round(optim_output$par,2)),collapse = ", "))
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") + geom_line(aes(x=date,y=new_deaths_weekly)) +
theme_bw() + standard_theme + scale_x_date(date_breaks = "2 weeks") +
labs(title="fit after optimisation",subtitle=paste0(paste0(names(optim_output$par),"=",round(optim_output$par,2)),collapse = ", "))
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") + geom_line(aes(x=date,y=new_deaths_weekly)) +
geom_point(aes(x=date,y=new_deaths_weekly)) + theme_bw() + standard_theme + scale_x_date(date_breaks = "2 weeks") +
labs(title="fit after optimisation",subtitle=paste0(paste0(names(optim_output$par),"=",round(optim_output$par,2)),collapse = ", "))
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") + geom_line(aes(x=date,y=new_deaths_weekly)) +
geom_point(aes(x=date,y=new_burials_weekly),color="blue") + theme_bw() + standard_theme + scale_x_date(date_breaks = "2 weeks") +
labs(title="fit after optimisation",subtitle=paste0(paste0(names(optim_output$par),"=",round(optim_output$par,2)),collapse = ", "))
ggsave(paste0("simul_output/somalia_output/errors/best_fit_neldermeadopt.png"),width=32,height=18,units="cm") # _facetgrid
seeding_duration
(seir_error(opt_params,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date)-
seir_error(optim_output$par,params_list,fitting_data,err_type="rmse",npi_date=OxCGRT_input$date))
seir_deaths_npi_interpol <- function(t,x,parms) {
S<-x[1]; E<-x[2]; I_R<-x[3]; I_D=x[4]; D=x[5] # ; npi_val=x[6]
gamma=0.2866; sigma=0.2503; d_death=1/21; inv_timestep=1/0.25
with(as.list(c(x,parms)), {
beta_variable=(beta/2.2e6)*(1-input_npi(t)*npi_compl)
dS=-beta_variable*S*(I_R+I_D); dE=beta_variable*S*(I_R+I_D)-sigma*E + input_seeding(t)*seed_size*inv_timestep
dI_R=(1-IFR_estim)*sigma*E - gamma*I_R; dI_D=IFR_estim*sigma*E-d_death*I_D; dD=d_death*I_D # infect who'll recover or die
# print(c(t,1-input_npi(t)*npi_compl))
return(list(c(dS,dE,dI_R,dI_D,dD))) }) } # dR=gamma*I_R
rm(simple_sir_somalia_interpol)
popul
seir_deaths_npi_interpol <- function(t,x,parms) {
S<-x[1]; E<-x[2]; I_R<-x[3]; I_D=x[4]; D=x[5] # ; npi_val=x[6]
gamma=0.2866; sigma=0.2503; d_death=1/21; inv_timestep=1/0.25; popul=2.2e6
with(as.list(c(x,parms)), {
beta_variable=(beta/popul)*(1-input_npi(t)*npi_compl)
dS=-beta_variable*S*(I_R+I_D); dE=beta_variable*S*(I_R+I_D)-sigma*E + input_seeding(t)*seed_size*inv_timestep
dI_R=(1-IFR_estim)*sigma*E - gamma*I_R; dI_D=IFR_estim*sigma*E-d_death*I_D; dD=d_death*I_D # infect who'll recover or die
# print(c(t,1-input_npi(t)*npi_compl))
return(list(c(dS,dE,dI_R,dI_D,dD))) }) } # dR=gamma*I_R
seir_error
params_list=list("initvals"=c("S"=mogadishu_popul,"E"=0,"I_R"=0,"I_D"=0,"D"=0),"popul"=mogadishu_popul,
"timesteps"=seq(0,nrow(OxCGRT_input),0.25),"fitting_start_date"="2020-01-19","negbinom_size"=10,
"introd_date"=as.Date("2019-11-12"),"seeding_duration"=21)
params_list$introd_date
day0_num
params_list$seeding_duration
seir_error=function(opt_params,params_list,data,err_type,npi_date){
ode_sol <- euler(y=params_list$initvals,times=params_list$timesteps,func=seir_deaths_npi_interpol,parms=opt_params) %>%
as.data.frame() %>% filter(time %% 1 ==0) %>% mutate(new_deaths=round(D-lag(D, default=D[1])),date=npi_date[time+1]) %>%
mutate(new_deaths_weekly=roll_sum(new_deaths,7,fill=NA,align="right")) %>% filter(date %in% data$date)
# error
data_simul=subset(left_join(ode_sol,fitting_data,by="date"), date>params_list$fitting_start_date)
if (grepl("sse",err_type)){ simul_error=sum((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2)}
if (grepl("rmse",err_type)){ simul_error=sqrt(mean((data_simul$new_deaths_weekly - data_simul$new_burials_weekly)^2))}
if (grepl("poiss",err_type)){ simul_error=-sum(dpois(x=round(data_simul$new_burials_weekly),
lambda=round(data_simul$new_deaths_weekly),log=TRUE)) }
if (grepl("negbin",err_type)){simul_error=-sum(dnbinom(x=round(data_simul$new_burials_weekly),
mu=round(data_simul$new_deaths_weekly),log=TRUE,size=params_list$negbinom_size)) }
simul_error
}
seir_deaths_npi_interpol
params_list=list("initvals"=c("S"=mogadishu_popul,"E"=0,"I_R"=0,"I_D"=0,"D"=0),"popul"=mogadishu_popul,
"timesteps"=seq(0,nrow(OxCGRT_input),0.25),"fitting_start_date"="2020-01-19","negbinom_size"=10,
"introd_date"=as.Date("2019-11-12"),"seeding_duration"=21)
# parameters to optimize
opt_params=c("beta"=0.3,"IFR_estim"=4/100,"seed_size"=17,"npi_compl"=0.1)
timevar_signal<-data.frame(t=(1:nrow(OxCGRT_input))-1,date=OxCGRT_input$date,npi_index=(1-OxCGRT_input$OxCGRT_scaled)*OxCGRT_input$NPI_on,seeding=0)
timevar_signal$seeding[timevar_signal$date %in% params_list$introd_date:(params_list$introd_date + params_list$seeding_duration)]=1
input_npi <- approxfun(timevar_signal[,c("t","npi_index")]); input_seeding<-approxfun(timevar_signal[,c("t","seeding")])
seir_error(opt_params,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)
sapply(opt_params,function(x) {seir_error(x,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)})
lapply(opt_params,function(x) {seir_error(x,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)})
lapply(list(opt_params),function(x) {seir_error(x,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)})
sapply(list(opt_params),function(x) {seir_error(x,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)})
sapply(list(opt_params,optim_output$par),function(x) {seir_error(x,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)})
params_list["introd_date"]
params_list[c("introd_date","seeding_size")]
params_list[c("introd_date","seed_size")]
params_list[c("introd_date","seeding_duration")]
unlist(params_list[c("introd_date","seeding_duration")])
ppaste(c("introd_date","seeding_duration",unlist(params_list[c("introd_date","seeding_duration")]))
paste0(c("introd_date","seeding_duration",unlist(params_list[c("introd_date","seeding_duration")]))
paste0(c("introd_date","seeding_duration",unlist(params_list[c("introd_date","seeding_duration")])))
paste0(c("introd_date","seeding_duration"),unlist(params_list[c("introd_date","seeding_duration")]))
paste0(c("introd_date","seeding_duration"),"=",unlist(params_list[c("introd_date","seeding_duration")]))
paste0(paste0(c("introd_date","seeding_duration"),"=",unlist(params_list[c("introd_date","seeding_duration")])),collapse=", ")
paste0("Fit after optimisation, ",
paste0(paste0(c("introd_date","seeding_duration"),"=",unlist(params_list[c("introd_date","seeding_duration")])),collapse=", "))
paste0("Fit after optimisation (",
paste0(paste0(c("introd_date","seeding_duration"),"=",unlist(params_list[c("introd_date","seeding_duration")])),collapse=", "),")")
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") + geom_line(aes(x=date,y=new_deaths_weekly)) +
geom_point(aes(x=date,y=new_burials_weekly),color="blue") + theme_bw() + standard_theme + scale_x_date(date_breaks = "2 weeks") +
labs(title=paste0("Fit after optimisation (",paste0(paste0(c("introd_date","seeding_duration"),"=",unlist(params_list[c("introd_date","seeding_duration")])),collapse=", "),")"),
subtitle=paste0(paste0(names(optim_output$par),"=",round(optim_output$par,2)),collapse = ", "))
ggsave(paste0("simul_output/somalia_output/errors/best_fit_neldermeadopt.png"),width=32,height=18,units="cm") # _facetgrid
sapply(list(opt_params,optim_output$par),function(x){seir_error(x,params_list,fitting_data,err_type="negbin",npi_date=OxCGRT_input$date)})
ggsave(paste0("simul_output/somalia_output/errors/best_fit_neldermeadopt.png"),width=32,height=18,units="cm") # _facetgrid
paste0(c("introd_date","seeding_duration"),"=",
unlist(params_list[c("introd_date","seeding_duration")]))
unlist(params_list[c("introd_date","seeding_duration")])
params_list$introd_date
params_list[c("introd_date","seeding_duration")]
c(params_list[c("introd_date","seeding_duration")])
array(params_list[c("introd_date","seeding_duration")])
unlist(params_list[c("introd_date","seeding_duration")])
c(params_list["introd_date"],params_list["seeding_duration")])
c(params_list["introd_date"],params_list["seeding_duration"])
c(params_list$introd_date,params_list$seeding_duration)
c(as.character(params_list$introd_date),params_list$seeding_duration)
paste0("Fit after optimisation (",paste0(paste0(c("introd_date","seeding_duration"),"=",
c(as.character(params_list$introd_date),params_list$seeding_duration)),collapse=", "),")")
ggplot(optim_sim_data) + geom_line(aes(x=date,y=new_burials_weekly),color="blue") + geom_line(aes(x=date,y=new_deaths_weekly)) +
geom_point(aes(x=date,y=new_burials_weekly),color="blue") + theme_bw() + standard_theme + scale_x_date(date_breaks = "2 weeks") +
labs(title=paste0("Fit after optimisation (",paste0(paste0(c("introd_date","seeding_duration"),"=",
c(as.character(params_list$introd_date),params_list$seeding_duration)),collapse=", "),")"),
subtitle=paste0(paste0(names(optim_output$par),"=",round(optim_output$par,2)),collapse = ", "))
# BEST FIT
ggsave(paste0("simul_output/somalia_output/errors/best_fit_neldermeadopt.png"),width=32,height=18,units="cm") # _facetgrid

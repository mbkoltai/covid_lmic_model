min_val_susc=1e-2; maxval_susc=0.1; midpoint_susc=(min_val_susc+maxval_susc)/2;delta_susc=maxval_susc-midpoint_susc; mean_susc_exp=0.05
mean_clinfract=0.307; midpoint_clinfract=0.4; delta_clinfr=0.305; min_val_clinfr=0.05
### SINGLE SIMULATION ---------------------------
# set params
depval=1; u_val=fun_lin_approx_agedep_par(min_val_susc,max_val=maxval_susc,rep_min=3,rep_max=5) # /sum(N_tot)
y_val=fun_lin_approx_agedep_par(min_val_clinfr,max_val=midpoint_clinfract+depval*delta_clinfr,rep_min=5,rep_max=3); f_val=rep(0.5,n_age)
u_val
mean(u_val)
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*1*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)*1/d_s) } }
max(Re(eigen(NGM)$values))
u_val
identical(C_m,cm)
y_val
po$y
mean(y_val)
dIa
1/d_s
length(po$y)
d_p
d_c
1/d_c
y_val
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*1*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)*1/d_s)
NGM_def[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*(2.4+3.2) + (1-y_val[j_col])*unique(f_val)*7) } }
NGM=matrix(0,nrow=length(N_tot),ncol=length(N_tot)); NGM_def=NGM
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*1*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)*1/d_s)
NGM_def[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*(2.4+3.2) + (1-y_val[j_col])*unique(f_val)*7) } }
max(Re(eigen(NGM)$values))
max(Re(eigen(NGM_def)$values))
po$y
rep(0.5,length(N_tot))
po$u
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*1*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)*1/d_s)
# NGM_def[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*(2.4+3.2) + (1-y_val[j_col])*unique(f_val)*7)
NGM_def[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(rep(0.5,length(N_tot))[j_col]*(2.4+3.2)+
(1-rep(0.5,length(N_tot))[j_col])*unique(f_val)*7) } }
max(Re(eigen(NGM_def)$values))
max(Re(eigen(NGM)$values))
u_val
po$u
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*1*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)*1/d_s)
# NGM_def[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*(2.4+3.2) + (1-y_val[j_col])*unique(f_val)*7)
y_def=rep(0.5,length(N_tot)); u_def=rep(0.08,length(N_tot))
NGM_def[i_row,j_col]=u_def[i_row]*C_m[i_row,j_col]*(y_def[j_col]*(2.4+3.2) + (1-y_def[j_col])*unique(f_val)*7) } }
max(Re(eigen(NGM_def)$values))
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*1*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)*1/d_s)
# NGM_def[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*(2.4+3.2) + (1-y_val[j_col])*unique(f_val)*7)
y_def=rep(0.5,length(N_tot)); u_def=rep(0.06,length(N_tot))
NGM_def[i_row,j_col]=u_def[i_row]*C_m[i_row,j_col]*(y_def[j_col]*(2.4+3.2) + (1-y_def[j_col])*unique(f_val)*7) } }
max(Re(eigen(NGM)$values))
max(Re(eigen(NGM_def)$values))
mean(u_val)
max(Re(eigen(NGM_def)$values))
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*1*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)*1/d_s)
# NGM_def[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*(2.4+3.2) + (1-y_val[j_col])*unique(f_val)*7)
y_def=rep(0.5,length(N_tot)); u_def=rep(0.08,length(N_tot))
NGM_def[i_row,j_col]=u_def[i_row]*C_m[i_row,j_col]*(y_def[j_col]*(2.4+3.2) + (1-y_def[j_col])*unique(f_val)*7) } }
max(Re(eigen(NGM_def)$values))
max(Re(eigen(NGM)$values))
max(Re(eigen(NGM_def)$values))
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*1*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)*1/d_s)
# NGM_def[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*(2.4+3.2) + (1-y_val[j_col])*unique(f_val)*7)
y_def=rep(0.5,length(N_tot)); u_def=rep(0.08,length(N_tot))
# NGM_def[i_row,j_col]=u_def[i_row]*C_m[i_row,j_col]*(y_def[j_col]*(2.4+3.2) + (1-y_def[j_col])*unique(f_val)*7)
} }
max(Re(eigen(NGM)$values))
fun_NGM_R0=function(N_tot,y_val,u_val,f_val,C_m){
NGM=matrix(0,nrow=length(N_tot),ncol=length(N_tot))
for (i_row in 1:length(y_val)){ for (j_col in 1:length(y_val)){
# agegr_frac=N_tot[i_row]/sum(N_tot) # 1
NGM[i_row,j_col]=u_val[i_row]*C_m[i_row,j_col]*(y_val[j_col]*(1/d_p+1/d_c) + (1-y_val[j_col])*unique(f_val)/d_s) } }
list(NGM,max(Re(eigen(NGM)$values)))
}
fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)
fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]
R0
midpoint_susc
delta_susc
midpoint_susc-delta_susc
midpoint_susc+delta_susc
midpoint_clinfract
delta_clinfr
midpoint_susc
min_val_susc=1e-2; maxval_susc=0.15; midpoint_susc=(min_val_susc+maxval_susc)/2; delta_susc=maxval_susc-midpoint_susc
midpoint_susc
delta_susc
R0_scan=data.frame(); k_count=0
k_count
k_count=1
R0_scan[k_count,]=c(k_susc,k_clinfrac,k_infect,R0)
R0_scan[k_count,]=c(1,1,1,R0)
R0_scan=data.frame(matrix(0,ncol=4,nrow=k_max^3)); k_count=0
k_max=10
R0_scan=data.frame(matrix(0,ncol=4,nrow=k_max^3)); k_count=0
R0_scan
R0_scan=data.frame(matrix(0,ncol=4,nrow=k_max^3)); k_count=0; colnames(R0_scan)=c("susc","clinfract","asympt_inf","R0")
for (k_susc in 1:k_max){
for (k_clinfrac in 1:k_max){
for (k_infect in 1:k_max){
u_val=fun_lin_approx_agedep_par(min_val=midpoint_susc-(k_susc/k_max)*delta_susc,
max_val=midpoint_susc+(k_susc/k_max)*delta_susc,rep_min=3,rep_max=5)
y_val=fun_lin_approx_agedep_par(midpoint_clinfract-(k_clinfrac/k_max)*delta_clinfr,
midpoint_clinfract+(k_clinfrac/k_max)*delta_clinfr, rep_min=5,rep_max=3);
f_val=k_infect/k_max; k_count=k_count+1
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]; R0_scan[k_count,]=c(k_susc,k_clinfrac,k_infect,R0)
}
}
}
R0_scan
R0_scan=data.frame(matrix(0,ncol=5,nrow=k_max^3)); k_count=0; colnames(R0_scan)=c("susc","clinfract","asympt_inf","R0","HIT")
for (k_susc in 1:k_max){
for (k_clinfrac in 1:k_max){
for (k_infect in 1:k_max){
u_val=fun_lin_approx_agedep_par(min_val=midpoint_susc-(k_susc/k_max)*delta_susc,
max_val=midpoint_susc+(k_susc/k_max)*delta_susc,rep_min=3,rep_max=5)
y_val=fun_lin_approx_agedep_par(midpoint_clinfract-(k_clinfrac/k_max)*delta_clinfr,
midpoint_clinfract+(k_clinfrac/k_max)*delta_clinfr, rep_min=5,rep_max=3);
f_val=k_infect/k_max; k_count=k_count+1
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]; R0_scan[k_count,]=c(k_susc,k_clinfrac,k_infect,R0,1-1/R0)
}
}
}
R0_scan
min(R0_scan$HIT)
g(midpoint_susc,delta_susc) %=% 1:2
midpoint_susc
delta_susc
# g(midpoint_susc,delta_susc) %=% 1:2
fun_multidim_scan=function(N_tot,k_max,agedep_param_lims){
R0_scan=data.frame(matrix(0,ncol=5,nrow=k_max^3)); k_count=0; colnames(R0_scan)=c("susc","clinfract","asympt_inf","R0","HIT")
# midpoint_susc=agedep_param_lims[1];delta_susc=agedep_param_lims[2]; rep_min_susc=agedep_param_lims[3];rep_max_susc=agedep_param_lims[4]
# midpoint_clinfract=agedep_param_lims[5];delta_clinfr=agedep_param_lims[6];rep_min_clinfr=agedep_param_lims[7];
# rep_max_clinfr=agedep_param_lims[8]
g(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr) %=% agedep_param_lims
for (k_susc in 1:k_max){
for (k_clinfrac in 1:k_max){
for (k_infect in 1:k_max){
u_val=fun_lin_approx_agedep_par(min_val=midpoint_susc-(k_susc/k_max)*delta_susc,
max_val=midpoint_susc+(k_susc/k_max)*delta_susc,rep_min=3,rep_max=5)
y_val=fun_lin_approx_agedep_par(midpoint_clinfract-(k_clinfrac/k_max)*delta_clinfr,
midpoint_clinfract+(k_clinfrac/k_max)*delta_clinfr, rep_min=5,rep_max=3);
f_val=k_infect/k_max; k_count=k_count+1;
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]; R0_scan[k_count,]=c(k_susc,k_clinfrac,k_infect,R0,1-1/R0)
}
}
}
R0_scan
}
agedep_param_lims=c(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr)
rep_min_susc=3; rep_max_susc=5; rep_min_clinfr=5; rep_max_clinfr=3
fun_multidim_scan=function(N_tot,k_max,agedep_param_lims){
R0_scan=data.frame(matrix(0,ncol=5,nrow=k_max^3)); k_count=0; colnames(R0_scan)=c("susc","clinfract","asympt_inf","R0","HIT")
# midpoint_susc=agedep_param_lims[1];delta_susc=agedep_param_lims[2]; rep_min_susc=agedep_param_lims[3];rep_max_susc=agedep_param_lims[4]
# midpoint_clinfract=agedep_param_lims[5];delta_clinfr=agedep_param_lims[6];rep_min_clinfr=agedep_param_lims[7];
# rep_max_clinfr=agedep_param_lims[8]
g(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr) %=% agedep_param_lims
for (k_susc in 1:k_max){
for (k_clinfrac in 1:k_max){
for (k_infect in 1:k_max){
u_val=fun_lin_approx_agedep_par(min_val=midpoint_susc-(k_susc/k_max)*delta_susc,
max_val=midpoint_susc+(k_susc/k_max)*delta_susc,rep_min_susc,rep_max_susc)
y_val=fun_lin_approx_agedep_par(midpoint_clinfract-(k_clinfrac/k_max)*delta_clinfr,
midpoint_clinfract+(k_clinfrac/k_max)*delta_clinfr,rep_min_clinfr,rep_max_clinfr);
f_val=k_infect/k_max; k_count=k_count+1;
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]; R0_scan[k_count,]=c(k_susc,k_clinfrac,k_infect,R0,1-1/R0)
}
}
}
R0_scan
}
R0_scan
z=rep_min_clinfr,rep_max_clinfr
z=R0_scan
min_val_susc=1e-2; maxval_susc=0.15; midpoint_susc=(min_val_susc+maxval_susc)/2; delta_susc=maxval_susc-midpoint_susc # mean_susc_exp=0.05
midpoint_clinfract=0.4; delta_clinfr=0.35 # mean_clinfract=0.307; min_val_clinfr=0.05
rep_min_susc=3; rep_max_susc=5; rep_min_clinfr=5; rep_max_clinfr=3
agedep_param_lims=c(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr)
agedep_param_lims
R0_scan=fun_multidim_scan(N_tot,k_max,agedep_param_lims)
identical(z,R0_scan)
head(z)
head(R0_scan)
matplot(z$R0,R0_scan$R0,type="p")
View(R0_scan)
colnames(R0_scan)
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + theme_bw() + standard_theme
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + scale_fill_brewer(palette="OrRd") +
theme_bw() + standard_theme
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + scale_fill_distiller(palette = "Spectral") +
# scale_fill_brewer(palette="OrRd") +
theme_bw() + standard_theme
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + scale_fill_distiller(palette = "Spectral") +
geom_text(aes(label = round(HIT,2))) + theme_bw() + standard_theme # scale_fill_brewer(palette="OrRd") +
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + scale_fill_distiller(palette = "Spectral") +
geom_text(aes(label = round(HIT,2)),size=2) + theme_bw() + standard_theme # scale_fill_brewer(palette="OrRd") +
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + scale_fill_distiller(palette = "Spectral") +
geom_text(aes(label = round(HIT,2)),size=2) + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction")
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + scale_fill_distiller(palette = "Spectral") +
geom_text(aes(label = round(HIT,2)),size=3) + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction")
countryval
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + scale_fill_distiller(palette = "Spectral") +
geom_text(aes(label = round(HIT,2)),size=3) + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_grid(~asympt_inf) + scale_fill_distiller(palette = "Spectral") +
geom_text(aes(label = round(HIT,2)),size=3) + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_grid(~asympt_inf,rows = 3) + scale_fill_distiller(palette = "Spectral") +
geom_text(aes(label = round(HIT,2)),size=3) + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf) + scale_fill_distiller(palette = "Spectral") +
geom_text(aes(label = round(HIT,2)),size=3) + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
paste("asympt inf=",R0_scan$asympt_inf)
paste0("asympt inf=",R0_scan$asympt_inf)
R0_scan=fun_multidim_scan(N_tot,k_max,agedep_param_lims); R0_scan[,"asympt_inf_str"]=paste0("asympt inf=",R0_scan$asympt_inf)
# HIT heatmap
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf_str) + scale_fill_distiller(palette="Spectral") +
geom_text(aes(label = round(HIT,2)),size=3) + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
unique(R0_scan$asympt_inf)
unique(paste0("asympt inf=",R0_scan$asympt_inf))
R0_scan[,"asympt_inf_str"]=factor(paste0("asympt inf=",R0_scan$asympt_inf),levels=unique(paste0("asympt inf=",R0_scan$asympt_inf)))
ggplot(R0_scan,aes(x=susc,y=clinfract,fill=HIT)) + geom_tile() + facet_wrap(~asympt_inf_str) + scale_fill_distiller(palette="Spectral") +
geom_text(aes(label = round(HIT,2)),size=3) + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=HIT)) + geom_line() + facet_wrap(~asympt_inf_str) + scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) + scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) + scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
fun_multidim_scan=function(N_tot,k_max,agedep_param_lims){
R0_scan=data.frame(matrix(0,ncol=5,nrow=k_max^3)); k_count=0; colnames(R0_scan)=c("susc","clinfract","asympt_inf","R0","HIT")
# midpoint_susc=agedep_param_lims[1];delta_susc=agedep_param_lims[2]; rep_min_susc=agedep_param_lims[3];rep_max_susc=agedep_param_lims[4]
# midpoint_clinfract=agedep_param_lims[5];delta_clinfr=agedep_param_lims[6];rep_min_clinfr=agedep_param_lims[7];
# rep_max_clinfr=agedep_param_lims[8]
g(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr) %=% agedep_param_lims
for (k_susc in 1:k_max){
for (k_clinfrac in 1:k_max){
for (k_infect in 1:k_max){
u_val=fun_lin_approx_agedep_par(min_val=midpoint_susc-(k_susc/k_max)*delta_susc,
max_val=midpoint_susc+(k_susc/k_max)*delta_susc,rep_min_susc,rep_max_susc)
y_val=fun_lin_approx_agedep_par(midpoint_clinfract-(k_clinfrac/k_max)*delta_clinfr,
midpoint_clinfract+(k_clinfrac/k_max)*delta_clinfr,rep_min_clinfr,rep_max_clinfr);
f_val=k_infect/k_max; k_count=k_count+1;
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]; R0_scan[k_count,]=c(k_susc,k_clinfrac,k_infect,R0,1-1/R0)
}
}
}
R0_scan[,"asympt_inf_str"]=factor(paste0("asympt inf=",R0_scan$asympt_inf),levels=unique(paste0("asympt inf=",R0_scan$asympt_inf)))
R0_scan
}
countryval="Italy"; N_tot=fun_cntr_agestr(countryval,i_year="2020",age_groups)
covid_params=cm_parameters_SEI3R(gsub("Sudan","Ethiopia",countryval)); C_m=Reduce('+',covid_params$pop[[1]]$matrices)
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]] # NGM=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]
# # covidm default: dIp=2.4; dIs=3.2; dIa=7 ; y_def=rep(0.5,length(N_tot)); u_def=rep(0.08,length(N_tot))
# NGM_def[i_row,j_col]=u_def[i_row]*C_m[i_row,j_col]*(y_def[j_col]*(2.4+3.2) + (1-y_def[j_col])*unique(f_val)*7)
# PARSCAN for R0
min_val_susc=1e-2; maxval_susc=0.15; midpoint_susc=(min_val_susc+maxval_susc)/2; delta_susc=maxval_susc-midpoint_susc # mean_susc_exp=0.05
midpoint_clinfract=0.4; delta_clinfr=0.35 # mean_clinfract=0.307; min_val_clinfr=0.05
rep_min_susc=3; rep_max_susc=5; rep_min_clinfr=5; rep_max_clinfr=3
### SINGLE SIMULATION ---------------------------
# set params
agedep_param_lims=c(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr)
sum(N_tot)
N_tot/sum(N_tot)
View(C_m)
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=factor(clinfract),group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=factor(clinfract),group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) + scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) + scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) + scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0("Sudan"," herd immunity threshold"))
countryval
countryval="Sudan"
k_max
fun_multidim_scan=function(N_tot,k_max,agedep_param_lims){
R0_scan=data.frame(matrix(0,ncol=5,nrow=k_max^3)); k_count=0; colnames(R0_scan)=c("susc","clinfract","asympt_inf","R0","HIT")
# midpoint_susc=agedep_param_lims[1];delta_susc=agedep_param_lims[2]; rep_min_susc=agedep_param_lims[3];rep_max_susc=agedep_param_lims[4]
# midpoint_clinfract=agedep_param_lims[5];delta_clinfr=agedep_param_lims[6];rep_min_clinfr=agedep_param_lims[7];
# rep_max_clinfr=agedep_param_lims[8]
g(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr) %=% agedep_param_lims
for (k_susc in 1:k_max){
for (k_clinfrac in 1:k_max){
for (k_infect in 1:k_max){
u_val=fun_lin_approx_agedep_par(min_val=midpoint_susc-(k_susc/k_max)*delta_susc,
max_val=midpoint_susc+(k_susc/k_max)*delta_susc,rep_min_susc,rep_max_susc)
y_val=fun_lin_approx_agedep_par(midpoint_clinfract-(k_clinfrac/k_max)*delta_clinfr,
midpoint_clinfract+(k_clinfrac/k_max)*delta_clinfr,rep_min_clinfr,rep_max_clinfr);
f_val=k_infect/k_max; k_count=k_count+1;
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]; R0_scan[k_count,]=c(k_susc,k_clinfrac,k_infect,R0,1-1/R0)
}
}
}
R0_scan[,"asympt_inf_str"]=factor(paste0("asympt inf=",R0_scan$asympt_inf),levels=unique(paste0("asympt inf=",R0_scan$asympt_inf/k_max)))
R0_scan
}
countryval
paste0("covid_simul_output/HIT_",countryval,".png")
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=25,height=10,units="cm")
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=30,height=10,units="cm")
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=30,height=10,units="cm")
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=10,units="cm")
standard_theme
standard_theme$text$size
standard_theme$axis.text.x$size
standard_theme$axis.text.x$size=7; standard_theme$axis.text.y$size=7
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=10,units="cm")
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=10,units="cm")
standard_theme$axis.text.x$size=7; standard_theme$axis.text.y$size=7; standard_theme$plot.title$size
standard_theme$axis.text.x$size=7; standard_theme$axis.text.y$size=7; standard_theme$plot.title$size=12
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=10,units="cm")
standard_theme$axis.text.x$size=7; standard_theme$axis.text.y$size=7; standard_theme$plot.title$size=12; standard_theme$axis.title$size
standard_theme$axis.text.x$size=7; standard_theme$axis.text.y$size=7; standard_theme$plot.title$size=12; standard_theme$axis.title$size=10
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=10,units="cm")
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=12,units="cm")
standard_theme$legend.text$size
standard_theme$legend.text$size=9
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=factor(clinfract))) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_brewer(palette="YlOrRd") + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=factor(clinfract),group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_brewer(palette="YlOrRd") + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_brewer(palette="YlOrRd") + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=factor(clinfract),group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_brewer(palette="YlOrRd",n=10) + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=factor(clinfract),group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_brewer(palette="YlOrRd") + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
mycolors <- colorRampPalette(brewer.pal(8, "YlOrRd"))
library(RColorBrewer)
mycolors <- colorRampPalette(brewer.pal(8, "YlOrRd"))
mycolors()
mycolors
mycolors <- colorRampPalette(brewer.pal(8, "YlOrRd"))(length(unique(R0_scan$susc)))
ggplot(R0_scan,aes(x=susc,y=HIT,color=factor(clinfract),group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_manual(mycolors) + # scale_color_brewer(palette="YlOrRd") + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=factor(clinfract),group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + # scale_color_distiller(palette="Spectral") +
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=12,units="cm")
countryval="Italy"; N_tot=fun_cntr_agestr(countryval,i_year="2020",age_groups)
covid_params=cm_parameters_SEI3R(gsub("Sudan","Ethiopia",countryval)); C_m=Reduce('+',covid_params$pop[[1]]$matrices)
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]] # NGM=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]
# # covidm default: dIp=2.4; dIs=3.2; dIa=7 ; y_def=rep(0.5,length(N_tot)); u_def=rep(0.08,length(N_tot))
# NGM_def[i_row,j_col]=u_def[i_row]*C_m[i_row,j_col]*(y_def[j_col]*(2.4+3.2) + (1-y_def[j_col])*unique(f_val)*7)
# PARSCAN for R0
min_val_susc=1e-2; maxval_susc=0.15; midpoint_susc=(min_val_susc+maxval_susc)/2; delta_susc=maxval_susc-midpoint_susc # mean_susc_exp=0.05
midpoint_clinfract=0.4; delta_clinfr=0.35 # mean_clinfract=0.307; min_val_clinfr=0.05
rep_min_susc=3; rep_max_susc=5; rep_min_clinfr=5; rep_max_clinfr=3
### SINGLE SIMULATION ---------------------------
# set params
agedep_param_lims=c(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr)
R0_scan=fun_multidim_scan(N_tot,k_max,agedep_param_lims);
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
R0_scan=fun_multidim_scan(N_tot,k_max,agedep_param_lims);
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
View(R0_scan)
R0_scan$asympt_inf/k_max
paste0("asympt inf=",R0_scan$asympt_inf/k_max)
fun_multidim_scan=function(N_tot,k_max,agedep_param_lims){
R0_scan=data.frame(matrix(0,ncol=5,nrow=k_max^3)); k_count=0; colnames(R0_scan)=c("susc","clinfract","asympt_inf","R0","HIT")
# midpoint_susc=agedep_param_lims[1];delta_susc=agedep_param_lims[2]; rep_min_susc=agedep_param_lims[3];rep_max_susc=agedep_param_lims[4]
# midpoint_clinfract=agedep_param_lims[5];delta_clinfr=agedep_param_lims[6];rep_min_clinfr=agedep_param_lims[7];
# rep_max_clinfr=agedep_param_lims[8]
g(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr) %=% agedep_param_lims
for (k_susc in 1:k_max){
for (k_clinfrac in 1:k_max){
for (k_infect in 1:k_max){
u_val=fun_lin_approx_agedep_par(min_val=midpoint_susc-(k_susc/k_max)*delta_susc,
max_val=midpoint_susc+(k_susc/k_max)*delta_susc,rep_min_susc,rep_max_susc)
y_val=fun_lin_approx_agedep_par(midpoint_clinfract-(k_clinfrac/k_max)*delta_clinfr,
midpoint_clinfract+(k_clinfrac/k_max)*delta_clinfr,rep_min_clinfr,rep_max_clinfr);
f_val=k_infect/k_max; k_count=k_count+1;
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]; R0_scan[k_count,]=c(k_susc,k_clinfrac,k_infect,R0,1-1/R0)
}
}
}
R0_scan[,"asympt_inf_str"]=factor(paste0("asympt inf=",R0_scan$asympt_inf/k_max),
levels=unique(paste0("asympt inf=",R0_scan$asympt_inf/k_max)))
R0_scan
}
R0_scan=fun_multidim_scan(N_tot,k_max,agedep_param_lims);
head(R0_scan)
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") + ylim(c(0.45,0.92)) +
ggtitle(paste0(countryval," herd immunity threshold"))
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=12,units="cm")
countryval="Brazil"; N_tot=fun_cntr_agestr(countryval,i_year="2020",age_groups)
covid_params=cm_parameters_SEI3R(gsub("Sudan","Ethiopia",countryval)); C_m=Reduce('+',covid_params$pop[[1]]$matrices)
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]] # NGM=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]
# # covidm default: dIp=2.4; dIs=3.2; dIa=7 ; y_def=rep(0.5,length(N_tot)); u_def=rep(0.08,length(N_tot))
# NGM_def[i_row,j_col]=u_def[i_row]*C_m[i_row,j_col]*(y_def[j_col]*(2.4+3.2) + (1-y_def[j_col])*unique(f_val)*7)
# PARSCAN for R0
min_val_susc=1e-2; maxval_susc=0.15; midpoint_susc=(min_val_susc+maxval_susc)/2; delta_susc=maxval_susc-midpoint_susc # mean_susc_exp=0.05
midpoint_clinfract=0.4; delta_clinfr=0.35 # mean_clinfract=0.307; min_val_clinfr=0.05
rep_min_susc=3; rep_max_susc=5; rep_min_clinfr=5; rep_max_clinfr=3
### SINGLE SIMULATION ---------------------------
# set params
agedep_param_lims=c(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr)
R0_scan=fun_multidim_scan(N_tot,k_max,agedep_param_lims);
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") + ylim(c(0.45,0.92)) +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") + ylim(c(0.42,0.92)) +
ggtitle(paste0(countryval," herd immunity threshold"))
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=12,units="cm")
countryval="South Africa"; N_tot=fun_cntr_agestr(countryval,i_year="2020",age_groups)
covid_params=cm_parameters_SEI3R(gsub("Sudan","Ethiopia",countryval)); C_m=Reduce('+',covid_params$pop[[1]]$matrices)
R0=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]] # NGM=fun_NGM_R0(N_tot,y_val,u_val,f_val,C_m)[[2]]
# # covidm default: dIp=2.4; dIs=3.2; dIa=7 ; y_def=rep(0.5,length(N_tot)); u_def=rep(0.08,length(N_tot))
# NGM_def[i_row,j_col]=u_def[i_row]*C_m[i_row,j_col]*(y_def[j_col]*(2.4+3.2) + (1-y_def[j_col])*unique(f_val)*7)
# PARSCAN for R0
min_val_susc=1e-2; maxval_susc=0.15; midpoint_susc=(min_val_susc+maxval_susc)/2; delta_susc=maxval_susc-midpoint_susc # mean_susc_exp=0.05
midpoint_clinfract=0.4; delta_clinfr=0.35 # mean_clinfract=0.307; min_val_clinfr=0.05
rep_min_susc=3; rep_max_susc=5; rep_min_clinfr=5; rep_max_clinfr=3
### SINGLE SIMULATION ---------------------------
# set params
agedep_param_lims=c(midpoint_susc,delta_susc,rep_min_susc,rep_max_susc,midpoint_clinfract,delta_clinfr,rep_min_clinfr,rep_max_clinfr)
R0_scan=fun_multidim_scan(N_tot,k_max,agedep_param_lims);
# mycolors <- colorRampPalette(brewer.pal(8, "YlOrRd"))(length(unique(R0_scan$susc)))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") + ylim(c(0.42,0.92)) +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") + ylim(c(0.4,0.92)) +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") + ylim(c(0.35,0.92)) +
ggtitle(paste0(countryval," herd immunity threshold"))
ggplot(R0_scan,aes(x=susc,y=HIT,color=clinfract,group=clinfract)) + geom_line() + facet_wrap(~asympt_inf_str) +
scale_color_distiller(palette="Spectral") + # scale_color_manual(values = mycolors) + # scale_color_brewer(palette="YlOrRd") + #
theme_bw() + standard_theme + xlab("susceptibility") + ylab("clinical fraction") + ylim(c(0.33,0.92)) +
ggtitle(paste0(countryval," herd immunity threshold"))
ggsave(paste0("covid_simul_output/HIT_",countryval,".png"),width=20,height=12,units="cm")

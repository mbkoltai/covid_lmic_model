foldertag=gsub("mcmc_","",
paste0(paste0(paste0(c(min(fits_death_scaling[[1]]$data$date),max(fits_death_scaling[[1]]$data$date)),collapse="_"),"_"),
paste0("seedsize_",gsub(" ","_",fits_death_scaling[[1]]$priors$seed_size),"_"),
paste0(names(fits_death_scaling[[1]]$options[c("mcmc_burn_in","mcmc_samples")]),
as.numeric(fits_death_scaling[[1]]$options[c("mcmc_burn_in","mcmc_samples")]),collapse = "_") ) )
mcmc_foldername=paste0("simul_output/somalia/fit_",foldertag)
if (!dir.exists(mcmc_foldername)) {dir.create(mcmc_foldername); file.copy(mcmc_filename,mcmc_foldername)}
# CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4); slope_val=linregr$coefficients["agegroup_mean"]
# fitting_date_window
for (k in 1:length(CDR_vals)) {#
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,function(x)
sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb=rbind(df_posteriors_comb,df_posteriors)} }
### correlations between parameters ----------------
# scatterplots + corrs for all values of CDR
png(filename=paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),units="cm",width=30,height=24,res=500)
p <- ggpairs(df_posteriors_comb %>% select(all_of(fitting_params),CDR) %>% mutate(CDR=factor(CDR)),aes(color=CDR,alpha=0.4)) +
theme_bw() + standard_theme + labs(caption=foldertag); print(p); dev.off()
# SAVE
# ggsave(paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),width=30,height=24,units="cm")
# for 1 value of CDR
# ggpairs(df_posteriors_comb %>% filter(CDR==unique(CDR)[1]) %>% select(all_of(fitting_params)),aes(alpha=0.4)) +
#   theme_bw() + standard_theme # + theme(strip.text.x = element_text(size=9))
# ggsave(paste0(mcmc_foldername,"/param_corrs_CDR",round(unique(CDR_vals)[1],3),".png"),width=30,height=24,units="cm")
# corrs only
corr_scale_plot=0
if (corr_scale_plot){
pairwise_corrs = bind_rows(lapply(unique(df_posteriors_comb$CDR), function(x) cbind(df_posteriors_comb %>% filter(CDR==x) %>%
select(all_of(fitting_params)) %>% corrr::correlate() %>% corrr::shave() %>% corrr::stretch() ,CDR=x))) %>% #
mutate(x=factor(x,levels=unique(x)),y=factor(y,levels=unique(y)),highlight_color=ifelse(abs(r)<0.7|is.na(r),0,1)) # %>% filter(!is.na(r))
# plot
ggplot(pairwise_corrs,aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=2,width=0.96,height=0.96) +
facet_wrap(~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=5) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +xlab("") + ylab("")
# # SAVE
ggsave(paste0(mcmc_foldername,"/param_corrs_CDR.png"),width=30,height=24,units="cm") }
} # end of loop
l_pairwise_corrs=list()
for (k_file in 1:length(fit_dirs)){ #
mcmc_filename=list.files(fit_dirs[k_file],pattern=".rds",full.names=T); fits_death_scaling <- readRDS(mcmc_filename)
foldertag=gsub("mcmc_","",
paste0(paste0(paste0(c(min(fits_death_scaling[[1]]$data$date),max(fits_death_scaling[[1]]$data$date)),collapse="_"),"_"),
paste0("seedsize_",gsub(" ","_",fits_death_scaling[[1]]$priors$seed_size),"_"),
paste0(names(fits_death_scaling[[1]]$options[c("mcmc_burn_in","mcmc_samples")]),
as.numeric(fits_death_scaling[[1]]$options[c("mcmc_burn_in","mcmc_samples")]),collapse = "_") ) )
mcmc_foldername=paste0("simul_output/somalia/fit_",foldertag)
if (!dir.exists(mcmc_foldername)) {dir.create(mcmc_foldername); file.copy(mcmc_filename,mcmc_foldername)}
# CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4); slope_val=linregr$coefficients["agegroup_mean"]
# fitting_date_window
for (k in 1:length(CDR_vals)) {#
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,function(x)
sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb=rbind(df_posteriors_comb,df_posteriors)} }
### correlations between parameters ----------------
# scatterplots + corrs for all values of CDR
corr_scatterplot=0; if (corr_scatterplot){
png(filename=paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),units="cm",width=30,height=24,res=500)
p <- ggpairs(df_posteriors_comb %>% select(all_of(fitting_params),CDR) %>% mutate(CDR=factor(CDR)),aes(color=CDR,alpha=0.4)) +
theme_bw() + standard_theme + labs(caption=foldertag); print(p); dev.off()}
# SAVE # ggsave(paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),width=30,height=24,units="cm")
# correlations only
corr_scalar_plot=1
if (corr_scalar_plot){
pairwise_corrs = bind_rows(lapply(unique(df_posteriors_comb$CDR), function(x) cbind(df_posteriors_comb %>% filter(CDR==x) %>%
select(all_of(fitting_params)) %>% corrr::correlate() %>% corrr::shave() %>% corrr::stretch() ,CDR=x))) %>%
mutate(x=factor(x,levels=unique(x)),y=factor(y,levels=unique(y)),highlight_color=ifelse(abs(r)<0.7|is.na(r),0,1)) # %>% filter(!is.na(r))
l_pairwise_corrs[[k_file]]= pairwise_corrs %>% mutate(folder_tag=foldertag)
# plot
# ggplot(pairwise_corrs,aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=2,width=0.96,height=0.96) +
#   facet_wrap(~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=5) +
#   scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
#   scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
#   standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +xlab("") + ylab("")
# ## SAVE
# ggsave(paste0(mcmc_foldername,"/param_corrs_CDR.png"),width=30,height=24,units="cm")
}
} # end of loop
length(l_pairwise_corrs)
head(l_pairwise_corrs[[1]],2)
dim(bind_rows(l_pairwise_corrs))
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=2,width=0.96,height=0.96) +
facet_wrap(folder_tag~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=5) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=2,width=0.96,height=0.96) +
facet_grid(folder_tag~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=5) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(folder_tag~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=5) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(folder_tag~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) + standard_theme + theme_bw() + xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(folder_tag~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90)) +
standard_theme + theme_bw() + xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(folder_tag~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90)) +
xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(folder_tag~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + standard_theme + theme_bw() +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90,vjust = 0.5)) +
xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(CDR~folder_tag,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + standard_theme + theme_bw() +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90,vjust = 0.5)) +
xlab("") + ylab("")
l_pairwise_corrs=list()
for (k_file in 1:length(fit_dirs)){ #
mcmc_filename=list.files(fit_dirs[k_file],pattern=".rds",full.names=T); fits_death_scaling <- readRDS(mcmc_filename)
foldertag=gsub("mcmc_","",
paste0(paste0(paste0(c(min(fits_death_scaling[[1]]$data$date),max(fits_death_scaling[[1]]$data$date)),collapse="_"),"_"),
paste0("seedsize_",gsub(" ","_",fits_death_scaling[[1]]$priors$seed_size),"_"),
paste0(names(fits_death_scaling[[1]]$options[c("mcmc_burn_in","mcmc_samples")]),
as.numeric(fits_death_scaling[[1]]$options[c("mcmc_burn_in","mcmc_samples")]),collapse = "_") ) )
mcmc_foldername=paste0("simul_output/somalia/fit_",foldertag)
if (!dir.exists(mcmc_foldername)) {dir.create(mcmc_foldername); file.copy(mcmc_filename,mcmc_foldername)}
# CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4); slope_val=linregr$coefficients["agegroup_mean"]
# fitting_date_window
for (k in 1:length(CDR_vals)) {#
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,function(x)
sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb=rbind(df_posteriors_comb,df_posteriors)} }
### correlations between parameters ----------------
# scatterplots + corrs for all values of CDR
corr_scatterplot=0; if (corr_scatterplot){
png(filename=paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),units="cm",width=30,height=24,res=500)
p <- ggpairs(df_posteriors_comb %>% select(all_of(fitting_params),CDR) %>% mutate(CDR=factor(CDR)),aes(color=CDR,alpha=0.4)) +
theme_bw() + standard_theme + labs(caption=foldertag); print(p); dev.off()}
# SAVE # ggsave(paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),width=30,height=24,units="cm")
# correlations only
pairwise_corrs = bind_rows(lapply(unique(df_posteriors_comb$CDR), function(x) cbind(df_posteriors_comb %>% filter(CDR==x) %>%
select(all_of(fitting_params)) %>% corrr::correlate() %>% corrr::shave() %>% corrr::stretch() ,CDR=x))) %>%
mutate(x=factor(x,levels=unique(x)),y=factor(y,levels=unique(y)),highlight_color=ifelse(abs(r)<0.7|is.na(r),0,1)) %>% filter(!is.na(r))
l_pairwise_corrs[[k_file]]= pairwise_corrs %>% mutate(folder_tag=foldertag)
# plot
corr_scalar_plot=0
if (corr_scalar_plot){
ggplot(pairwise_corrs,aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=2,width=0.96,height=0.96) +
facet_wrap(~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=5) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +xlab("") + ylab("")
# ## SAVE
ggsave(paste0(mcmc_foldername,"/param_corrs_CDR.png"),width=30,height=24,units="cm")
}
} # end of loop
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(CDR~folder_tag,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + standard_theme + theme_bw() +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90,vjust = 0.5)) +
xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(CDR~folder_tag,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) + scale_color_manual(values=c("grey","black"),guide=FALSE) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + standard_theme + theme_bw() +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90,vjust = 0.5)) +
xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(CDR~folder_tag,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) + scale_color_manual(values=c("grey","black"),guide=FALSE) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + standard_theme + theme_bw() +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90,vjust=0.5,hjust=0.3)) +
xlab("") + ylab("")
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(CDR~folder_tag,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) + scale_color_manual(values=c("grey","black"),guide=FALSE) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + standard_theme + theme_bw() +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90,vjust=0.5,hjust=0.95)) +
xlab("") + ylab("")
gsub("_burn*","",bind_rows(l_pairwise_corrs)$folder_tag)
gsub("_burn*","",bind_rows(l_pairwise_corrs)$folder_tag)[1:11]
gsub("_burn*","",bind_rows(l_pairwise_corrs)$folder_tag)[1:3]
gsub("_burn$","",bind_rows(l_pairwise_corrs)$folder_tag)[1:3]
gsub("_burn^","",bind_rows(l_pairwise_corrs)$folder_tag)[1:3]
gsub("_burn.*","",bind_rows(l_pairwise_corrs)$folder_tag)[1:3]
gsub("2020-","",gsub("_burn.*","",bind_rows(l_pairwise_corrs)$folder_tag)[1:3])
for (k in 1:length(CDR_vals)) {#
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,function(x)
sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb=rbind(df_posteriors_comb,df_posteriors)} }
### correlations between parameters ----------------
# scatterplots + corrs for all values of CDR
corr_scatterplot=0; if (corr_scatterplot){
png(filename=paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),units="cm",width=30,height=24,res=500)
p <- ggpairs(df_posteriors_comb %>% select(all_of(fitting_params),CDR) %>% mutate(CDR=factor(CDR)),aes(color=CDR,alpha=0.4)) +
theme_bw() + standard_theme + labs(caption=foldertag); print(p); dev.off()}
# SAVE # ggsave(paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),width=30,height=24,units="cm")
# correlations only
pairwise_corrs = bind_rows(lapply(unique(df_posteriors_comb$CDR), function(x) cbind(df_posteriors_comb %>% filter(CDR==x) %>%
select(all_of(fitting_params)) %>% corrr::correlate() %>% corrr::shave() %>% corrr::stretch() ,CDR=x))) %>%
mutate(x=factor(x,levels=unique(x)),y=factor(y,levels=unique(y)),highlight_color=ifelse(abs(r)<0.7|is.na(r),0,1)) %>% filter(!is.na(r))
l_pairwise_corrs[[k_file]]= pairwise_corrs %>% mutate(folder_tag=gsub("2020-","",gsub("_burn.*","",foldertag)))
# plot
corr_scalar_plot=0
if (corr_scalar_plot){
ggplot(pairwise_corrs,aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=2,width=0.96,height=0.96) +
facet_wrap(~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=5) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +xlab("") + ylab("")
# ## SAVE
ggsave(paste0(mcmc_foldername,"/param_corrs_CDR.png"),width=30,height=24,units="cm")
}
} # end of loop
for (k_file in 1:length(fit_dirs)){ #
mcmc_filename=list.files(fit_dirs[k_file],pattern=".rds",full.names=T); fits_death_scaling <- readRDS(mcmc_filename)
foldertag=gsub("mcmc_","",
paste0(paste0(paste0(c(min(fits_death_scaling[[1]]$data$date),max(fits_death_scaling[[1]]$data$date)),collapse="_"),"_"),
paste0("seedsize_",gsub(" ","_",fits_death_scaling[[1]]$priors$seed_size),"_"),
paste0(names(fits_death_scaling[[1]]$options[c("mcmc_burn_in","mcmc_samples")]),
as.numeric(fits_death_scaling[[1]]$options[c("mcmc_burn_in","mcmc_samples")]),collapse = "_") ) )
mcmc_foldername=paste0("simul_output/somalia/fit_",foldertag)
if (!dir.exists(mcmc_foldername)) {dir.create(mcmc_foldername); file.copy(mcmc_filename,mcmc_foldername)}
# CDR_vals=c(baseline_daily_burials*1e4/mogadishu_popul,0.1,0.2,0.4); slope_val=linregr$coefficients["agegroup_mean"]
# fitting_date_window
for (k in 1:length(CDR_vals)) {#
df_posteriors=fits_death_scaling[[k]]$posterior %>% select(chain,trial,lp,all_of(fitting_params)) %>%
mutate(`IFR sympt. infections (%)`=1e2*sapply(ifr_logit_intercept,
function(x) sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc) ),
`IFR all infections (%)`=1e2*sapply(ifr_logit_intercept,function(x)
sum(inv.logit(x+slope_val*somalia_agegroups_IFR$agegroup_mean)*somalia_agegroups_IFR$agegroup_perc*params$pop[[1]]$y))) %>%
mutate(CDR=round(CDR_vals[k],3))
if (k==1){df_posteriors_comb=df_posteriors} else {df_posteriors_comb=rbind(df_posteriors_comb,df_posteriors)} }
### correlations between parameters ----------------
# scatterplots + corrs for all values of CDR
corr_scatterplot=0; if (corr_scatterplot){
png(filename=paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),units="cm",width=30,height=24,res=500)
p <- ggpairs(df_posteriors_comb %>% select(all_of(fitting_params),CDR) %>% mutate(CDR=factor(CDR)),aes(color=CDR,alpha=0.4)) +
theme_bw() + standard_theme + labs(caption=foldertag); print(p); dev.off()}
# SAVE # ggsave(paste0(mcmc_foldername,"/param_corrs_CDR_scatterplot.png"),width=30,height=24,units="cm")
# correlations only
pairwise_corrs = bind_rows(lapply(unique(df_posteriors_comb$CDR), function(x) cbind(df_posteriors_comb %>% filter(CDR==x) %>%
select(all_of(fitting_params)) %>% corrr::correlate() %>% corrr::shave() %>% corrr::stretch() ,CDR=x))) %>%
mutate(x=factor(x,levels=unique(x)),y=factor(y,levels=unique(y)),highlight_color=ifelse(abs(r)<0.7|is.na(r),0,1)) %>% filter(!is.na(r))
l_pairwise_corrs[[k_file]]= pairwise_corrs %>% mutate(folder_tag=gsub("2020-","",gsub("_burn.*","",foldertag)))
# plot
corr_scalar_plot=0
if (corr_scalar_plot){
ggplot(pairwise_corrs,aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=2,width=0.96,height=0.96) +
facet_wrap(~CDR,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=5) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + scale_color_manual(values=c(NA,"black"),guide=FALSE) +
standard_theme + theme_bw() + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +xlab("") + ylab("")
# ## SAVE
ggsave(paste0(mcmc_foldername,"/param_corrs_CDR.png"),width=30,height=24,units="cm")
}
} # end of loop
head(bind_rows(l_pairwise_corrs),2)
ggplot(bind_rows(l_pairwise_corrs),aes(x,y,fill=r)) + geom_tile(aes(color=factor(highlight_color)),size=1,width=0.96,height=0.96) +
facet_grid(CDR~folder_tag,labeller=labeller(CDR=label_both)) + geom_text(aes(label=round(r,2)),size=4) +
scale_x_discrete(expand=c(0,0.02)) + scale_y_discrete(expand=c(0,0.02)) + scale_color_manual(values=c("grey","black"),guide=FALSE) +
scale_fill_gradient2(low="blue",mid="white",high="red",limit=c(-1,1)) + standard_theme + theme_bw() +
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),axis.text.x=element_text(angle=90,vjust=0.5,hjust=0.95)) +
xlab("") + ylab("")
ggsave("all_fits_param_corrs_CDR.png",width=30,height=24,units="cm")
getwd()
ggsave("simul_output/somalia/all_fits_param_corrs_CDR.png",width=30,height=20,units="cm")
ggsave("simul_output/somalia/all_fits_param_corrs_CDR.png",width=40,height=20,units="cm")
rm(list=ls()); currentdir_path=dirname(rstudioapi::getSourceEditorContext()$path); setwd(currentdir_path)
lapply(c("tidyverse","deSolve","qs","gtools","rstudioapi","wpp2019","countrycode","coronavirus","wesanderson","dttr2","RcppRoll",
"scales","wpp2019","GGally","corrr"), library,character.only=TRUE)
# detach("package:fitdistrplus", unload = TRUE); detach("package:MASS", unload = TRUE) # "foreach","parallel","doParallel"
# functions and plotting theme
source("somalia_data_model_fcns.R")
data("coronavirus")
# age structure
N_tot=fun_cntr_agestr("Somalia",i_year="2020",age_groups=data.frame(age_group=c(1:16),age_low=c(seq(0,75,5)),age_high=c(seq(4,74,5),100)))
# reported case and deaths data
covid_somal=coronavirus %>% filter(country %in% "Somalia") %>% mutate(rollingmean=roll_mean(cases,7,align="center",fill=NA)) %>%
mutate(per_million=rollingmean/(sum(N_tot)/1e6),name=str_replace(type,"confirmed","confirmed cases")) %>% rename(value=cases)
#' ### Plot timecourse of cases/deaths
ggplot(subset(covid_somal,!type %in% "recovered"),aes(x=date)) +
geom_line(aes(y=rollingmean)) + facet_wrap(~name,scales="free",nrow=2) + # geom_point(aes(y=cases),size=0.5,fill=NA,shape=1) + #
scale_x_date(name="", limits=c(as.Date("2020-03-01"), NA_Date_),date_breaks="weeks",expand=expansion(0.01,0)) +
# geom_rect(aes(xmin=as.Date("2020-04-20"),xmax=as.Date("2020-04-24"),ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
# geom_rect(aes(xmin=as.Date("2020-05-10"),xmax=as.Date("2020-05-15"),ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
# geom_rect(aes(xmin=as.Date("2020-05-28"),xmax=as.Date("2020-06-01"),ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
theme_bw() + standard_theme + ylab("") + scale_y_continuous(expand=expansion(0.02,0)) +
labs(title="COVID19 in Somalia: confirmed cases and deaths (7-day rolling mean)",caption="source: JHU CCSE")
burial_data=read_csv("data/somalia/Mogadishu_data/mogadishu_burial_analysis-main/out_bdr_daily_estimates.csv")
# pop_wp2015,pop_wp2020,new_graves_best_ipol,
ggplot(burial_data %>% select(date,br_wp2015,br_wp2015_base_s,br_wp2020,br_wp2020_base_s) %>% pivot_longer(!date)) +
geom_line(aes(x=date,y=value,group=name,color=name)) + # facet_wrap(~name,scales="free") +
scale_x_date(expand=expansion(0.01,0),date_breaks="2 month") + theme_bw() + standard_theme
burial_data=read_csv("data/somalia/Mogadishu_data/mogadishu_burial_analysis-main/out_bdr_daily_estimates.csv")
burial_data=read_csv("data/somalia_data//Mogadishu_data/mogadishu_burial_analysis-main/out_bdr_daily_estimates.csv")
ggplot(burial_data %>% select(date,br_wp2015,br_wp2015_base_s,br_wp2020,br_wp2020_base_s) %>% pivot_longer(!date)) +
geom_line(aes(x=date,y=value,group=name,color=name)) + # facet_wrap(~name,scales="free") +
scale_x_date(expand=expansion(0.01,0),date_breaks="2 month") + theme_bw() + standard_theme
baseline_daily_burials=mean(subset(burial_data,date>="2019-07-01" & date<="2019-11-01")$new_graves_best_ipol)
# subset for relevant period and columns
out_bdr_daily_estimates=burial_data[!rowSums(is.na(burial_data))==(ncol(burial_data)-1),
!colSums(is.na(burial_data))==nrow(burial_data)] %>% filter(date>"2019-11-01") %>%
mutate(daily_baseline_subtr=ifelse(new_graves_best_ipol-baseline_daily_burials>0,
new_graves_best_ipol-baseline_daily_burials,0),
rollmeanweek=roll_mean(daily_baseline_subtr,7,align="center", fill=NA), # rolling mean BASELINE subtracted
rollsumweek=roll_sum(daily_baseline_subtr,7,align="left",fill=NA),
rollmeanweek_no_subtr=roll_mean(new_graves_best_ipol,7,align="center", fill=NA),
rollsumweek_no_subtr=roll_sum(new_graves_best_ipol,7,align="left",fill=NA))
ggplot(subset(out_bdr_daily_estimates %>% pivot_longer(col=c(new_graves_best_ipol,rollmeanweek,rollsumweek)),grepl("roll",name)),
aes(x=date,y=value)) + facet_wrap(~name,scales="free") + geom_line() + geom_point(size=0.3) + theme_bw() + standard_theme +
scale_x_date(date_breaks="2 weeks",expand=expansion(0.0)) + theme(axis.text.x=element_text(vjust=0.5))
weekly_deaths_reported=data.frame(subset(covid_somal,name %in% "death")[,c("date","value")],datasource="reported") %>%
mutate(datasource=as.character(datasource)) %>% rename(value_report_daily=value) %>%
mutate(rollmeanweek=roll_mean(value_report_daily,7,align="center",fill=NA),
rollsumweek=roll_sum(value_report_daily,7,fill=NA,align="right"))
# plot together
df_compare_report_satell=bind_rows(weekly_deaths_reported,
out_bdr_daily_estimates %>% select(date,daily_baseline_subtr,rollmeanweek,rollsumweek) %>% mutate(datasource="satellite") ) %>%
pivot_longer(cols=!c(date,datasource)) %>% filter(!is.na(value)) %>% #  & name=="rollsumweek"
mutate(type=ifelse(!grepl("sum|mean",name),"daily",name),week=format(date,"%Y/%W")) %>%
filter(type=="daily") %>% group_by(week,datasource) %>%
summarise(date=min(date),datasource=unique(datasource),name=unique(name),value=sum(value)) %>% mutate(week=gsub("/","/w",week))
# plot # library(ungeviz)
p <- ggplot(subset(df_compare_report_satell,date>"2020-01-15" & date<"2020-10-07"),aes(x=week,y=value,group=datasource)) +
# geom_point(aes(x=week,y=value,group=datasource,color=datasource),pch="-",size=30) +
geom_hpline(aes(x=week,y=value,group=datasource,color=datasource),width=0.9) + #
geom_vline(xintercept=(1:length(unique(df_compare_report_satell$week)))-0.5,size=0.1,linetype="dashed") +
scale_color_discrete(labels=c("reported COVID19 deaths","excess burials")) +  labs(fill="",color="") +
# geom_bar(aes(fill=datasource),stat="identity",position=position_dodge(width=0.75),color="black",size=0.2) +
# scale_fill_discrete(labels=c("reported COVID19 deaths","excess burials")) +
theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5),legend.position=c(0.88,0.9),legend.margin=margin(0,0,0,0)) +
# legend.spacing.x = unit(0, "mm"),legend.spacing.y = unit(0, "mm")
scale_y_continuous(expand=expansion(0.01,0),breaks=(0:20)*5); p
OxCGRT_url="https://raw.githubusercontent.com/OxCGRT/covid-policy-tracker/master/data/OxCGRT_latest.csv"
OxCGRT_input=fcn_get_OxCGRT(OxCGRT_url,"Somalia") %>% mutate(OxCGRT_scaled_smoothed=roll_mean(OxCGRT_scaled,30,align="center",fill=NA))
# separate into 4 phases
NPI_phases=list(first=c("2020-03-19","2020-06-30"),second=c("2020-07-01","2020-08-29"),
third=c("2020-08-30","2020-10-08"),fourth=c("2020-10-09","2020-11-01"))
NPIvals=sapply(NPI_phases,function(x) mean(OxCGRT_input$OxCGRT_scaled[OxCGRT_input$date>as.Date(x)[1]&OxCGRT_input$date<as.Date(x)[2]]))
npi_df=left_join(data.frame(t(data.frame(on_off=c("on","off"),NPI_phases))) %>% add_rownames(var="name") %>%
filter(!name=="on_off") %>% rename(on=X1,off=X2) %>% mutate(on=as.Date(on),off=as.Date(off)),
data.frame(NPIvals) %>% rownames_to_column(var="name"),by="name") %>% mutate(name=factor(name,levels=unique(name)))
# plot
ggplot(OxCGRT_input) + geom_line(aes(x=date,y=OxCGRT_scaled)) +
geom_segment(data=npi_df,aes(x=on,xend=off,y=NPIvals,yend=NPIvals,group=factor(name),color=factor(name)),size=2) +
theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) + labs(color="NPI phases") +
scale_x_date(limits=c(min(subset(OxCGRT_input,NPI_on>0)$date)-15,max(out_bdr_daily_estimates$date)+35),breaks="week",
expand=expansion(0.01,0)) + scale_y_continuous(breaks=(0:10)/10) +
geom_vline(data=npi_df,aes(xintercept=on,color=name),linetype="dashed") + ylab("level of contacts if reduction ~ StringencyIndex")
somalia_agegroups_IFR=fcn_merge_ifr_above_age(left_join(fcn_load_age_str("Somalia",n_year="2015",90),
fcn_load_ifr("data/IFR_by_age_imperial.csv"),by=c("agegroup","agegroup_min")),75)
somalia_agegroups_IFR$ifr_mean[1]=3e-6; somal_popul_tot=sum(somalia_agegroups_IFR$agegroupsize); mogadishu_popul=2.2e6
# other IFR estimates
# from Sandmann 2021 cmmid paper
IFR_estimates_Sandmann2021<-read_csv("data/IFR_estimates_Sandmann2021.csv")
if (any(IFR_estimates_Sandmann2021$value_percent>1)) {n_cols<-2:ncol(IFR_estimates_Sandmann2021)
IFR_estimates_Sandmann2021[,n_cols]<-IFR_estimates_Sandmann2021[,n_cols]/1e2}
ggplot(data.frame(age=factor(somalia_agegroups_IFR$agegroup,levels=unique(somalia_agegroups_IFR$agegroup)),
imper=somalia_agegroups_IFR$ifr_mean,sandmann=IFR_estimates_Sandmann2021$value_percent) %>%
pivot_longer(!age),aes(x=age,y=value,group=name,color=name)) + geom_line() + geom_point() + theme_bw() + scale_y_log10()
cm_path="~/Desktop/research/models/epid_models/covid_model/lmic_model/covidm/"
cm_force_rebuild=F; cm_build_verbose=T; cm_version=1; source(file.path(cm_path,"R","covidm.R"))
countryval="Somalia"; params=cm_parameters_SEI3R(gsub("Sudan|Somalia","Ethiopia",countryval),
date_start="2019-11-01",date_end="2020-11-01")
params$pop[[1]]$name=countryval
params$pop[[1]]$size=somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
### SEEDING ---
npi_on_day=min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]); introd_day=as.Date("2019-12-01")
seeding_t_window=sapply(c(introd_day,introd_day),function(x) as.numeric(x-as.Date(params$date0)))
seedsize_per_day=50
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=seedsize_per_day) # x new infections/day for n days
# infections start in individuals aged 20-50, 1 introd in each age group
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
### add death process to model ------
params$processes <- list(cm_multinom_process("Ip",outcomes=data.table(death=somalia_agegroups_IFR$ifr_mean),
delays=data.table(death=cm_delay_gamma(22,22,60,1/4)$p), report="o"))
# suscept and clinical fraction age dependent
suscept_clinfract_posteriors<-read_csv("data/suscept_clinfract_posteriors_davies2010.csv") %>%
mutate(agegroup=factor(agegroup,levels=unique(agegroup)))
ggplot(suscept_clinfract_posteriors %>% mutate(name=gsub("clin_fract","clinical fraction",name)),
aes(x=agegroup,y=value,group=1)) + geom_line() + geom_point() + ylab("proportion/normalised value") +
facet_wrap(~name,scales="free") + theme_bw() + scale_y_continuous(breaks=(2:20)/20)
params$pop[[1]]$y=fun_lin_approx_agedep_par(agegroups=somalia_agegroups_IFR,min_val=0.25,max_val=0.7,rep_min=6,rep_max=2)
# change susceptibility to get R0
params$pop[[1]]$y=fun_lin_approx_agedep_par(agegroups=somalia_agegroups_IFR,min_val=0.25,max_val=0.7,rep_min=6,rep_max=2)
target_R0=1.8; params$pop[[1]]$u=c(rep(0.38,4),rep(0.8,12)) # susceptibility_warvick_model$value #
params$pop[[1]]$u=params$pop[[1]]$u*(target_R0/cm_calc_R0(params,1))
# R0: cm_calc_R0(params,1)
### ### ### ### ###
# input NPIs
k_compl=0.3
for (k in 1:length(NPIvals)) { # setup for version 1
if (cm_version==1) {if (k==1) {params$pop[[1]]$schedule=NULL; iv=cm_iv_build(params)} # sets up data structure for interventions
cm_iv_contact(iv, NPI_phases[[k]][1], NPI_phases[[k]][2], 1-(1-as.numeric(rep(NPIvals[k],4)))*k_compl)
if (k==length(NPIvals)) {params=cm_iv_apply(params,iv)} } else { # sets the "schedule" parameter to follow interventions in iv
# version 2
params$schedule[[k]]=list(parameter="contact",pops=numeric(),mode="multiply",
values=list(rep(NPIvals[k],4),rep(1,4)),times=NPI_phases[[k]])} }
### ### ### ### ### ### ### ### ### ###
# RUN SIMULATION
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
# covidm_simul_agesep=fcn_covidm_df(run$dynamics,sel_vars=c("cases","subclinical","death_o","R"),params)
# sum of age groups
covidm_simul=fcn_covidm_process_output(run$dynamics,filter_vars=c("E","foi","cases_reported"),
compartm_types=list(case_vars=c("cases","subclinical","Ia","Ip","Is","S","R"),death_vars=c("D","death_o")),
dynamics_type=list(cumul=c("D","R","S"),incid=c("cases","subclinical","death_o"),preval=c("Ia","Ip","Is")),
populval=mogadishu_popul,params)
seeding_df=data.frame(seed_date=unique(covidm_simul$date)[unique(params$pop[[1]]$seed_times)]) %>%
summarise(min=min(seed_date),max=max(seed_date))
# make the plot
ggplot(subset(covidm_simul,!dynam_type %in% "preval")) + geom_area(aes(x=date,y=value,fill=compartment),color="black",size=0.3) +
facet_wrap(dynam_type~compartm_type,scales="free") + theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) +
scale_x_date(limits=as.Date(c(params$date0,params$time1)),date_breaks="2 weeks",expand=expansion(0,0)) + ylab("number") +
scale_y_continuous(expand=expansion(0.01,0)) +geom_vline(data=npi_df,aes(xintercept=on,color=name),size=1,linetype="dashed") +
geom_rect(data=seeding_df,aes(xmin=min,xmax=max,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.4) + labs(fill="")
fitting_date_window=as.Date(c("2020-01-15","2020-10-01"))
fcn_covidm_singlesim_error(covidm_simul,introd_day,seedsize_per_day,out_bdr_daily_estimates,fitting_date_window)
covidmsimul
# fcn_covidm_singlesim_error(covidm_simul,introd_day,seedsize_per_day,out_bdr_daily_estimates,fitting_date_window)
df_data_simul_deaths=left_join(subset(covidm_simul %>% rename(simul=value),compartment %in% "death_o")%>% select(date,simul),
out_bdr_daily_estimates %>% select(date,daily_baseline_subtr) %>% rename(data=daily_baseline_subtr)) # %>% pivot_longer(!date)
head(df_data_simul_deaths,2)
abs_err=subset(df_data_simul_deaths, date >= fitting_dates[1] & date <= fitting_dates[2]) # %>% group_by(date) %>%
summarise(data=value[name=="data"],diff=value[name=="data"]-value[name=="simul"],sumval=sum(value),mae=abs(diff))
abs_err=subset(df_data_simul_deaths, date >= fitting_dates[1] & date <= fitting_dates[2]) # %>% group_by(date) %>%
summarise(diff=data-simul,sumval=sum(value),mae=abs(diff)) # data=value[name=="data"],
head(df_data_simul_deaths,2)
abs_err=subset(df_data_simul_deaths, date >= fitting_dates[1] & date <= fitting_dates[2]) # %>% group_by(date) %>%
summarise(mae=mean(abs(data-simul))) # data=value[name=="data"],
abs_err=subset(df_data_simul_deaths, date >= fitting_dates[1] & date <= fitting_dates[2]) %>% group_by(date) %>%
summarise(mae=mean(abs(data-simul))) # data=value[name=="data"],
# fcn_covidm_singlesim_error(covidm_simul,introd_day,seedsize_per_day,out_bdr_daily_estimates,fitting_date_window)
abs_err=subset(df_data_simul_deaths, date >= fitting_date_window[1] & date <= fitting_date_window[2]) %>% group_by(date) %>%
summarise(mae=mean(abs(data-simul))) # data=value[name=="data"],
abs_err
abs_err=subset(df_data_simul_deaths, date >= fitting_date_window[1] & date <= fitting_date_window[2]) %>% # group_by(date) %>%
summarise(mae=mean(abs(data-simul))) # data=value[name=="data"],
abs_err
abs_err=subset(df_data_simul_deaths, date >= fitting_date_window[1] & date <= fitting_date_window[2]) %>% # group_by(date) %>%
summarise(mae=mean(abs(data-simul)),mape=mean(abs(data-simul)/data))
abs_err
c(1,2,3)!=0
abs_err=subset(df_data_simul_deaths, date >= fitting_date_window[1] & date <= fitting_date_window[2]) %>% # group_by(date) %>%
summarise(mae=mean(abs(data-simul)),mape=mean(abs(data[data!=0]-simul[data!=0])/data[data!=0]))
abs_err
View(df_data_simul_deaths)
ggplot(df_data_simul_deaths,aes(x=date)) + geom_line(aes(y=simul)) + #,group=name,color=name
geom_line(aes(y=data)) + # ,group=name,color=name
theme_bw() + standard_theme
ggplot(df_data_simul_deaths,aes(x=date)) + geom_line(aes(y=simul)) + #,group=name,color=name
geom_line(aes(y=data),linetype="dashed") + # ,group=name,color=name
theme_bw() + standard_theme
ggplot(df_data_simul_deaths,aes(x=date)) + geom_line(aes(y=simul)) + #,group=name,color=name
geom_line(aes(y=data),linetype="dashed",size=0.5) + geom_point(aes(y=data)) + # ,group=name,color=name
theme_bw() + standard_theme
ggplot(df_data_simul_deaths,aes(x=date)) + geom_line(aes(y=simul),color="blue") + #,group=name,color=name
geom_line(aes(y=data),linetype="dashed",size=0.5) + geom_point(aes(y=data),fill=NA,shape=1) + # ,group=name,color=name
theme_bw() + standard_theme
source("somalia_data_model_fcns.R")
rm(df_data_simul_deaths)
rm(abs_err)
fitting_date_window
fcn_covidm_singlesim_error(covidm_simul,introd_day,seedsize_per_day,out_bdr_daily_estimates,fitting_date_window)
source("somalia_data_model_fcns.R")
fcn_covidm_singlesim_error(covidm_simul,introd_day,seedsize_per_day,out_bdr_daily_estimates,fitting_date_window)
source("somalia_data_model_fcns.R")
fcn_covidm_singlesim_error(covidm_simul,introd_day,seedsize_per_day,out_bdr_daily_estimates,fitting_date_window)
source("somalia_data_model_fcns.R")
fcn_covidm_singlesim_error(covidm_simul,introd_day,seedsize_per_day,out_bdr_daily_estimates,fitting_date_window)
source("somalia_data_model_fcns.R")
fcn_covidm_singlesim_error(covidm_simul,introd_day,seedsize_per_day,out_bdr_daily_estimates,fitting_date_window)
somalia_agegroups_IFR = somalia_agegroups_IFR %>% mutate(log_ifr=log(ifr_mean),logit_ifr=log(ifr_mean/(1-ifr_mean)))
# ggplot(somalia_agegroups_IFR,aes(x=agegroup_mean)) + geom_line(aes(y=log_ifr)) + geom_point(aes(y=log_ifr)) +
#   geom_line(aes(y=logit_ifr),color="red") + geom_point(aes(y=logit_ifr),color="red")+ scale_x_continuous(breaks=2.5+(0:16)*5)
linregr=lm(logit_ifr~agegroup_mean,data=somalia_agegroups_IFR %>% select(agegroup_mean,logit_ifr) )
ggplot(somalia_agegroups_IFR %>%
mutate( #uk_estim=IFR_estimates_Sandmann2021$value_percent,
pred_ifr=inv.logit(linregr$coefficients["(Intercept)"] + linregr$coefficients["agegroup_mean"]*somalia_agegroups_IFR$agegroup_mean)) %>%
select(agegroup_mean,ifr_mean,pred_ifr) %>% rename(estimate=ifr_mean,fit=pred_ifr) %>% pivot_longer(!c(agegroup_mean)),
aes(x=agegroup_mean,y=value*1e2,group=name,color=name)) + geom_line(size=1.05) + geom_point(size=2) +
theme_bw() + standard_theme + scale_x_continuous(breaks=2.5+(0:16)*5) + labs(color="") + xlab("age (year)") + ylab("IFR %") +
theme(axis.text.x=element_text(vjust=0.5,size=12),axis.text.y=element_text(size=12)) +
scale_y_log10(limits=c(1e-4,10^1.1),breaks=scales::trans_breaks("log10",function(x) 10^x))

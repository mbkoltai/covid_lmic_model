rm(list=ls()); currentdir_path=dirname(rstudioapi::getSourceEditorContext()$path); setwd(currentdir_path)
lapply(c("tidyverse","deSolve","qs","gtools","rstudioapi","wpp2019","countrycode","coronavirus","wesanderson",
"RcppRoll","scales","dttr2","wpp2019","foreach","parallel","doParallel"), library,character.only=TRUE)
# functions and plotting theme
source("covid_LIC_fcns.R")
out_bdr_daily_estimates=read_csv("data/somalia/Mogadishu_data/mogadishu_burial_analysis-main/out_bdr_daily_estimates.csv")
# baseline of daily burials
baseline_daily_burials=mean(subset(out_bdr_daily_estimates,date>="2019-07-01" & date<="2019-11-01")$new_graves_best_ipol)
# subset for relevant period and columns
out_bdr_daily_estimates=out_bdr_daily_estimates[!rowSums(is.na(out_bdr_daily_estimates))==(ncol(out_bdr_daily_estimates)-1),
!colSums(is.na(out_bdr_daily_estimates))==nrow(out_bdr_daily_estimates)] %>% filter(date>"2019-11-01") %>%
mutate(daily_baseline_subtr=ifelse(new_graves_best_ipol-baseline_daily_burials>0,new_graves_best_ipol-baseline_daily_burials,0),
rollmeanweek=roll_mean(daily_baseline_subtr,7,align="center", fill=NA), # rolling mean BASELINE subtracted
rollsumweek=roll_sum(daily_baseline_subtr,7,align="left",fill=NA))
ggplot(subset(out_bdr_daily_estimates %>% pivot_longer(col=c(new_graves_best_ipol,rollmeanweek,rollsumweek)),grepl("roll",name)),
aes(x=date,y=value)) + facet_wrap(~name,scales="free") + geom_line() + geom_point(size=0.3) + theme_bw() + standard_theme +
scale_x_date(date_breaks="2 weeks",expand=expansion(0.0)) + theme(axis.text.x=element_text(vjust=0.5))
weekly_deaths_reported=data.frame(subset(covid_somal,name %in% "death")[,c("date","value")],datasource="reported") %>%
mutate(datasource=as.character(datasource)) %>% rename(value_report_daily=value) %>%
mutate(rollmeanweek=roll_mean(value_report_daily,7,align="center",fill=NA),
rollsumweek=roll_sum(value_report_daily,7,fill=NA,align="right"))
OxCGRT_url="https://raw.githubusercontent.com/OxCGRT/covid-policy-tracker/master/data/OxCGRT_latest.csv"
OxCGRT_input = fcn_get_OxCGRT(OxCGRT_url,"Somalia") %>% mutate(OxCGRT_scaled_smoothed=roll_mean(OxCGRT_scaled,30,align="center",fill=NA))
# Somalia population
somal_popul_tot=sum(N_tot); mogadishu_popul=2.2e6
N_tot=fun_cntr_agestr("Somalia",i_year="2020",age_groups=data.frame(age_group=c(1:16),age_low=c(seq(0,75,5)),age_high=c(seq(4,74,5),100)))
N_tot
somal_popul_tot=sum(N_tot); mogadishu_popul=2.2e6
cm_path="~/Desktop/research/models/epid_models/covid_model/lmic_model/covidm/"
cm_force_rebuild=F; cm_build_verbose=T; cm_version=1; source(file.path(cm_path,"R","covidm.R"))
countryval="Somalia"; params=cm_parameters_SEI3R(gsub("Sudan|Somalia","Ethiopia",countryval),
date_start="2019-11-01",date_end="2020-10-01")
params$pop[[1]]$name=countryval
View(OxCGRT_input)
min(OxCGRT_input$NPI_on>0)
which.min(OxCGRT_input$NPI_on>0)
which(OxCGRT_input$NPI_on>0)
min(which(OxCGRT_input$NPI_on>0))
min(OxCGRT_input$date(OxCGRT_input$NPI_on>0))
OxCGRT_input$date(OxCGRT_input$NPI_on>0)
min(OxCGRT_input$date[OxCGRT_input$NPI_on>0])
min(OxCGRT_input$date[OxCGRT_input$NPI_on>0])
class(min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]))
params$date0
as.Date(params$date0)
min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]) - as.Date(params$date0)
as.numeric(min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]) - as.Date(params$date0))
npi_on_n_day=as.numeric(min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]) - as.Date(params$date0))
npi_on_t_day=as.numeric(min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]) - as.Date(params$date0))
rm(npi_on_n_day)
npi_on_t_day
npi_on_day=OxCGRT_input$date[OxCGRT_input$NPI_on>0])
npi_on_day=min(OxCGRT_input$date[OxCGRT_input$NPI_on>0])
npi_on_day
npi_on_day
as.numeric(npi_on_day - as.Date(params$date0))
rm(npi_on_t_day)
as.Date("2020-01-01")
as.numeric(npi_on_day-as.Date("2020-01-01"))
sapply(c(as.Date("2020-02-01")),function(x) as.numeric(npi_on_day-x))
sapply(c(as.Date("2020-02-01")),function(x) as.numeric(x-as.Date(params$date0)))
npi_on_day
seeding_t_window = sapply(c(as.Date("2020-02-01"),npi_on_day),function(x) as.numeric(x-as.Date(params$date0)))
seeding_t_window
seeding_t_window
findInterval(1,seeding_t_window)
findInterval(seeding_t_window,1)
rep(seeding_t_window[1],seeding_t_window[2],each=1)
rep(seeding_t_window[1]:seeding_t_window[2],each=1)
params$pop[[1]]$seed_times
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=1) # x new infections/day for n days
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
somalia_agegroups_IFR=fcn_merge_ifr_above_age(left_join(fcn_load_age_str("Somalia",90),fcn_load_ifr("data/IFR_by_age_imperial.csv"),
by=c("agegroup","agegroup_min")),75); somalia_agegroups_IFR$ifr_mean[1]=3e-6
somalia_agegroups_IFR
ponset2death
params$processes <- list(cm_multinom_process("Ip",outcomes=data.table(death=somalia_agegroups_IFR$ifr_mean),
delays=data.table(death=cm_delay_gamma(22, 22, max_time, tres)$p), report="o"))
params$processes <- list(cm_multinom_process("Ip",outcomes=data.table(death=somalia_agegroups_IFR$ifr_mean),
delays=data.table(death=cm_delay_gamma(22, 22, 60, 1/4)$p), report="o"))
somalia_agegroups_IFR
read_csv("data/suscept_clinfract_posteriors_davies2010.csv")
tail(read_csv("data/suscept_clinfract_posteriors_davies2010.csv"))
subset(read_csv("data/suscept_clinfract_posteriors_davies2010.csv"),name %in% "clin_fract")$value
params$pop[[1]]$y=subset(read_csv("data/suscept_clinfract_posteriors_davies2010.csv"),name %in% "clin_fract")$value
params$pop[[1]]$y
fun_lin_approx_agedep_par(agegroups=somalia_agegroups_IFR,min_val=0.1,max_val=0.75,rep_min=3,rep_max=5)
suscept_clinfract_posteriors_davies2010<-read_csv("data/suscept_clinfract_posteriors_davies2010.csv")
suscept_clinfract_posteriors_davies2010
subset(suscept_clinfract_posteriors_davies2010,name %in% "clin_fract")$value
subset(suscept_clinfract_posteriors_davies2010,name %in% "susceptibility")$value
params$pop[[1]]$u=subset(suscept_clinfract_posteriors_davies2010,name %in% "susceptibility")$value
params$pop[[1]]$u*(target_R0/cm_calc_R0(params,1))
target_R0=1.8
cm_calc_R0(params,1)
params$pop[[1]]$u
(target_R0/cm_calc_R0(params,1))
params$pop[[1]]$u=subset(suscept_clinfract_posteriors_davies2010,name %in% "susceptibility")$value*(target_R0/cm_calc_R0(params,1))
params$pop[[1]]$u
cm_calc_R0(params,1)
somalia_agegroups_IFR
sum(somalia_agegroups_IFR$agegroupsize)
sum(somalia_agegroups_IFR$agegroupsize)
sum(N_tot)
somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
sum(somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize)))
params$pop[[1]]$size=somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
params$pop[[1]]$size
NPI_phases=list(first=c("2020-03-19","2020-05-28"),second=c("2020-05-29","2020-06-30"),third=c("2020-07-01","2020-09-24"))
NPIvals=sapply(NPI_phases,function(x) mean(OxCGRT_input$OxCGRT_scaled[OxCGRT_input$date>as.Date(x)[1]&OxCGRT_input$date<as.Date(x)[2]]))
k_compl=0.4
for (k in 1:length(NPIvals)) { # setup for version 1
if (cm_version==1) {if (k==1) {params$pop[[1]]$schedule=NULL; iv=cm_iv_build(params)} # sets up data structure for interventions
cm_iv_contact(iv, NPI_phases[[k]][1], NPI_phases[[k]][2], 1-(1-as.numeric(rep(NPIvals[k],4)))*k_compl)
if (k==length(NPIvals)) {params=cm_iv_apply(params,iv)} } else { # sets the "schedule" parameter to follow interventions in iv
# version 2
params$schedule[[k]]=list(parameter="contact",pops=numeric(),mode="multiply",
values=list(rep(NPIvals[k],4),rep(1,4)),times=NPI_phases[[k]])} }
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
compartm_types=list(case_vars=c("cases","subclinical","Ia","Ip","Is","S","R"),death_vars=c("D","death_o"))
dynamics_type=list(cumul=c("D","R","S"),incid=c("cases","subclinical","death_o"),preval=c("Ia","Ip","Is"))
covidm_simul=fcn_covidm_process_output(run$dynamics,filter_vars=c("E","foi","cases_reported"),
compartm_types,dynamics_type,populval=mogadishu_popul,params)
npi_df=data.frame(on_off=c("on","off"),NPI_phases) %>% pivot_longer(!on_off) %>% mutate(date=as.Date(value)) %>% filter(on_off %in% "on")
seeding_df=data.frame(seed_date=unique(covidm_simul$date)[unique(params$pop[[1]]$seed_times)]) %>% summarise(min=min(seed_date),max=max(seed_date))
ggplot(subset(covidm_simul,!dynam_type %in% "preval")) + geom_area(aes(x=date,y=value,fill=compartment),color="black",size=0.3) +
facet_wrap(dynam_type~compartm_type,scales="free") + theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) +
scale_x_date(limits=as.Date(c("2019-11-30","2020-08-15")),date_breaks="2 weeks",expand=expansion(0,0)) + ylab("number") +
scale_y_continuous(expand=expansion(0.01,0)) + geom_vline(data=npi_df,aes(xintercept=date,color=name),size=1.1) + # linetype="dashed"
geom_rect(data=seeding_df,aes(xmin=min,xmax=max,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.4)
View(out_bdr_daily_estimates)
fitting_date_window=as.Date(c("2019-01-15","2020-10-01"))
fcn_covidm_singlesim_error(covidm_simul,out_bdr_daily_estimates,fitting_date_window)
seeding_t_window = sapply(c(as.Date("2020-12-15"),npi_on_day),function(x) as.numeric(x-as.Date(params$date0)))
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=1) # x new infections/day for n days
# infections start in individuals aged 20-50
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
npi_on_day
params$pop[[1]]$size=somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
params$pop[[1]]$size=somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
# seeding
npi_on_day=min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]);
seeding_t_window = sapply(c(as.Date("2020-12-15"),npi_on_day),function(x) as.numeric(x-as.Date(params$date0)))
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=1) # x new infections/day for n days
# infections start in individuals aged 20-50
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
### add death process to model ------
params$processes <- list(cm_multinom_process("Ip",outcomes=data.table(death=somalia_agegroups_IFR$ifr_mean),
delays=data.table(death=cm_delay_gamma(22, 22, 60, 1/4)$p), report="o"))
params$pop[[1]]$seed_times
seeding_t_window = sapply(c(as.Date("2019-12-15"),npi_on_day),function(x) as.numeric(x-as.Date(params$date0)))
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=1) # x new infections/day for n days
# infections start in individuals aged 20-50
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
params$pop[[1]]$seed_times
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
compartm_types=list(case_vars=c("cases","subclinical","Ia","Ip","Is","S","R"),death_vars=c("D","death_o"))
dynamics_type=list(cumul=c("D","R","S"),incid=c("cases","subclinical","death_o"),preval=c("Ia","Ip","Is"))
covidm_simul=fcn_covidm_process_output(run$dynamics,filter_vars=c("E","foi","cases_reported"),
compartm_types,dynamics_type,populval=mogadishu_popul,params)
# PLOT
# df for npi and seeding
npi_df=data.frame(on_off=c("on","off"),NPI_phases) %>% pivot_longer(!on_off) %>% mutate(date=as.Date(value)) %>% filter(on_off %in% "on")
seeding_df=data.frame(seed_date=unique(covidm_simul$date)[unique(params$pop[[1]]$seed_times)]) %>% summarise(min=min(seed_date),max=max(seed_date))
# make the plot
ggplot(subset(covidm_simul,!dynam_type %in% "preval")) + geom_area(aes(x=date,y=value,fill=compartment),color="black",size=0.3) +
facet_wrap(dynam_type~compartm_type,scales="free") + theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) +
scale_x_date(limits=as.Date(c("2019-11-30","2020-08-15")),date_breaks="2 weeks",expand=expansion(0,0)) + ylab("number") +
scale_y_continuous(expand=expansion(0.01,0)) + geom_vline(data=npi_df,aes(xintercept=date,color=name),size=1.1) + # linetype="dashed"
geom_rect(data=seeding_df,aes(xmin=min,xmax=max,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.4)
# SAVE
ggplot(subset(covidm_simul,!dynam_type %in% "preval")) + geom_area(aes(x=date,y=value,fill=compartment),color="black",size=0.3) +
facet_wrap(dynam_type~compartm_type,scales="free") + theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) +
scale_x_date(limits=as.Date(c("2019-11-30","2020-10-15")),date_breaks="2 weeks",expand=expansion(0,0)) + ylab("number") +
scale_y_continuous(expand=expansion(0.01,0)) + geom_vline(data=npi_df,aes(xintercept=date,color=name),size=1.1) + # linetype="dashed"
geom_rect(data=seeding_df,aes(xmin=min,xmax=max,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.4)
countryval="Somalia"; params=cm_parameters_SEI3R(gsub("Sudan|Somalia","Ethiopia",countryval),
date_start="2019-11-01",date_end="2020-11-01")
# country
params$pop[[1]]$name=countryval
# set population Somalia --> Mogadishu
params$pop[[1]]$size=somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
# seeding
npi_on_day=min(OxCGRT_input$date[OxCGRT_input$NPI_on>0]);
seeding_t_window = sapply(c(as.Date("2019-12-15"),npi_on_day),function(x) as.numeric(x-as.Date(params$date0)))
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=1) # x new infections/day for n days
# infections start in individuals aged 20-50
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
### add death process to model ------
params$processes <- list(cm_multinom_process("Ip",outcomes=data.table(death=somalia_agegroups_IFR$ifr_mean),
delays=data.table(death=cm_delay_gamma(22, 22, 60, 1/4)$p), report="o"))
# suscept and clinical fraction age dependent
suscept_clinfract_posteriors_davies2010<-read_csv("data/suscept_clinfract_posteriors_davies2010.csv")
params$pop[[1]]$y=subset(suscept_clinfract_posteriors_davies2010,name %in% "clin_fract")$value
# delta_clinfr=0.3; fun_lin_approx_agedep_par(agegroups=somalia_agegroups_IFR,min_val=0.1,max_val=0.75,rep_min=3,rep_max=5)
target_R0=1.8
# change susceptibility to get R0
params$pop[[1]]$u=subset(suscept_clinfract_posteriors_davies2010,name %in% "susceptibility")$value*(target_R0/cm_calc_R0(params,1))
# NPIs
# first="2020-03-19","2020-05-28"
NPI_phases=list(first=c("2020-03-19","2020-05-28"),second=c("2020-05-29","2020-06-30"),third=c("2020-07-01","2020-09-24"))
NPIvals=sapply(NPI_phases,function(x) mean(OxCGRT_input$OxCGRT_scaled[OxCGRT_input$date>as.Date(x)[1]&OxCGRT_input$date<as.Date(x)[2]]))
k_compl=0.4
for (k in 1:length(NPIvals)) { # setup for version 1
if (cm_version==1) {if (k==1) {params$pop[[1]]$schedule=NULL; iv=cm_iv_build(params)} # sets up data structure for interventions
cm_iv_contact(iv, NPI_phases[[k]][1], NPI_phases[[k]][2], 1-(1-as.numeric(rep(NPIvals[k],4)))*k_compl)
if (k==length(NPIvals)) {params=cm_iv_apply(params,iv)} } else { # sets the "schedule" parameter to follow interventions in iv
# version 2
params$schedule[[k]]=list(parameter="contact",pops=numeric(),mode="multiply",
values=list(rep(NPIvals[k],4),rep(1,4)),times=NPI_phases[[k]])} }
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
# selvars=c("cases","subclinical","death_o")
# covidm_simul_agesep=fcn_covidm_df(run$dynamics,sel_vars=c("cases","subclinical","death_o","R"),params)
# sum of age groups
compartm_types=list(case_vars=c("cases","subclinical","Ia","Ip","Is","S","R"),death_vars=c("D","death_o"))
dynamics_type=list(cumul=c("D","R","S"),incid=c("cases","subclinical","death_o"),preval=c("Ia","Ip","Is"))
covidm_simul=fcn_covidm_process_output(run$dynamics,filter_vars=c("E","foi","cases_reported"),
compartm_types,dynamics_type,populval=mogadishu_popul,params)
# PLOT
# df for npi and seeding
npi_df=data.frame(on_off=c("on","off"),NPI_phases) %>% pivot_longer(!on_off) %>% mutate(date=as.Date(value)) %>% filter(on_off %in% "on")
seeding_df=data.frame(seed_date=unique(covidm_simul$date)[unique(params$pop[[1]]$seed_times)]) %>% summarise(min=min(seed_date),max=max(seed_date))
# make the plot
ggplot(subset(covidm_simul,!dynam_type %in% "preval")) + geom_area(aes(x=date,y=value,fill=compartment),color="black",size=0.3) +
facet_wrap(dynam_type~compartm_type,scales="free") + theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) +
scale_x_date(limits=as.Date(c("2019-11-30","2020-10-15")),date_breaks="2 weeks",expand=expansion(0,0)) + ylab("number") +
scale_y_continuous(expand=expansion(0.01,0)) + geom_vline(data=npi_df,aes(xintercept=date,color=name),size=1.1) + # linetype="dashed"
geom_rect(data=seeding_df,aes(xmin=min,xmax=max,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.4)
params$time0
params$time1
params$date0 + params$time1
as.Date(params$date0) + params$time1
as.Date(params$date0)
as.Date(params$date0) +12
as.Date(params$date0) + params$time1
params$time1
cclass()params$time1)
class(params$time1)
as.Date(params$time1)
as.Date(c(params$date0,params$time1))
ggplot(subset(covidm_simul,!dynam_type %in% "preval")) + geom_area(aes(x=date,y=value,fill=compartment),color="black",size=0.3) +
facet_wrap(dynam_type~compartm_type,scales="free") + theme_bw() + standard_theme + theme(axis.text.x=element_text(vjust=0.5)) +
scale_x_date(limits=as.Date(c(params$date0,params$time1)),date_breaks="2 weeks",expand=expansion(0,0)) + ylab("number") +
scale_y_continuous(expand=expansion(0.01,0)) + geom_vline(data=npi_df,aes(xintercept=date,color=name),size=1.1) + # linetype="dashed"
geom_rect(data=seeding_df,aes(xmin=min,xmax=max,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.4)
tail(covidm_simul,3)
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
# selvars=c("cases","subclinical","death_o")
# covidm_simul_agesep=fcn_covidm_df(run$dynamics,sel_vars=c("cases","subclinical","death_o","R"),params)
# sum of age groups
compartm_types=list(case_vars=c("cases","subclinical","Ia","Ip","Is","S","R"),death_vars=c("D","death_o"))
dynamics_type=list(cumul=c("D","R","S"),incid=c("cases","subclinical","death_o"),preval=c("Ia","Ip","Is"))
covidm_simul=fcn_covidm_process_output(run$dynamics,filter_vars=c("E","foi","cases_reported"),
compartm_types,dynamics_type,populval=mogadishu_popul,params)
tail(covidm_simul,3)
fcn_covidm_process_output
params$time1
params$time0
max(covidm_simul$date)
head(run$dynamics,2)
seq(as.Date(params$date0),as.Date(params$time1),1)
as.Date(params$date0:as.Date(params$time1)
as.Date(params$date0):as.Date(params$time1)
source("covid_LIC_fcns.R")
covidm_simul=fcn_covidm_process_output(run$dynamics,filter_vars=c("E","foi","cases_reported"),
compartm_types,dynamics_type,populval=mogadishu_popul,params)
head(run$dynamics,2)
source("covid_LIC_fcns.R")
covidm_simul=fcn_covidm_process_output(run$dynamics,filter_vars=c("E","foi","cases_reported"),
compartm_types,dynamics_type,populval=mogadishu_popul,params)
max(covidm_simul$t)
params$time1
max(run$dynamics$t)
params$time1
params$date0
params$time0
params$date0
max(run$dynamics$t)
params$pop[[1]]$size
sum(params$pop[[1]]$size)
minrun$dynamics$t)
min(run$dynamics$t)
unique(run$dynamics$t)
run$base_parameters
run$base_parameters$date0
run$base_parameters$time1
cm_parameters_SEI3R(gsub("Sudan|Somalia","Ethiopia",countryval),
date_start="2019-11-01",date_end="2020-11-01")
z=cm_simulate
rm(z)
z=cm_parameters_SEI3R(gsub("Sudan|Somalia","Ethiopia",countryval),date_start="2019-11-01",date_end="2020-11-01")
z$date0
z$time1
params$time1
run$base_parameters$time_step
run$base_parameters$time1
min(OxCGRT_input$date[OxCGRT_input$NPI_on>0])
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
countryval="Somalia"; params=cm_parameters_SEI3R(gsub("Sudan|Somalia","Ethiopia",countryval),
date_start="2019-11-01",date_end="2020-11-01")
# country
params$pop[[1]]$name=countryval
# set population Somalia --> Mogadishu
params$pop[[1]]$size=somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
# seeding
npi_on_day=min(OxCGRT_input$date[OxCGRT_input$NPI_on>0])
seeding_t_window = sapply(c(as.Date("2019-12-15"),npi_on_day),function(x) as.numeric(x-as.Date(params$date0)))
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=1) # x new infections/day for n days
# infections start in individuals aged 20-50
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
### add death process to model ------
params$processes <- list(cm_multinom_process("Ip",outcomes=data.table(death=somalia_agegroups_IFR$ifr_mean),
delays=data.table(death=cm_delay_gamma(22, 22, 60, 1/4)$p), report="o"))
# suscept and clinical fraction age dependent
suscept_clinfract_posteriors_davies2010<-read_csv("data/suscept_clinfract_posteriors_davies2010.csv")
params$pop[[1]]$y=subset(suscept_clinfract_posteriors_davies2010,name %in% "clin_fract")$value
# delta_clinfr=0.3; fun_lin_approx_agedep_par(agegroups=somalia_agegroups_IFR,min_val=0.1,max_val=0.75,rep_min=3,rep_max=5)
target_R0=1.8
# change susceptibility to get R0
params$pop[[1]]$u=subset(suscept_clinfract_posteriors_davies2010,name %in% "susceptibility")$value*(target_R0/cm_calc_R0(params,1))
# NPIs
# first="2020-03-19","2020-05-28"
NPI_phases=list(first=c("2020-03-19","2020-05-28"),second=c("2020-05-29","2020-06-30"),third=c("2020-07-01","2020-09-24"))
NPIvals=sapply(NPI_phases,function(x) mean(OxCGRT_input$OxCGRT_scaled[OxCGRT_input$date>as.Date(x)[1]&OxCGRT_input$date<as.Date(x)[2]]))
k_compl=0.4
for (k in 1:length(NPIvals)) { # setup for version 1
if (cm_version==1) {if (k==1) {params$pop[[1]]$schedule=NULL; iv=cm_iv_build(params)} # sets up data structure for interventions
cm_iv_contact(iv, NPI_phases[[k]][1], NPI_phases[[k]][2], 1-(1-as.numeric(rep(NPIvals[k],4)))*k_compl)
if (k==length(NPIvals)) {params=cm_iv_apply(params,iv)} } else { # sets the "schedule" parameter to follow interventions in iv
# version 2
params$schedule[[k]]=list(parameter="contact",pops=numeric(),mode="multiply",
values=list(rep(NPIvals[k],4),rep(1,4)),times=NPI_phases[[k]])} }
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
params$pop[[1]]$seed_times
params$pop[[1]]$dist_seed_ages
rm(params)
countryval="Somalia"; params=cm_parameters_SEI3R(gsub("Sudan|Somalia","Ethiopia",countryval),
date_start="2019-11-01",date_end="2020-11-01")
# country
params$pop[[1]]$name=countryval
# set population Somalia --> Mogadishu
params$pop[[1]]$size=somalia_agegroups_IFR$agegroupsize*(mogadishu_popul/sum(somalia_agegroups_IFR$agegroupsize))
# seeding
npi_on_day=min(OxCGRT_input$date[OxCGRT_input$NPI_on>0])
seeding_t_window = sapply(c(as.Date("2019-12-15"),npi_on_day),function(x) as.numeric(x-as.Date(params$date0)))
params$pop[[1]]$seed_times=rep(seeding_t_window[1]:seeding_t_window[2],each=1) # x new infections/day for n days
# infections start in individuals aged 20-50
params$pop[[1]]$dist_seed_ages=cm_age_coefficients(20,60,5*(0:length(params$pop[[1]]$size)))
### add death process to model ------
params$processes <- list(cm_multinom_process("Ip",outcomes=data.table(death=somalia_agegroups_IFR$ifr_mean),
delays=data.table(death=cm_delay_gamma(22, 22, 60, 1/4)$p), report="o"))
# suscept and clinical fraction age dependent
suscept_clinfract_posteriors_davies2010<-read_csv("data/suscept_clinfract_posteriors_davies2010.csv")
params$pop[[1]]$y=subset(suscept_clinfract_posteriors_davies2010,name %in% "clin_fract")$value
# delta_clinfr=0.3; fun_lin_approx_agedep_par(agegroups=somalia_agegroups_IFR,min_val=0.1,max_val=0.75,rep_min=3,rep_max=5)
target_R0=1.8
# change susceptibility to get R0
params$pop[[1]]$u=subset(suscept_clinfract_posteriors_davies2010,name %in% "susceptibility")$value*(target_R0/cm_calc_R0(params,1))
# NPIs
# first="2020-03-19","2020-05-28"
NPI_phases=list(first=c("2020-03-19","2020-05-28"),second=c("2020-05-29","2020-06-30"),third=c("2020-07-01","2020-09-24"))
NPIvals=sapply(NPI_phases,function(x) mean(OxCGRT_input$OxCGRT_scaled[OxCGRT_input$date>as.Date(x)[1]&OxCGRT_input$date<as.Date(x)[2]]))
k_compl=0.4
for (k in 1:length(NPIvals)) { # setup for version 1
if (cm_version==1) {if (k==1) {params$pop[[1]]$schedule=NULL; iv=cm_iv_build(params)} # sets up data structure for interventions
cm_iv_contact(iv, NPI_phases[[k]][1], NPI_phases[[k]][2], 1-(1-as.numeric(rep(NPIvals[k],4)))*k_compl)
if (k==length(NPIvals)) {params=cm_iv_apply(params,iv)} } else { # sets the "schedule" parameter to follow interventions in iv
# version 2
params$schedule[[k]]=list(parameter="contact",pops=numeric(),mode="multiply",
values=list(rep(NPIvals[k],4),rep(1,4)),times=NPI_phases[[k]])} }
### ### ### ### ### ### ### ### ### ###
# RUN SIMULATION
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
z
rm(z)
z
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
params$pop[[1]]$type
params$pop[[1]]$size
params$pop[[1]]$group_names
params$pop[[1]]$name
params$pop[[1]]$seed_times
params$pop[[1]]$u
params$pop[[1]]$y
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
ls()
params
ptm <- proc.time(); run=cm_simulate(params,1); proc.time()-ptm
